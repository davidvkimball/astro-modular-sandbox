/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var ue=Object.defineProperty;var _e=Object.getOwnPropertyDescriptor;var be=Object.getOwnPropertyNames;var Fe=Object.prototype.hasOwnProperty;var w=(u,t)=>{for(var e in t)ue(u,e,{get:t[e],enumerable:!0})},Me=(u,t,e,a)=>{if(t&&typeof t=="object"||typeof t=="function")for(let n of be(t))!Fe.call(u,n)&&n!==e&&ue(u,n,{get:()=>t[n],enumerable:!(a=_e(t,n))||a.enumerable});return u};var Ae=u=>Me(ue({},"__esModule",{value:!0}),u);var it={};w(it,{default:()=>ge});module.exports=Ae(it);var Pe=require("obsidian");var N=["Inter","Roboto","Open Sans","Lato","Poppins","Source Sans Pro","Nunito","Montserrat","Playfair Display","Merriweather","Lora","Crimson Text","PT Serif","Libre Baskerville","Fira Code","JetBrains Mono","Source Code Pro","IBM Plex Mono","Cascadia Code"],D={runWizardOnStartup:!0,currentTemplate:"standard",currentTheme:"oxygen",contentOrganization:"file-based",siteInfo:{site:"https://astro-modular.netlify.app",title:"Astro Modular",description:"A flexible blog theme designed for Obsidian users.",author:"David V. Kimball",language:"en"},navigation:{pages:[{title:"Posts",url:"/posts"},{title:"Projects",url:"/projects"},{title:"Docs",url:"/docs"},{title:"About",url:"/about"},{title:"GitHub",url:"https://github.com/davidvkimball/astro-modular"}],social:[{title:"X",url:"https://x.com/davidvkimball",icon:"x-twitter"},{title:"GitHub",url:"https://github.com/davidvkimball",icon:"github"}]},features:{commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!0,comments:!1,graphView:!0,postNavigation:!0,scrollToTop:!0,darkModeToggleButton:"both",showSocialIconsInFooter:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og",linkedMentionsCompact:!1,profilePicture:!1},typography:{headingFont:"Inter",proseFont:"Inter",monoFont:"JetBrains Mono",fontSource:"local",customFonts:{heading:"",prose:"",mono:""}},optionalFeatures:{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}},deployment:{platform:"netlify"},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file",indexFileName:"index"},imageInserterSettings:{valueFormat:"[[attachments/{image-url}]]",insertFormat:"[[attachments/{image-url}]]"}}},P=[{id:"oxygen",name:"Oxygen",description:"Modern, clean design",previewColors:["#075985","#38bdf8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#020617"},{id:"minimal",name:"Minimal",description:"Understated with high contrast",previewColors:["#2d383c","#87bfcf"],backgroundColorLight:"#fafafa",backgroundColorDark:"#1a1a1a"},{id:"atom",name:"Atom",description:"Dark theme with vibrant accents",previewColors:["#075985","#578af2"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#181a1f"},{id:"ayu",name:"Ayu",description:"Clean theme with warm colors",previewColors:["#99521a","#ff9933"],backgroundColorLight:"#f8f8f0",backgroundColorDark:"#0f1419"},{id:"catppuccin",name:"Catppuccin",description:"Pastel color palette",previewColors:["#95624f","#df7763"],backgroundColorLight:"#fef7ed",backgroundColorDark:"#181825"},{id:"charcoal",name:"Charcoal",description:"Dark, professional look",previewColors:["#202020","#c0c0c0"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#000000"},{id:"dracula",name:"Dracula",description:"Dark theme with purple accents",previewColors:["#7c3aed","#a78bfa"],backgroundColorLight:"#f8f8f2",backgroundColorDark:"#191a21"},{id:"everforest",name:"Everforest",description:"Soft, warm colors",previewColors:["#5a7a5a","#83c092"],backgroundColorLight:"#f7f6f3",backgroundColorDark:"#2d353b"},{id:"flexoki",name:"Flexoki",description:"Based on Material Design 3",previewColors:["#16504a","#4dbdb5"],backgroundColorLight:"#fefefe",backgroundColorDark:"#100f0f"},{id:"gruvbox",name:"Gruvbox",description:"Retro groove color scheme",previewColors:["#7a5412","#f78b33"],backgroundColorLight:"#fbf1c7",backgroundColorDark:"#1d2021"},{id:"macos",name:"macOS",description:"Native macOS appearance",previewColors:["#002e66","#339fff"],backgroundColorLight:"#f5f5f7",backgroundColorDark:"#141414"},{id:"nord",name:"Nord",description:"Arctic-inspired color palette",previewColors:["#2e4c63","#5e94b8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#2e3440"},{id:"obsidian",name:"Obsidian",description:"Matches Obsidian's default theme",previewColors:["#522994","#9c75ff"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#0a0a0a"},{id:"rose-pine",name:"Ros\xE9 Pine",description:"All natural pine, faux fir, and winter",previewColors:["#ab2142","#ef97a9"],backgroundColorLight:"#faf4ed",backgroundColorDark:"#191724"},{id:"sky",name:"Sky",description:"Light, airy design",previewColors:["#136194","#46aad0"],backgroundColorLight:"#f0f9ff",backgroundColorDark:"#232729"},{id:"solarized",name:"Solarized",description:"Precision colors for machines and people",previewColors:["#0e3754","#339fff"],backgroundColorLight:"#fdf6e3",backgroundColorDark:"#002b36"},{id:"things",name:"Things",description:"Clean, minimal design",previewColors:["#1e3a8a","#4d95f7"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#17191c"}],E=[{id:"standard",name:"Standard",description:"Full-featured blog with all default options enabled",features:["Command palette","Table of contents","Reading time","Linked mentions","Footer","Social icons","Scroll to top","Dark mode toggle"],recommended:!0},{id:"compact",name:"Compact",description:"Balanced setup for smaller sites with optimized layout",features:["Command palette","Table of contents","Reading time","Compact linked mentions","Custom aspect ratio"],recommended:!1},{id:"minimal",name:"Minimal",description:"Clean, simple blog with minimal features and content",features:["Command palette","Search posts/pages","Minimal navigation"],recommended:!1},{id:"custom",name:"Custom",description:"Granular control over every setting - opens config.ts",features:["All features configurable"],recommended:!1}];var K=require("obsidian");var ve=require("obsidian");var k=class{constructor(t){this.plugin=t;let e=t.settings;this.state={currentStep:1,totalSteps:10,selectedTemplate:e.currentTemplate,selectedTheme:e.currentTheme,selectedContentOrg:e.contentOrganization,selectedSiteInfo:e.siteInfo,selectedNavigation:e.navigation,selectedFeatures:e.features,selectedTypography:e.typography,selectedOptionalFeatures:e.optionalFeatures||{},selectedDeployment:e.deployment.platform,runWizardOnStartup:e.runWizardOnStartup}}getState(){return this.state}updateState(t){this.state={...this.state,...t}}setState(t){this.state={...this.state,...t}}nextStep(){this.state.currentStep<this.state.totalSteps&&this.state.currentStep++}previousStep(){this.state.currentStep>1&&this.state.currentStep--}canGoNext(){return this.state.currentStep<this.state.totalSteps}canGoPrevious(){return this.state.currentStep>1}getProgress(){return this.state.currentStep/this.state.totalSteps*100}buildFinalSettings(){let t=this.plugin.settings;t.currentTemplate=this.state.selectedTemplate,t.currentTheme=this.state.selectedTheme,t.contentOrganization=this.state.selectedContentOrg,t.siteInfo=this.state.selectedSiteInfo,t.navigation=this.state.selectedNavigation,t.features=this.state.selectedFeatures,t.typography=this.state.selectedTypography,t.optionalFeatures=this.state.selectedOptionalFeatures,t.deployment.platform=this.state.selectedDeployment,t.runWizardOnStartup=this.state.runWizardOnStartup}};var h=class{constructor(t,e,a,n){this.app=t,this.modal=e,this.stateManager=a,this.plugin=n}nextStep(){this.stateManager.nextStep(),this.modal.close()}previousStep(){this.stateManager.previousStep(),this.modal.close()}updateState(t){this.stateManager.updateState(t)}getState(){return this.stateManager.getState()}};var R=class extends h{render(t){var a,n,s,i,o,r;let e=this.getState();t.innerHTML=`
			<div class="welcome-content">
				<h2>Welcome to Astro Modular!</h2>
				<p>This wizard will help you set up your Astro Modular theme with the perfect configuration for your needs.</p>
				
				<div class="checkbox-option">
					<input type="checkbox" id="run-wizard-startup" ${e.runWizardOnStartup?"checked":""}>
					<label for="run-wizard-startup">Run this wizard on startup</label>
				</div>
				
				<div class="site-info-form">
					<h3>Site Information</h3>
					<div class="form-group">
						<label for="site-url">URL</label>
						<input type="text" id="site-url" value="${e.selectedSiteInfo.site}" placeholder="https://astro-modular.netlify.app">
					</div>
					<div class="form-group">
						<label for="site-title">Title</label>
						<input type="text" id="site-title" value="${e.selectedSiteInfo.title}" placeholder="Astro Modular">
					</div>
					<div class="form-group">
						<label for="site-description">Description</label>
						<input type="text" id="site-description" value="${e.selectedSiteInfo.description}" placeholder="A flexible blog theme designed for Obsidian users.">
					</div>
					<div class="form-group">
						<label for="site-author">Author Name</label>
						<input type="text" id="site-author" value="${e.selectedSiteInfo.author}" placeholder="David V. Kimball">
					</div>
					<div class="form-group">
						<label for="site-language">Language</label>
						<input type="text" id="site-language" value="${e.selectedSiteInfo.language}" placeholder="en">
					</div>
				</div>
			</div>
		`,(a=t.querySelector("#run-wizard-startup"))==null||a.addEventListener("change",l=>{let c=l.target;this.updateState({runWizardOnStartup:c.checked})}),(n=t.querySelector("#site-url"))==null||n.addEventListener("input",l=>{let c=this.getState();this.updateState({selectedSiteInfo:{...c.selectedSiteInfo,site:l.target.value}})}),(s=t.querySelector("#site-title"))==null||s.addEventListener("input",l=>{let c=this.getState();this.updateState({selectedSiteInfo:{...c.selectedSiteInfo,title:l.target.value}})}),(i=t.querySelector("#site-description"))==null||i.addEventListener("input",l=>{let c=this.getState();this.updateState({selectedSiteInfo:{...c.selectedSiteInfo,description:l.target.value}})}),(o=t.querySelector("#site-author"))==null||o.addEventListener("input",l=>{let c=this.getState();this.updateState({selectedSiteInfo:{...c.selectedSiteInfo,author:l.target.value}})}),(r=t.querySelector("#site-language"))==null||r.addEventListener("input",l=>{let c=this.getState();this.updateState({selectedSiteInfo:{...c.selectedSiteInfo,language:l.target.value}})})}};var me=require("obsidian"),$=class extends h{render(t){let e=this.getState();t.innerHTML=`
			<div class="template-selection">
				<h2>Choose your preset</h2>
				<p>Select a preset that best fits your content type and goals.</p>
				<div class="template-options">
					${E.map(a=>`
						<div class="template-option ${e.selectedTemplate===a.id?"selected":""}" 
							 data-template="${a.id}">
							<div class="template-header">
								<h3>${a.name}</h3>
								${a.recommended?'<span class="recommended">Default</span>':""}
							</div>
							<p class="template-description">${a.description}</p>
							<div class="template-features">
								${a.features.map(n=>`<span class="feature-tag">${n}</span>`).join("")}
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,t.querySelectorAll(".template-option").forEach(a=>{a.addEventListener("click",()=>{let n=a.getAttribute("data-template");if(n){if(this.updateState({selectedTemplate:n}),n==="custom")try{let s=require("fs"),i=require("path"),{shell:o}=require("electron"),r=this.app.vault.adapter.basePath||this.app.vault.adapter.path,l=typeof r=="string"?r:r.toString(),c=i.join(l,"..","config.ts");s.existsSync(c)||s.writeFileSync(c,`// Astro Modular Configuration
// Customize your settings here

export const siteConfig = {
  // Add your configuration here
};
`),o.openPath(c),new me.Notice("Opening config.ts for custom configuration"),this.modal.close();return}catch(s){new me.Notice(`Error opening config file: ${s instanceof Error?s.message:String(s)}`)}this.render(t)}})})}};var H=class extends h{render(t){let e=this.getState(),a=this.isObsidianDarkMode();t.innerHTML=`
			<div class="theme-selection">
				<h2>Choose your theme</h2>
				<p>Select a color scheme that matches your style and content.</p>
				<div class="theme-options">
					${P.map(n=>`
						<div class="theme-option ${e.selectedTheme===n.id?"selected":""}" 
							 data-theme="${n.id}" 
							 style="background: ${a?n.backgroundColorDark:n.backgroundColorLight};">
							<div class="theme-preview" style="background: linear-gradient(135deg, ${n.previewColors.join(", ")});">
								<div class="theme-preview-content">
									<div class="preview-text">Sample Text</div>
									<div class="preview-accent">Accent</div>
								</div>
							</div>
							<div class="theme-info">
								<h3>${n.name}</h3>
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,t.querySelectorAll(".theme-option").forEach(n=>{n.addEventListener("click",()=>{let s=n.getAttribute("data-theme");s&&(this.updateState({selectedTheme:s}),this.render(t))})})}isObsidianDarkMode(){let t=document.body,e=t.classList.contains("theme-dark")||t.classList.contains("dark"),a=getComputedStyle(document.documentElement),s=a.getPropertyValue("color-scheme").trim()==="dark",i=a.getPropertyValue("--background-primary").trim(),o=Boolean(i&&(i.includes("#")&&parseInt(i.slice(1,3),16)<128||i.includes("rgb")&&i.includes("0, 0, 0")||i.includes("hsl")&&i.includes("0, 0%, 0%")));return e||s||o}};var B=class extends h{render(t){var a,n,s,i,o,r,l,c,d,g;let e=this.getState();t.innerHTML=`
			<div class="font-selection">
				<h2>Choose your fonts</h2>
				<p>Select fonts for headings, body text, and code.</p>
				<div class="font-options">
					<div class="font-setting">
						<label>Heading Font</label>
						<select id="heading-font">
							${N.map(p=>`<option value="${p}" ${e.selectedTypography.headingFont===p?"selected":""}>${p}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Body Font</label>
						<select id="prose-font">
							${N.map(p=>`<option value="${p}" ${e.selectedTypography.proseFont===p?"selected":""}>${p}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Monospace Font</label>
						<select id="mono-font">
							${N.map(p=>`<option value="${p}" ${e.selectedTypography.monoFont===p?"selected":""}>${p}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Font Source</label>
						<select id="font-source">
							<option value="local" ${e.selectedTypography.fontSource==="local"?"selected":""}>Local (Google Fonts)</option>
							<option value="cdn" ${e.selectedTypography.fontSource==="cdn"?"selected":""}>CDN (Custom)</option>
						</select>
					</div>
					${e.selectedTypography.fontSource==="cdn"?`
						<div class="font-setting">
							<label>Custom Font URLs (comma-separated)</label>
							<input type="text" id="custom-fonts" placeholder="https://fonts.googleapis.com/css2?family=Custom+Font:wght@400;600&display=swap">
						</div>
						<div class="font-setting">
							<label>Heading Font Name</label>
							<input type="text" id="custom-heading-font" value="${((a=e.selectedTypography.customFonts)==null?void 0:a.heading)||""}" placeholder="Custom Heading Font">
						</div>
						<div class="font-setting">
							<label>Body Font Name</label>
							<input type="text" id="custom-prose-font" value="${((n=e.selectedTypography.customFonts)==null?void 0:n.prose)||""}" placeholder="Custom Body Font">
						</div>
						<div class="font-setting">
							<label>Monospace Font Name</label>
							<input type="text" id="custom-mono-font" value="${((s=e.selectedTypography.customFonts)==null?void 0:s.mono)||""}" placeholder="Custom Monospace Font">
						</div>
					`:""}
				</div>
			</div>
		`,(i=t.querySelector("#heading-font"))==null||i.addEventListener("change",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,headingFont:p.target.value}})}),(o=t.querySelector("#prose-font"))==null||o.addEventListener("change",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,proseFont:p.target.value}})}),(r=t.querySelector("#mono-font"))==null||r.addEventListener("change",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,monoFont:p.target.value}})}),(l=t.querySelector("#font-source"))==null||l.addEventListener("change",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,fontSource:p.target.value}}),this.render(t)}),(c=t.querySelector("#custom-heading-font"))==null||c.addEventListener("input",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,customFonts:{...m.selectedTypography.customFonts,heading:p.target.value}}})}),(d=t.querySelector("#custom-prose-font"))==null||d.addEventListener("input",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,customFonts:{...m.selectedTypography.customFonts,prose:p.target.value}}})}),(g=t.querySelector("#custom-mono-font"))==null||g.addEventListener("input",p=>{let m=this.getState();this.updateState({selectedTypography:{...m.selectedTypography,customFonts:{...m.selectedTypography.customFonts,mono:p.target.value}}})})}};var z=class extends h{render(t){let e=this.getState();t.innerHTML=`
			<div class="content-org-selection">
				<h2>Content organization</h2>
				<p>Choose how you want to organize your content and assets.</p>
				<div class="org-options">
					<div class="org-option ${e.selectedContentOrg==="file-based"?"selected":""}" 
						 data-org="file-based">
						<div class="org-header">
							<h3>File-based</h3>
							<span class="default-badge">Default</span>
						</div>
						<p>Single markdown files with images in attachments subfolder</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post.md
\u2514\u2500\u2500 attachments/
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
					<div class="org-option ${e.selectedContentOrg==="folder-based"?"selected":""}" 
						 data-org="folder-based">
						<div class="org-header">
							<h3>Folder-based</h3>
						</div>
						<p>Each post gets its own folder with co-located assets</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post/
\u2502   \u251C\u2500\u2500 index.md
\u2502   \u2514\u2500\u2500 image.jpg
\u2514\u2500\u2500 another-post/
    \u251C\u2500\u2500 index.md
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
				</div>
			</div>
		`,t.querySelectorAll(".org-option").forEach(a=>{a.addEventListener("click",()=>{let n=a.getAttribute("data-org");n&&(this.updateState({selectedContentOrg:n}),this.render(t))})})}};var W=class extends h{render(t){let e=this.getState();t.innerHTML=`
			<div class="navigation-selection">
				<h2>Navigation setup</h2>
				<p>Configure your site navigation and social links.</p>
				
				<div class="navigation-sections">
					<div class="nav-section">
						<h3>Navigation Pages</h3>
						<p>Add pages to your main navigation menu.</p>
						<div class="nav-items" id="pages-list">
							${e.selectedNavigation.pages.map((a,n)=>`
								<div class="nav-item" data-index="${n}" draggable="true">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" placeholder="Page Title" value="${a.title}" draggable="false">
											<input type="text" class="nav-url" placeholder="/page-url" value="${a.url}" draggable="false">
										</div>
										<button class="nav-remove mod-warning" data-index="${n}">Remove</button>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add" id="add-page">+ Add Page</button>
					</div>
					
					<div class="nav-section">
						<h3>Social Links</h3>
						<p>Add social media links for your footer.</p>
						<div class="nav-items" id="social-list">
							${e.selectedNavigation.social.map((a,n)=>`
								<div class="nav-item" data-index="${n}" draggable="true">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" placeholder="Social Title" value="${a.title}" draggable="false">
											<input type="text" class="nav-url" placeholder="https://example.com" value="${a.url}" draggable="false">
										</div>
										<button class="nav-remove mod-warning" data-index="${n}">Remove</button>
									</div>
									<div class="nav-icon-row">
										<input type="text" class="nav-icon" placeholder="icon-name" value="${a.icon||""}" draggable="false">
										<div class="nav-icon-help">
											<small>Icon names from FontAwesome Brands</small>
										</div>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add" id="add-social">+ Add Social Link</button>
					</div>
				</div>
			</div>
		`,this.setupEventHandlers(t)}setupEventHandlers(t){var a,n,s,i;let e=this.getState();(a=t.querySelector("#pages-list"))==null||a.addEventListener("input",o=>{let r=o.target;if(r.classList.contains("nav-title")||r.classList.contains("nav-url")){let l=r.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0"),d=r.classList.contains("nav-title")?"title":"url";e.selectedNavigation.pages[c][d]=r.value}}),(n=t.querySelector("#social-list"))==null||n.addEventListener("input",o=>{let r=o.target;if(r.classList.contains("nav-title")||r.classList.contains("nav-url")||r.classList.contains("nav-icon")){let l=r.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0"),d=r.classList.contains("nav-title")?"title":r.classList.contains("nav-url")?"url":"icon";e.selectedNavigation.social[c][d]=r.value}}),(s=t.querySelector("#add-page"))==null||s.addEventListener("click",()=>{e.selectedNavigation.pages.push({title:"New Page",url:"/new-page"}),this.render(t)}),(i=t.querySelector("#add-social"))==null||i.addEventListener("click",()=>{e.selectedNavigation.social.push({title:"New Social",url:"https://example.com",icon:""}),this.render(t)}),t.addEventListener("click",o=>{let r=o.target;if(r.classList.contains("nav-remove")){let l=parseInt(r.getAttribute("data-index")||"0");r.closest("#pages-list")?e.selectedNavigation.pages.splice(l,1):e.selectedNavigation.social.splice(l,1),this.render(t)}}),this.setupDragAndDrop(t)}setupDragAndDrop(t){let e=this.getState(),a=null;t.addEventListener("dragstart",n=>{let s=n.target;s.classList.contains("nav-item")&&(a=s,s.style.opacity="0.5")}),t.addEventListener("dragend",n=>{let s=n.target;s.classList.contains("nav-item")&&(s.style.opacity="1",a=null)}),t.addEventListener("dragover",n=>{n.preventDefault();let s=n.target;if(s.classList.contains("nav-item")&&a&&s!==a){let i=s.getBoundingClientRect(),o=i.top+i.height/2;n.clientY<o?(s.style.borderTop="2px solid var(--interactive-accent)",s.style.borderBottom="none"):(s.style.borderBottom="2px solid var(--interactive-accent)",s.style.borderTop="none")}}),t.addEventListener("dragleave",n=>{let s=n.target;s.classList.contains("nav-item")&&(s.style.borderTop="none",s.style.borderBottom="none")}),t.addEventListener("drop",n=>{n.preventDefault();let s=n.target;if(s.classList.contains("nav-item")&&a){let i=parseInt(s.getAttribute("data-index")||"0"),o=parseInt(a.getAttribute("data-index")||"0"),r=s.closest("#pages-list"),l=s.closest("#social-list");if(s.style.borderTop="none",s.style.borderBottom="none",i!==o){if(r){let c=e.selectedNavigation.pages.splice(o,1)[0];e.selectedNavigation.pages.splice(i,0,c)}else if(l){let c=e.selectedNavigation.social.splice(o,1)[0];e.selectedNavigation.social.splice(i,0,c)}this.render(t)}}})}};var U=class extends h{render(t){let e=this.getState();t.innerHTML=`
			<div class="features-selection">
				<h2>Optional features</h2>
				<p>Enable or disable specific features for your site.</p>
				<div class="features-list">
					${this.renderFeatureToggle("profilePicture","Profile picture","Show profile picture in header",e,!1)}
					${this.renderFeatureToggle("comments","Comments","Enable comment system",e,!1)}
				</div>
			</div>
		`,this.setupEventHandlers(t)}renderFeatureToggle(t,e,a,n,s=!1){let i=n.selectedFeatures[t]!==void 0?n.selectedFeatures[t]:s;return`
			<div class="feature-setting">
				<div class="feature-toggle">
					<input type="checkbox" id="feature-${t}" ${i?"checked":""}>
					<label for="feature-${t}" class="toggle-slider"></label>
					<div class="feature-label">
						<strong>${e}</strong>
						<p>${a}</p>
					</div>
				</div>
			</div>
		`}setupEventHandlers(t){let e=this.getState();t.querySelectorAll('.feature-toggle input[type="checkbox"]').forEach(a=>{a.addEventListener("change",n=>{let s=n.target,i=s.id.replace("feature-","");this.updateState({selectedFeatures:{...e.selectedFeatures,[i]:s.checked}})})})}};var V=class extends h{render(t){let e=this.getState();t.innerHTML=`
			<div class="deployment-selection">
				<h2>Deployment platform</h2>
				<p>Choose your preferred deployment platform.</p>
				<div class="deployment-options">
					<div class="deployment-option ${e.selectedDeployment==="netlify"?"selected":""}" 
						 data-deployment="netlify">
						<div class="deployment-header">
							<h3>Netlify</h3>
						</div>
						<p>Automatic deployments from Git with built-in form handling and serverless functions.</p>
					</div>
					<div class="deployment-option ${e.selectedDeployment==="vercel"?"selected":""}" 
						 data-deployment="vercel">
						<div class="deployment-header">
							<h3>Vercel</h3>
						</div>
						<p>Excellent performance with edge functions and automatic HTTPS.</p>
					</div>
					<div class="deployment-option ${e.selectedDeployment==="github-pages"?"selected":""}" 
						 data-deployment="github-pages">
						<div class="deployment-header">
							<h3>GitHub Pages</h3>
						</div>
						<p>Free hosting directly from your GitHub repository.</p>
					</div>
				</div>
			</div>
		`,t.querySelectorAll(".deployment-option").forEach(a=>{a.addEventListener("click",()=>{let n=a.getAttribute("data-deployment");n&&(this.updateState({selectedDeployment:n}),this.render(t))})})}};var x=require("obsidian"),j=class extends h{async render(t){let e=this.getState(),a=await this.plugin.pluginManager.getPluginStatus();t.innerHTML=`
			<div class="plugin-config">
				<h2>Plugin configuration</h2>
				<p>Configure your Obsidian plugins for optimal integration.</p>
				
				<div class="plugin-status">
      ${a.map(n=>`
						<div class="plugin-item ${n.installed?"installed":"missing"}">
							<div class="plugin-icon">
								${n.installed?'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"/></svg>':'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6L6 18M6 6l12 12"/></svg>'}
							</div>
							<div class="plugin-info">
								<h3>${n.name}</h3>
								<p>${n.installed?n.enabled?"Enabled":"Disabled":"Not installed"}</p>
							</div>
						</div>
					`).join("")}
				</div>
				
				<div class="config-options">
					<button class="mod-button mod-cta" id="configure-plugins">Configure Automatically</button>
					<button class="mod-button" id="show-instructions">Show Manual Instructions</button>
				</div>
			</div>
		`,this.setupEventHandlers(t)}setupEventHandlers(t){var a,n;let e=this.getState();(a=t.querySelector("#configure-plugins"))==null||a.addEventListener("click",async()=>{try{await this.plugin.pluginManager.configurePlugins(this.plugin.settings.pluginConfig)?new x.Notice("Plugins configured successfully!"):new x.Notice("Some plugins could not be configured automatically.")}catch(s){new x.Notice(`Error configuring plugins: ${s instanceof Error?s.message:String(s)}`)}}),(n=t.querySelector("#show-instructions"))==null||n.addEventListener("click",async()=>{try{let s=await this.plugin.pluginManager.getManualConfigurationInstructions(this.plugin.settings.pluginConfig),{Modal:i}=require("obsidian"),o=new i(this.app);o.titleEl.setText("Manual Configuration Instructions");let r=o.contentEl.createDiv();r.style.padding="20px",r.style.lineHeight="1.6";let l=s.split(`
`),c=null;l.forEach(d=>{let g=d.trim();if(g==="")r.createEl("br");else if(g.startsWith("## ")){c&&(c=null);let p=r.createEl("h2");p.setText(g.substring(3)),p.style.marginTop="20px",p.style.marginBottom="10px",p.style.fontSize="1.2em",p.style.fontWeight="bold"}else if(g.match(/^\d+\.\s/)){if(c||(c=r.createEl("ol"),c&&(c.style.marginLeft="20px",c.style.marginBottom="15px")),c){let p=c.createEl("li");p.style.marginBottom="5px",this.parseBoldText(p,g.replace(/^\d+\.\s/,""))}}else if(g.startsWith("- ")||g.startsWith("* ")){if(c||(c=r.createEl("ul"),c&&(c.style.marginLeft="20px",c.style.marginBottom="15px")),c){let p=c.createEl("li");p.style.marginBottom="5px",this.parseBoldText(p,g.substring(2))}}else{c&&(c=null);let p=r.createEl("p");p.style.marginBottom="10px",this.parseBoldText(p,g)}}),o.open()}catch(s){new x.Notice(`Error getting instructions: ${s instanceof Error?s.message:String(s)}`)}})}parseBoldText(t,e){e.split(/(\*\*.*?\*\*)/g).forEach(n=>{n.startsWith("**")&&n.endsWith("**")?t.createEl("strong").setText(n.substring(2,n.length-2)):n.trim()!==""&&t.appendText(n)})}};var q=require("obsidian");var Y=class extends h{render(t){let e=this.getState(),a=this.formatTemplateName(e.selectedTemplate),n=this.formatThemeName(e.selectedTheme),s=this.formatContentOrganization(e.selectedContentOrg),i=this.formatDeploymentName(e.selectedDeployment);t.innerHTML=`
			<div class="finalize-step">
				<h2>Finalize your configuration</h2>
				<p>Review your settings and complete the setup.</p>
				
				<div class="config-summary">
					<h3>Configuration Summary</h3>
					<div class="config-item">
						<strong>Template:</strong> ${a}
					</div>
					<div class="config-item">
						<strong>Theme:</strong> ${n}
					</div>
					<div class="config-item">
						<strong>Content Organization:</strong> ${s}
					</div>
					<div class="config-item">
						<strong>Deployment:</strong> ${i}
					</div>
					<div class="config-item">
						<strong>Site Title:</strong> ${e.selectedSiteInfo.title}
					</div>
					<div class="config-item">
						<strong>Site URL:</strong> ${e.selectedSiteInfo.site}
					</div>
				</div>
				
			</div>
		`,this.setupEventHandlers(t)}setupEventHandlers(t){}async completeWizard(){let t=this.getState();try{this.stateManager.buildFinalSettings();let e=this.plugin.settings;await this.plugin.configManager.applyPreset({name:e.currentTemplate,description:"",features:e.features,theme:e.currentTheme,contentOrganization:e.contentOrganization,config:e})?new q.Notice("Configuration applied successfully!"):new q.Notice("Failed to apply configuration. Check the console for errors."),this.stateManager.updateState({currentStep:this.stateManager.getState().totalSteps})}catch(e){new q.Notice(`Error completing wizard: ${e instanceof Error?e.message:String(e)}`)}}formatTemplateName(t){let e=E.find(a=>a.id===t);return e?e.name:t}formatThemeName(t){let e=P.find(a=>a.id===t);return e?e.name:t}formatContentOrganization(t){return t==="file-based"?"File-based":"Folder-based"}formatDeploymentName(t){switch(t){case"netlify":return"Netlify";case"vercel":return"Vercel";case"github-pages":return"GitHub Pages";default:return t}}};var I=class extends ve.Modal{constructor(e,a){super(e);this.plugin=a,this.stateManager=new k(a),this.steps=[new R(e,this,this.stateManager,this.plugin),new $(e,this,this.stateManager,this.plugin),new H(e,this,this.stateManager,this.plugin),new B(e,this,this.stateManager,this.plugin),new z(e,this,this.stateManager,this.plugin),new W(e,this,this.stateManager,this.plugin),new U(e,this,this.stateManager,this.plugin),new V(e,this,this.stateManager,this.plugin),new j(e,this,this.stateManager,this.plugin),new Y(e,this,this.stateManager,this.plugin)]}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("astro-modular-wizard"),this.renderCurrentStep()}onClose(){let{contentEl:e}=this;e.empty()}renderCurrentStep(){let{contentEl:e}=this,a=this.stateManager.getState();e.empty(),e.addClass("astro-modular-wizard"),this.renderHeader(e),this.renderProgress(e);let n=e.createDiv("wizard-content");this.renderStepContent(n),this.renderFooter(e)}renderHeader(e){let a=e.createDiv("wizard-header");a.innerHTML=`
			<h1>Astro Modular Setup</h1>
		`}renderProgress(e){let a=this.stateManager.getState(),n=e.createDiv("wizard-progress");n.innerHTML=`
			<div class="progress-bar">
				<div class="progress-fill" style="width: ${this.stateManager.getProgress()}%"></div>
			</div>
			<div class="progress-text">Step ${a.currentStep} of ${a.totalSteps}</div>
		`}async renderStepContent(e){let n=this.stateManager.getState().currentStep-1;n>=0&&n<this.steps.length&&await this.steps[n].render(e)}renderFooter(e){let a=this.stateManager.getState(),s=e.createDiv("wizard-footer").createDiv("wizard-buttons");if(this.stateManager.canGoPrevious()&&s.createEl("button",{text:"Previous",cls:"mod-button"}).addEventListener("click",()=>{this.stateManager.previousStep(),this.renderCurrentStep()}),this.stateManager.canGoNext()?s.createEl("button",{text:"Next",cls:"mod-button mod-cta"}).addEventListener("click",()=>{this.stateManager.nextStep(),this.renderCurrentStep()}):s.createEl("button",{text:"Complete Setup",cls:"mod-button mod-cta"}).addEventListener("click",async()=>{await this.steps[this.steps.length-1].completeWizard(),await this.plugin.saveData(this.plugin.settings),this.plugin.triggerSettingsRefresh(),this.close()}),this.stateManager.canGoNext()&&a.currentStep>1){let i=s.createEl("button",{text:"Skip",cls:"mod-button"});i.style.opacity="0.6",i.addEventListener("click",()=>{this.applyDefaultValuesForCurrentStep(),this.stateManager.nextStep(),this.renderCurrentStep()})}}applyDefaultValuesForCurrentStep(){switch(this.stateManager.getState().currentStep-1){case 1:this.stateManager.setState({selectedTemplate:"standard"});break;case 2:this.stateManager.setState({selectedTheme:"oxygen"});break;case 3:this.stateManager.setState({selectedTypography:{fontSource:"system",proseFont:"Inter",headingFont:"Inter",monoFont:"JetBrains Mono",customFonts:{prose:"",heading:"",mono:""}}});break;case 4:this.stateManager.setState({selectedContentOrg:"file-based"});break;case 5:break;case 6:this.stateManager.setState({selectedFeatures:{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}}});break;case 7:this.stateManager.setState({selectedDeployment:"netlify"});break;case 8:break}}};function Ee(u){u.addCommand({id:"open-settings",name:"Open Astro Modular Settings",callback:()=>{u.app.setting.open(),u.app.setting.openTabById(u.manifest.id)}}),u.addCommand({id:"run-setup-wizard",name:"Run Setup Wizard",callback:()=>{new I(u.app,u).open()}}),u.addCommand({id:"open-config",name:"Open config.ts",callback:async()=>{u.app.vault.getAbstractFileByPath("astro.config.ts")?await u.app.workspace.openLinkText("","astro.config.ts"):new K.Notice("Config file not found. Make sure you have an Astro project in this vault.")}}),u.addCommand({id:"apply-configuration",name:"Apply Current Configuration",callback:async()=>{new K.Notice("Configuration applied successfully!")}}),u.addCommand({id:"toggle-wizard-startup",name:"Toggle Wizard on Startup",callback:async()=>{let t=u.settings;t.runWizardOnStartup=!t.runWizardOnStartup,await u.saveData(t),new K.Notice(`Wizard on startup ${t.runWizardOnStartup?"enabled":"disabled"}`)}})}var Ne=require("obsidian");var fe=require("obsidian");var _=require("obsidian"),T=class{constructor(t,e){this.app=t,this.plugin=e}getSettings(){return this.plugin.settings}async applyCurrentConfiguration(t=!1){try{let e=this.getSettings();await this.plugin.configManager.applyPreset({name:e.currentTemplate,description:"",features:e.features,theme:e.currentTheme,contentOrganization:e.contentOrganization,config:e})?(t&&new _.Notice("Configuration applied successfully!"),await this.plugin.configManager.triggerRebuild()):t&&new _.Notice("Failed to apply configuration. Check the console for errors.")}catch(e){t&&new _.Notice(`Error applying configuration: ${e instanceof Error?e.message:String(e)}`)}}createDropdownSetting(t,e,a,n,s,i){return new _.Setting(t).setName(e).setDesc(a).addDropdown(o=>(Object.entries(s).forEach(([r,l])=>{o.addOption(r,l)}),o.setValue(n),o.onChange(async r=>{i(r),await this.plugin.saveData(this.getSettings()),await this.applyCurrentConfiguration(!0)}),o))}createTextSetting(t,e,a,n,s,i=1e3){return new _.Setting(t).setName(e).setDesc(a).addText(o=>{o.setValue(n);let r=null;return o.onChange(async l=>{r&&clearTimeout(r),s(l),await this.plugin.saveData(this.getSettings()),r=window.setTimeout(async()=>{await this.applyCurrentConfiguration(!0)},i)}),o.inputEl.addEventListener("blur",async()=>{r&&(clearTimeout(r),await this.applyCurrentConfiguration(!0))}),o})}createToggleSetting(t,e,a,n,s){return new _.Setting(t).setName(e).setDesc(a).addToggle(i=>(i.setValue(n),i.onChange(async o=>{s(o),await this.plugin.saveData(this.getSettings()),await this.applyCurrentConfiguration(!0)}),i))}};var J=class extends T{render(t){var y,C;t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"General Settings"}),s=a.createEl("p",{text:"Configure basic plugin behavior and view current status."});new fe.Setting(t).setName("Run wizard on startup").setDesc("Show the setup wizard when Obsidian starts (if not disabled)").addToggle(f=>f.setValue(e.runWizardOnStartup).onChange(async ye=>{e.runWizardOnStartup=ye,await this.plugin.saveData(e)}));let o=t.createDiv("config-display").createDiv("config-info"),r=o.createEl("h3",{text:"Current Configuration"}),l=o.createDiv("config-item");l.createEl("strong",{text:"Template: "}),l.createSpan({text:((y=E.find(f=>f.id===e.currentTemplate))==null?void 0:y.name)||"Unknown"});let c=o.createDiv("config-item");c.createEl("strong",{text:"Theme: "}),c.createSpan({text:((C=P.find(f=>f.id===e.currentTheme))==null?void 0:C.name)||"Unknown"});let d=o.createDiv("config-item");d.createEl("strong",{text:"Organization: "}),d.createSpan({text:e.contentOrganization==="file-based"?"File-based":"Folder-based"});let g=o.createDiv("config-item");g.createEl("strong",{text:"Deployment: "}),g.createSpan({text:this.formatDeploymentName(e.deployment.platform)});let p=o.createDiv("config-item");p.createEl("strong",{text:"Site Title: "}),p.createSpan({text:e.siteInfo.title});let m=o.createDiv("config-item");m.createEl("strong",{text:"Site URL: "}),m.createSpan({text:e.siteInfo.site}),new fe.Setting(t).setName("Setup wizard").setDesc("Run the setup wizard to reconfigure your theme").addButton(f=>f.setButtonText("Run Setup Wizard").setCta().onClick(async()=>{new I(this.app,this.plugin).open()}))}formatDeploymentName(t){switch(t){case"netlify":return"Netlify";case"vercel":return"Vercel";case"github-pages":return"GitHub Pages";default:return t}}};var X=class extends T{render(t){t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Site Information"}),s=a.createEl("p",{text:"Configure your site metadata and basic information. Changes are applied to your config.ts file immediately."});this.createTextSetting(t,"Site URL","Your site's base URL (e.g., https://yoursite.com)",e.siteInfo.site,i=>{e.siteInfo.site=i}),this.createTextSetting(t,"Site Title","Your site's title",e.siteInfo.title,i=>{e.siteInfo.title=i}),this.createTextSetting(t,"Site Description","A brief description of your site",e.siteInfo.description,i=>{e.siteInfo.description=i}),this.createTextSetting(t,"Author Name","Your name or the site author's name",e.siteInfo.author,i=>{e.siteInfo.author=i}),this.createTextSetting(t,"Language","Your site's primary language (ISO 639-1 code)",e.siteInfo.language,i=>{e.siteInfo.language=i})}};var he=require("obsidian");var Q=class extends T{constructor(){super(...arguments);this.saveTimeoutId=null}render(e){e.empty();let a=this.getSettings(),n=e.createDiv("settings-section"),s=n.createEl("h2",{text:"Navigation"}),i=n.createEl("p",{text:"Configure your site navigation pages and social links. Changes are applied to your config.ts file immediately."}),o=e.createDiv("settings-section");o.createEl("h3",{text:"Navigation Pages"}),o.createEl("p",{text:"Add or remove pages from your main navigation menu."});let r=o.createDiv("nav-items");r.id="pages-list",r.innerHTML=`
			${a.navigation.pages.map((d,g)=>`
				<div class="nav-item" data-index="${g}" draggable="true">
					<div class="nav-item-content">
						<div class="nav-item-fields">
							<input type="text" class="nav-title" placeholder="Page Title" value="${d.title}" draggable="false">
							<input type="text" class="nav-url" placeholder="/page-url" value="${d.url}" draggable="false">
						</div>
						<button class="nav-remove mod-warning" data-index="${g}">Remove</button>
					</div>
				</div>
			`).join("")}
		`,new he.Setting(o).setName("Add Page").setDesc("Add a new page to your navigation").addButton(d=>d.setButtonText("+ Add Page").setCta().onClick(async()=>{a.navigation.pages.push({title:"New Page",url:"/new-page"}),await this.plugin.saveData(a),await this.applyCurrentConfiguration(),this.render(e)}));let l=e.createDiv("settings-section");l.createEl("h3",{text:"Social Links"}),l.createEl("p",{text:"Configure your social media links in the footer."});let c=l.createDiv("nav-items");c.id="social-list",c.innerHTML=`
			${a.navigation.social.map((d,g)=>`
				<div class="nav-item" data-index="${g}" draggable="true">
					<div class="nav-item-content">
						<div class="nav-item-fields">
							<input type="text" class="nav-title" placeholder="Social Title" value="${d.title}" draggable="false">
							<input type="text" class="nav-url" placeholder="https://example.com" value="${d.url}" draggable="false">
						</div>
						<button class="nav-remove mod-warning" data-index="${g}">Remove</button>
					</div>
					<div class="nav-icon-row">
						<input type="text" class="nav-icon" placeholder="icon-name" value="${d.icon||""}" draggable="false">
						<div class="nav-icon-help">
							<small>Icon names from FontAwesome Brands</small>
						</div>
					</div>
				</div>
			`).join("")}
		`,new he.Setting(l).setName("Add Social Link").setDesc("Add a new social media link").addButton(d=>d.setButtonText("+ Add Social Link").setCta().onClick(async()=>{a.navigation.social.push({title:"New Social",url:"https://example.com",icon:""}),await this.plugin.saveData(a),await this.applyCurrentConfiguration(),this.render(e)})),this.setupEventDelegation(e),this.setupDragAndDrop(e)}setupDragAndDrop(e){let a=null;e.addEventListener("dragstart",n=>{let s=n.target;s.classList.contains("nav-item")&&(a=s,s.style.opacity="0.5")}),e.addEventListener("dragend",n=>{let s=n.target;s.classList.contains("nav-item")&&(s.style.opacity="1",a=null)}),e.addEventListener("dragover",n=>{n.preventDefault();let s=n.target;if(s.classList.contains("nav-item")&&a&&s!==a){let i=s.getBoundingClientRect(),o=i.top+i.height/2;n.clientY<o?(s.style.borderTop="2px solid var(--interactive-accent)",s.style.borderBottom="none"):(s.style.borderBottom="2px solid var(--interactive-accent)",s.style.borderTop="none")}}),e.addEventListener("dragleave",n=>{let s=n.target;s.classList.contains("nav-item")&&(s.style.borderTop="none",s.style.borderBottom="none")}),e.addEventListener("drop",async n=>{n.preventDefault();let s=n.target;if(s.classList.contains("nav-item")&&a){let i=parseInt(s.getAttribute("data-index")||"0"),o=parseInt(a.getAttribute("data-index")||"0"),r=s.closest("#pages-list"),l=s.closest("#social-list");if(s.style.borderTop="none",s.style.borderBottom="none",i!==o){let c=this.getSettings();if(r){let d=[...c.navigation.pages],g=d.splice(o,1)[0];d.splice(i,0,g),c.navigation.pages=d}else if(l){let d=[...c.navigation.social],g=d.splice(o,1)[0];d.splice(i,0,g),c.navigation.social=d}await this.plugin.saveData(c),await this.applyCurrentConfiguration(),this.render(e)}}})}setupEventDelegation(e){var n,s;let a=this.getSettings();(n=e.querySelector("#pages-list"))==null||n.addEventListener("input",i=>{let o=i.target;if(o.classList.contains("nav-title")||o.classList.contains("nav-url")){let r=o.closest(".nav-item"),l=parseInt((r==null?void 0:r.getAttribute("data-index"))||"0"),c=o.classList.contains("nav-title")?"title":"url";a.navigation.pages[l][c]=o.value,this.debouncedSave()}}),(s=e.querySelector("#social-list"))==null||s.addEventListener("input",i=>{let o=i.target;if(o.classList.contains("nav-title")||o.classList.contains("nav-url")||o.classList.contains("nav-icon")){let r=o.closest(".nav-item"),l=parseInt((r==null?void 0:r.getAttribute("data-index"))||"0"),c=o.classList.contains("nav-title")?"title":o.classList.contains("nav-url")?"url":"icon";a.navigation.social[l][c]=o.value,this.debouncedSave()}}),e.addEventListener("click",async i=>{let o=i.target;if(o.classList.contains("nav-remove")){let r=o.closest(".nav-item"),l=parseInt((r==null?void 0:r.getAttribute("data-index"))||"0");(r==null?void 0:r.closest("#pages-list"))?a.navigation.pages.splice(l,1):a.navigation.social.splice(l,1),await this.plugin.saveData(a),await this.applyCurrentConfiguration(),this.render(e)}})}debouncedSave(){this.saveTimeoutId&&clearTimeout(this.saveTimeoutId),this.saveTimeoutId=window.setTimeout(async()=>{await this.plugin.saveData(this.getSettings()),await this.applyCurrentConfiguration(!1)},1e3)}};var O=require("obsidian");var Ie=require("obsidian"),Z=class extends Ie.Modal{constructor(e,a,n,s){super(e);this.changes=a,this.onConfirm=n,this.onCancel=s}onOpen(){let{contentEl:e}=this;e.empty();let a=e.createEl("h2",{text:"Template Change Warning"});a.style.marginTop="0";let n=e.createEl("p",{text:"This template will overwrite your current custom settings. The following settings will be changed:"});n.style.marginBottom="16px";let s=e.createEl("ul");s.style.marginBottom="24px",s.style.paddingLeft="20px",this.changes.forEach(c=>{let d=s.createEl("li",{text:c});d.style.marginBottom="4px"});let i=e.createEl("p",{text:"Do you want to continue? This action cannot be undone."});i.style.fontWeight="bold",i.style.marginBottom="24px";let o=e.createDiv("modal-button-container");o.style.display="flex",o.style.gap="12px",o.style.justifyContent="flex-end";let r=o.createEl("button",{text:"Cancel"});r.className="mod-cta",r.addEventListener("click",()=>{this.onCancel(),this.close()});let l=o.createEl("button",{text:"Continue"});l.className="mod-warning",l.addEventListener("click",()=>{this.onConfirm(),this.close()}),l.focus()}onClose(){let{contentEl:e}=this;e.empty()}};var ee=class extends T{render(t){var i;t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Configuration"}),s=a.createEl("p",{text:"Configure your template and content organization. Changes are applied to your config.ts file immediately."});new O.Setting(t).setName("Template").setDesc("Choose your content template").addDropdown(o=>{E.forEach(r=>{o.addOption(r.id,r.name)}),o.setValue(e.currentTemplate),o.onChange(async r=>{let l=this.getTemplateChanges(r);if(l.length>0)new Z(this.app,l,async()=>{e.currentTemplate=r,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new O.Notice(`Template changed to ${r} and applied to config.ts`)}catch(d){new O.Notice(`Failed to apply template change: ${d instanceof Error?d.message:String(d)}`)}},()=>{o.setValue(e.currentTemplate)}).open();else{e.currentTemplate=r,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new O.Notice(`Template changed to ${r} and applied to config.ts`)}catch(c){new O.Notice(`Failed to apply template change: ${c instanceof Error?c.message:String(c)}`)}}})}),new O.Setting(t).setName("Content organization").setDesc("Choose how to organize your content and assets").addDropdown(o=>{o.addOption("file-based","File-based"),o.addOption("folder-based","Folder-based"),o.setValue(e.contentOrganization),o.onChange(async r=>{e.contentOrganization=r,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new O.Notice(`Content organization changed to ${r} and applied to config.ts`)}catch(l){new O.Notice(`Failed to apply content organization change: ${l instanceof Error?l.message:String(l)}`)}})}),new O.Setting(t).setName("Deployment").setDesc("Choose your deployment platform").addDropdown(o=>{o.addOption("netlify","Netlify"),o.addOption("vercel","Vercel"),o.addOption("github-pages","GitHub Pages"),o.setValue(e.deployment.platform),o.onChange(async r=>{e.deployment.platform=r,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new O.Notice(`Deployment platform changed to ${r} and applied to config.ts`)}catch(l){new O.Notice(`Failed to apply deployment platform change: ${l instanceof Error?l.message:String(l)}`)}})}),new O.Setting(t).setName("Reset to Template").setDesc(`Reset all settings to the current template (${(i=E.find(o=>o.id===e.currentTemplate))==null?void 0:i.name})`).addButton(o=>o.setButtonText("Reset to Template").setWarning().onClick(async()=>{try{let r=this.plugin.configManager.getTemplatePreset(e.currentTemplate);r?(Object.assign(e,r.config),await this.plugin.saveData(e),await this.applyCurrentConfiguration(!0),new O.Notice(`Reset to ${e.currentTemplate} template and applied to config.ts`)):new O.Notice("Template not found")}catch(r){new O.Notice(`Failed to reset to template: ${r instanceof Error?r.message:String(r)}`)}})),new O.Setting(t).setName("Edit config.ts directly").setDesc("Open your Astro configuration file in the editor").addButton(o=>o.setButtonText("Open config.ts").onClick(async()=>{await this.openConfigFile()}))}async openConfigFile(){try{let t=require("fs"),e=require("path"),{shell:a}=require("electron"),n=this.app.vault.adapter.basePath||this.app.vault.adapter.path,s=typeof n=="string"?n:n.toString(),i=e.join(s,"..","config.ts");t.existsSync(i)?a.openPath(i):new O.Notice(`Config file not found at: ${i}`)}catch(t){new O.Notice(`Error opening config file: ${t instanceof Error?t.message:String(t)}`)}}getTemplateChanges(t){let e=[];return E.find(n=>n.id===t)&&(e.push("Theme and color scheme"),e.push("Feature toggles and settings"),e.push("Typography and font settings"),e.push("Content organization settings")),e}};var S=require("obsidian");var te=class extends T{render(t){var o,r,l,c;t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Style"}),s=a.createEl("p",{text:"Configure your theme and typography settings. Changes are applied to your config.ts file immediately."});new S.Setting(t).setName("Theme").setDesc("Choose your color theme").addDropdown(d=>{P.forEach(g=>{d.addOption(g.id,g.name)}),d.setValue(e.currentTheme),d.onChange(async g=>{e.currentTheme=g,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new S.Notice(`Theme changed to ${g} and applied to config.ts`)}catch(p){new S.Notice(`Failed to apply theme change: ${p instanceof Error?p.message:String(p)}`)}})});let i=t.createDiv("settings-section");i.createEl("h3",{text:"Typography"}),i.createEl("p",{text:"Configure your font settings."}),new S.Setting(i).setName("Heading Font").setDesc("Font for headings and titles").addDropdown(d=>{N.forEach(g=>{d.addOption(g,g)}),d.setValue(e.typography.headingFont),d.onChange(async g=>{e.typography.headingFont=g,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new S.Notice("Heading font updated and applied to config.ts")}catch(p){new S.Notice(`Failed to apply heading font change: ${p instanceof Error?p.message:String(p)}`)}})}),new S.Setting(i).setName("Prose Font").setDesc("Font for body text and content").addDropdown(d=>{N.forEach(g=>{d.addOption(g,g)}),d.setValue(e.typography.proseFont),d.onChange(async g=>{e.typography.proseFont=g,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new S.Notice("Prose font updated and applied to config.ts")}catch(p){new S.Notice(`Failed to apply prose font change: ${p instanceof Error?p.message:String(p)}`)}})}),new S.Setting(i).setName("Monospace Font").setDesc("Font for code blocks and technical content").addDropdown(d=>{N.forEach(g=>{d.addOption(g,g)}),d.setValue(e.typography.monoFont),d.onChange(async g=>{e.typography.monoFont=g,await this.plugin.saveData(e);try{await this.applyCurrentConfiguration(),new S.Notice("Monospace font updated and applied to config.ts")}catch(p){new S.Notice(`Failed to apply monospace font change: ${p instanceof Error?p.message:String(p)}`)}})}),new S.Setting(i).setName("Font Source").setDesc("How fonts are loaded").addDropdown(d=>{d.addOption("local","Local (Google Fonts)"),d.addOption("cdn","CDN (Custom)"),d.setValue(e.typography.fontSource),d.onChange(async g=>{e.typography.fontSource=g,await this.plugin.saveData(e),this.render(t);try{await this.applyCurrentConfiguration(),new S.Notice(`Font source changed to ${g} and applied to config.ts`)}catch(p){new S.Notice(`Failed to apply font source change: ${p instanceof Error?p.message:String(p)}`)}})}),e.typography.fontSource==="cdn"&&(this.createTextSetting(i,"Custom Font URLs","Comma-separated font URLs",((o=e.typography.customFonts)==null?void 0:o.heading)||"",d=>{e.typography.customFonts||(e.typography.customFonts={heading:"",prose:"",mono:""}),e.typography.customFonts.heading=d}),this.createTextSetting(i,"Custom Heading Font Name","Name of the custom heading font",((r=e.typography.customFonts)==null?void 0:r.heading)||"",d=>{e.typography.customFonts||(e.typography.customFonts={heading:"",prose:"",mono:""}),e.typography.customFonts.heading=d}),this.createTextSetting(i,"Custom Prose Font Name","Name of the custom prose font",((l=e.typography.customFonts)==null?void 0:l.prose)||"",d=>{e.typography.customFonts||(e.typography.customFonts={heading:"",prose:"",mono:""}),e.typography.customFonts.prose=d}),this.createTextSetting(i,"Custom Monospace Font Name","Name of the custom monospace font",((c=e.typography.customFonts)==null?void 0:c.mono)||"",d=>{e.typography.customFonts||(e.typography.customFonts={heading:"",prose:"",mono:""}),e.typography.customFonts.mono=d}))}};var G=require("obsidian");var ne=class extends T{render(t){t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Feature Configuration"}),s=a.createEl("p",{text:"Enable or disable specific features for your site. Changes are applied to your config.ts file immediately when you toggle them."});[{key:"commandPalette",name:"Command palette",desc:"Add a command palette to your site"},{key:"tableOfContents",name:"Table of contents",desc:"Show table of contents on pages"},{key:"readingTime",name:"Reading time",desc:"Display estimated reading time"},{key:"linkedMentions",name:"Linked mentions",desc:"Show linked mentions and backlinks"},{key:"graphView",name:"Graph view",desc:"Show graph view of post connections"},{key:"postNavigation",name:"Post navigation",desc:"Show next/previous post navigation"},{key:"scrollToTop",name:"Scroll to top",desc:"Show scroll to top button"},{key:"showSocialIconsInFooter",name:"Social icons in footer",desc:"Show social icons in footer"},{key:"profilePicture",name:"Profile picture",desc:"Show profile picture in header"},{key:"comments",name:"Comments",desc:"Enable comment system"}].forEach(r=>{let l=this.getSettings(),c=r.key,d=l.features[c],g=typeof d=="boolean"?d:!1;new G.Setting(t).setName(r.name).setDesc(r.desc).addToggle(p=>p.setValue(g).onChange(async m=>{l.features[c]=m,await this.plugin.saveData(l);try{await this.applyCurrentConfiguration(),new G.Notice(`${r.name} ${m?"enabled":"disabled"} and applied to config.ts`)}catch(y){new G.Notice(`Failed to apply ${r.name} to config.ts: ${y instanceof Error?y.message:String(y)}`)}}))}),t.createDiv("settings-section").createEl("p",{text:"All changes are applied to your config.ts file immediately when you toggle features.",cls:"setting-item-description"})}};var b=require("obsidian");var ae=class extends T{async render(t){t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Plugin Configuration"}),s=a.createEl("p",{text:"Manage your Obsidian plugins and their settings."}),i=await this.plugin.pluginManager.getPluginStatus(),r=t.createDiv("plugin-status-container").createDiv("plugin-status");for(let l of i){let c=r.createDiv(`plugin-item ${l.installed?"installed":"missing"}`),d=c.createDiv("plugin-icon");d.innerHTML=l.installed?'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"/></svg>':'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6L6 18M6 6l12 12"/></svg>';let g=c.createDiv("plugin-info");g.createEl("h3",{text:l.name});let p=l.installed?l.enabled?"Enabled":"Disabled":"Not installed";g.createEl("p",{text:p})}new b.Setting(t).setName("Configure automatically").setDesc("Automatically configure all installed plugins").addButton(l=>l.setButtonText("Configure Automatically").setCta().onClick(async()=>{await this.plugin.pluginManager.configurePlugins(e.pluginConfig)?new b.Notice("Plugins configured successfully!"):new b.Notice("Some plugins could not be configured automatically.")})),new b.Setting(t).setName("Show manual instructions").setDesc("Get step-by-step instructions for manual configuration").addButton(l=>l.setButtonText("Show Manual Instructions").onClick(async()=>{let c=await this.plugin.pluginManager.getManualConfigurationInstructions(e.pluginConfig),d=new b.Modal(this.app);d.titleEl.setText("Manual Configuration Instructions");let g=d.contentEl.createDiv();g.style.padding="20px",g.style.lineHeight="1.6";let p=c.split(`
`),m=null;p.forEach(y=>{let C=y.trim();if(C==="")g.createEl("br");else if(C.startsWith("## ")){m&&(m=null);let f=g.createEl("h2");f.setText(C.substring(3)),f.style.marginTop="20px",f.style.marginBottom="10px",f.style.fontSize="1.2em",f.style.fontWeight="bold"}else if(C.match(/^\d+\.\s/)){m||(m=g.createEl("ol"),m.style.marginLeft="20px",m.style.marginBottom="15px");let f=m.createEl("li");f.style.marginBottom="5px",this.parseBoldText(f,C.replace(/^\d+\.\s/,""))}else if(C.startsWith("- ")||C.startsWith("* ")){m||(m=g.createEl("ul"),m.style.marginLeft="20px",m.style.marginBottom="15px");let f=m.createEl("li");f.style.marginBottom="5px",this.parseBoldText(f,C.substring(2))}else{m&&(m=null);let f=g.createEl("p");f.style.marginBottom="10px",this.parseBoldText(f,C)}}),d.open()}))}parseBoldText(t,e){e.split(/(\*\*.*?\*\*)/g).forEach(n=>{n.startsWith("**")&&n.endsWith("**")?t.createEl("strong").setText(n.substring(2,n.length-2)):n.trim()!==""&&t.appendText(n)})}};var v=require("obsidian");var se=class extends T{render(t){t.empty();let e=this.getSettings(),a=t.createDiv("settings-section"),n=a.createEl("h2",{text:"Advanced Settings"}),s=a.createEl("p",{text:"Advanced configuration options and utilities."});new v.Setting(t).setName("Reset to defaults").setDesc("Reset all settings to their default values").addButton(i=>i.setButtonText("Reset to Defaults").setWarning().onClick(async()=>{let o=new v.Modal(this.app);o.titleEl.setText("Reset to Defaults");let r=o.contentEl.createDiv();r.createEl("p",{text:"Are you sure you want to reset all configuration settings to defaults?"}),r.createEl("p",{text:"This will preserve your site info and navigation settings."});let l=r.createDiv();l.style.marginTop="20px",l.style.display="flex",l.style.gap="10px",l.style.justifyContent="flex-end";let c=l.createEl("button",{text:"Cancel"});c.className="mod-button",c.addEventListener("click",()=>{o.close()});let d=l.createEl("button",{text:"Reset to Defaults"});d.className="mod-warning",d.addEventListener("click",async()=>{o.close();let g=this.getSettings(),p=g.siteInfo,m=g.navigation,y={...D};y.siteInfo=p,y.navigation=m,this.plugin.settings=y,await this.plugin.saveData(y);try{await this.applyCurrentConfiguration(),new v.Notice("Configuration reset to defaults and applied to config.ts (site info and navigation preserved)")}catch(C){new v.Notice(`Configuration reset but failed to apply to config.ts: ${C instanceof Error?C.message:String(C)}`)}this.plugin.triggerSettingsRefresh()}),d.focus(),o.open()})),new v.Setting(t).setName("Export configuration").setDesc("Export your current configuration as JSON").addButton(i=>i.setButtonText("Export JSON").onClick(()=>{this.exportConfiguration()})),new v.Setting(t).setName("Import configuration").setDesc("Import configuration from JSON file").addButton(i=>i.setButtonText("Import JSON").onClick(()=>{this.importConfiguration()}))}exportConfiguration(){let t=JSON.stringify(this.getSettings(),null,2),e=new Blob([t],{type:"application/json"}),a=URL.createObjectURL(e),n=document.createElement("a");n.href=a,n.download="astro-modular-config.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(a),new v.Notice("Configuration exported successfully!")}importConfiguration(){let t=document.createElement("input");t.type="file",t.accept=".json",t.onchange=async e=>{var n;let a=(n=e.target.files)==null?void 0:n[0];if(a)try{let s=await a.text(),i=JSON.parse(s),o=this.getSettings();Object.assign(o,i),await this.plugin.saveData(o),new v.Notice("Configuration imported successfully!")}catch(s){new v.Notice("Failed to import configuration. Please check the file format.")}},t.click()}};var oe=class extends Ne.PluginSettingTab{constructor(e,a){super(e,a);this.plugin=a}display(){this.render()}render(){let{containerEl:e}=this;e.empty(),e.addClass("astro-modular-settings");let a=e.createDiv("tab-container"),n=a.createDiv("tab-nav"),s=a.createDiv("tab-content"),i=[{id:"general",name:"General",description:"Basic settings and configuration overview",renderer:new J(this.app,this.plugin)},{id:"site-info",name:"Site Info",description:"Site information and metadata",renderer:new X(this.app,this.plugin)},{id:"navigation",name:"Navigation",description:"Navigation pages and social links",renderer:new Q(this.app,this.plugin)},{id:"config",name:"Config",description:"Template and content organization",renderer:new ee(this.app,this.plugin)},{id:"style",name:"Style",description:"Theme and typography settings",renderer:new te(this.app,this.plugin)},{id:"features",name:"Features",description:"Enable or disable theme features",renderer:new ne(this.app,this.plugin)},{id:"plugins",name:"Plugins",description:"Configure Obsidian plugins",renderer:new ae(this.app,this.plugin)},{id:"advanced",name:"Advanced",description:"Advanced settings and utilities",renderer:new se(this.app,this.plugin)}];i.forEach((o,r)=>{let l=n.createEl("button",{text:o.name,cls:`tab-button ${r===0?"active":""}`});l.title=o.description,l.addEventListener("click",()=>{n.querySelectorAll(".tab-button").forEach(c=>c.classList.remove("active")),l.classList.add("active"),s.style.opacity="0",setTimeout(()=>{s.empty(),o.renderer.render(s),s.style.opacity="1"},150)})}),i[0].renderer.render(s)}};var ie=class{constructor(t){this.app=t,this.configPath="../config.ts"}async getConfigFileInfo(){try{let t=require("fs"),e=require("path"),a=this.app.vault.adapter,n=a.basePath||a.path,s=typeof n=="string"?n:n?String(n):"",i=e.join(s,"..","config.ts"),o=e.dirname(i);if(t.existsSync(i)){let r=t.readFileSync(i,"utf8"),l=t.statSync(i);return{exists:!0,path:i,content:r,lastModified:new Date(l.mtime),valid:!0,errors:[]}}else return{exists:!1,path:i,content:"",lastModified:new Date,valid:!1,errors:["Config file not found"]}}catch(t){return{exists:!1,path:this.configPath,content:"",lastModified:new Date,valid:!1,errors:["Cannot access file outside vault"]}}}validateConfigContent(t){return t.includes("defineConfig")||t.includes("export default")||t.includes("astro/config")}async readConfig(){return(await this.getConfigFileInfo()).content}async writeConfig(t){try{let e=require("fs"),a=require("path"),n=this.app.vault.adapter,s=n.basePath||n.path,i=typeof s=="string"?s:s?String(s):"",o=a.join(i,"..","config.ts");return e.writeFileSync(o,t,"utf8"),!0}catch(e){return!1}}async detectAstroDevServer(){let t=this.app.vault.getAbstractFileByPath("package.json");if(t)try{let e=await this.app.vault.read(t);return e.includes("astro")&&e.includes("dev")}catch(e){return!1}return!1}};var re=class{interpolateTemplate(t,e,a){return t.replace(/\$\{settings\.currentTheme\}/g,e.currentTheme).replace(/\$\{settings\.typography\.fontSource\}/g,e.typography.fontSource).replace(/\$\{settings\.typography\.proseFont\}/g,e.typography.proseFont).replace(/\$\{settings\.typography\.headingFont\}/g,e.typography.headingFont).replace(/\$\{settings\.typography\.monoFont\}/g,e.typography.monoFont).replace(/\$\{settings\.typography\.customFonts\.prose\}/g,e.typography.customFonts.prose).replace(/\$\{settings\.typography\.customFonts\.heading\}/g,e.typography.customFonts.heading).replace(/\$\{settings\.typography\.customFonts\.mono\}/g,e.typography.customFonts.mono).replace(/\$\{settings\.optionalFeatures\.comments\.enabled\}/g,e.optionalFeatures.comments.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.enabled\}/g,e.optionalFeatures.profilePicture.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.image\}/g,e.optionalFeatures.profilePicture.image).replace(/\$\{settings\.optionalFeatures\.profilePicture\.alt\}/g,e.optionalFeatures.profilePicture.alt).replace(/\$\{settings\.optionalFeatures\.profilePicture\.size\}/g,e.optionalFeatures.profilePicture.size).replace(/\$\{settings\.optionalFeatures\.profilePicture\.url\}/g,e.optionalFeatures.profilePicture.url||"").replace(/\$\{settings\.optionalFeatures\.profilePicture\.placement\}/g,e.optionalFeatures.profilePicture.placement).replace(/\$\{settings\.optionalFeatures\.profilePicture\.style\}/g,e.optionalFeatures.profilePicture.style).replace(/\$\{settings\.deployment\.platform\}/g,e.deployment.platform).replace(/\$\{templateName\}/g,a)}getTemplateConfig(t,e){switch(t){case"standard":return{layout:{contentWidth:"45rem"},footer:{enabled:!0,showSocialIconsInFooter:!0},darkModeToggleButton:"both",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!0,social:!0}},optionalContentTypes:{projects:!0,docs:!0},homeOptions:{featuredPost:{enabled:!0,type:"latest"},recentPosts:{enabled:!0,count:7},projects:{enabled:!0,count:2},docs:{enabled:!0,count:3},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!1},graphView:{enabled:!0,showInSidebar:!0,showInCommandPalette:!0,maxNodes:100},postNavigation:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"traditional"}};case"compact":return{layout:{contentWidth:"42rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!1,social:!0}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!0},graphView:{enabled:!1},postNavigation:!0,showPostCardCoverImages:"posts",postCardAspectRatio:"custom",customPostCardAspectRatio:"2.5/1"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"minimal"}};case"minimal":return{layout:{contentWidth:"40rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"",placeholder:"Search content",search:{posts:!0,pages:!0,projects:!1,docs:!1},sections:{quickActions:!1,pages:!1,social:!1}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"none"}},postOptions:{postsPerPage:6,readingTime:!1,wordCount:!1,tableOfContents:!1,tags:!1,linkedMentions:{enabled:!1,linkedMentionsCompact:!1},graphView:{enabled:!1},postNavigation:!1,showPostCardCoverImages:"none",postCardAspectRatio:"og"},navigation:{showNavigation:!1,showMobileMenu:!1,style:"minimal"}};default:return{}}}};var le=class{validateMarkers(t){let a=["CONFIG:SITE_URL","CONFIG:SITE_TITLE","CONFIG:SITE_DESCRIPTION","CONFIG:SITE_AUTHOR","CONFIG:SITE_LANGUAGE","CONFIG:THEME","CONFIG:FONT_SOURCE","CONFIG:FONT_BODY","CONFIG:FONT_HEADING","CONFIG:FONT_MONO","CONFIG:LAYOUT_CONTENT_WIDTH","CONFIG:FOOTER_ENABLED","CONFIG:FOOTER_SHOW_SOCIAL_ICONS","CONFIG:SCROLL_TO_TOP","CONFIG:DARK_MODE_TOGGLE_BUTTON","CONFIG:DEPLOYMENT_PLATFORM","CONFIG:COMMAND_PALETTE_ENABLED","CONFIG:COMMAND_PALETTE_SHORTCUT","CONFIG:COMMAND_PALETTE_PLACEHOLDER","CONFIG:COMMAND_PALETTE_SEARCH_POSTS","CONFIG:COMMAND_PALETTE_SEARCH_PAGES","CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS","CONFIG:COMMAND_PALETTE_SEARCH_DOCS","CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS","CONFIG:COMMAND_PALETTE_SECTIONS_PAGES","CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL","CONFIG:PROFILE_PICTURE_ENABLED","CONFIG:PROFILE_PICTURE_IMAGE","CONFIG:PROFILE_PICTURE_ALT","CONFIG:PROFILE_PICTURE_SIZE","CONFIG:PROFILE_PICTURE_URL","CONFIG:PROFILE_PICTURE_PLACEMENT","CONFIG:PROFILE_PICTURE_STYLE","CONFIG:NAVIGATION_SHOW_NAVIGATION","CONFIG:NAVIGATION_STYLE","CONFIG:NAVIGATION_SHOW_MOBILE_MENU","CONFIG:NAVIGATION_PAGES","CONFIG:NAVIGATION_SOCIAL","CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS","CONFIG:OPTIONAL_CONTENT_TYPES_DOCS","CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED","CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE","CONFIG:HOME_OPTIONS_FEATURED_POST_SLUG","CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED","CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT","CONFIG:HOME_OPTIONS_PROJECTS_ENABLED","CONFIG:HOME_OPTIONS_PROJECTS_COUNT","CONFIG:HOME_OPTIONS_DOCS_ENABLED","CONFIG:HOME_OPTIONS_DOCS_COUNT","CONFIG:HOME_OPTIONS_BLURB_PLACEMENT","CONFIG:POST_OPTIONS_POSTS_PER_PAGE","CONFIG:POST_OPTIONS_READING_TIME","CONFIG:POST_OPTIONS_WORD_COUNT","CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS","CONFIG:POST_OPTIONS_TAGS","CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED","CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT","CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE","CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS","CONFIG:POST_OPTIONS_POST_NAVIGATION","CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES","CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_COMMENTS_ENABLED"].filter(n=>!t.includes(`// [${n}]`));return{valid:a.length===0,missing:a}}validateSyntax(t){let e=[];try{let a=(t.match(/\{/g)||[]).length,n=(t.match(/\}/g)||[]).length,s=(t.match(/\[/g)||[]).length,i=(t.match(/\]/g)||[]).length;a!==n&&e.push("Mismatched braces"),s!==i&&e.push("Mismatched brackets")}catch(a){e.push(`Validation failed: ${a instanceof Error?a.message:String(a)}`)}return{valid:e.length===0,errors:e}}};var ce=class{constructor(){this.templateManager=new re,this.markerValidator=new le}modifyConfigFromPreset(t,e){var d,g;let a=t.config,n=this.modifyConfigFromFeatures(a,e),s=this.templateManager.getTemplateConfig(t.name,a);if(n.includes("// [CONFIG:THEME]")){let p=/\/\/ \[CONFIG:THEME\]\s*\n\s*theme:\s*"[^"]*"/,m=n.match(p);n=n.replace(p,`// [CONFIG:THEME]
  theme: "${a.currentTheme}"`)}n=n.replace(/\/\/ \[CONFIG:FONT_SOURCE\]\s*\n\s*source:\s*"[^"]*"/,`// [CONFIG:FONT_SOURCE]
    source: "${a.typography.fontSource}"`),n=n.replace(/\/\/ \[CONFIG:FONT_BODY\]\s*\n\s*body:\s*"[^"]*"/,`// [CONFIG:FONT_BODY]
      body: "${a.typography.fontSource==="cdn"?a.typography.customFonts.prose:a.typography.proseFont}"`),n=n.replace(/\/\/ \[CONFIG:FONT_HEADING\]\s*\n\s*heading:\s*"[^"]*"/,`// [CONFIG:FONT_HEADING]
      heading: "${a.typography.fontSource==="cdn"?a.typography.customFonts.heading:a.typography.headingFont}"`),n=n.replace(/\/\/ \[CONFIG:FONT_MONO\]\s*\n\s*mono:\s*"[^"]*"/,`// [CONFIG:FONT_MONO]
      mono: "${a.typography.fontSource==="cdn"?a.typography.customFonts.mono:a.typography.monoFont}"`),n=n.replace(/\/\/ \[CONFIG:DEPLOYMENT_PLATFORM\]\s*\n\s*platform:\s*"[^"]*"/,`// [CONFIG:DEPLOYMENT_PLATFORM]
    platform: "${a.deployment.platform}"`),(d=s.layout)!=null&&d.contentWidth&&(n=n.replace(/\/\/ \[CONFIG:LAYOUT_CONTENT_WIDTH\]\s*\n\s*contentWidth:\s*"[^"]*"/,`// [CONFIG:LAYOUT_CONTENT_WIDTH]
    contentWidth: "${s.layout.contentWidth}"`)),s.optionalContentTypes&&(s.optionalContentTypes.projects!==void 0&&(n=n.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS\]\s*\n\s*projects:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS]
    projects: ${s.optionalContentTypes.projects}`)),s.optionalContentTypes.docs!==void 0&&(n=n.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_DOCS\]\s*\n\s*docs:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_DOCS]
    docs: ${s.optionalContentTypes.docs}`))),s.darkModeToggleButton&&(n=n.replace(/\/\/ \[CONFIG:DARK_MODE_TOGGLE_BUTTON\]\s*\n\s*darkModeToggleButton:\s*"[^"]*"/,`// [CONFIG:DARK_MODE_TOGGLE_BUTTON]
  darkModeToggleButton: "${s.darkModeToggleButton}"`)),s.footer&&(s.footer.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:FOOTER_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:FOOTER_ENABLED]
    enabled: ${s.footer.enabled}`)),s.footer.showSocialIconsInFooter!==void 0&&(n=n.replace(/\/\/ \[CONFIG:FOOTER_SHOW_SOCIAL_ICONS\]\s*showSocialIconsInFooter:\s*[^,\n}]+/,`// [CONFIG:FOOTER_SHOW_SOCIAL_ICONS]
    showSocialIconsInFooter: ${s.footer.showSocialIconsInFooter}`))),s.navigation&&(s.navigation.style&&(n=n.replace(/\/\/ \[CONFIG:NAVIGATION_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:NAVIGATION_STYLE]
    style: "${s.navigation.style}"`)),s.navigation.showNavigation!==void 0&&(n=n.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_NAVIGATION\]\s*showNavigation:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_NAVIGATION]
    showNavigation: ${s.navigation.showNavigation}`)),s.navigation.showMobileMenu!==void 0&&(n=n.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_MOBILE_MENU\]\s*showMobileMenu:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_MOBILE_MENU]
    showMobileMenu: ${s.navigation.showMobileMenu}`))),s.commandPalette&&(s.commandPalette.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_ENABLED]
    enabled: ${s.commandPalette.enabled}`)),s.commandPalette.shortcut!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SHORTCUT\]\s*shortcut:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_SHORTCUT]
    shortcut: "${s.commandPalette.shortcut}"`)),s.commandPalette.placeholder!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_PLACEHOLDER\]\s*placeholder:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_PLACEHOLDER]
    placeholder: "${s.commandPalette.placeholder}"`)),s.commandPalette.search&&(s.commandPalette.search.posts!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_POSTS\]\s*posts:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_POSTS]
      posts: ${s.commandPalette.search.posts}`)),s.commandPalette.search.pages!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PAGES]
      pages: ${s.commandPalette.search.pages}`)),s.commandPalette.search.projects!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS\]\s*projects:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS]
      projects: ${s.commandPalette.search.projects}`)),s.commandPalette.search.docs!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_DOCS\]\s*docs:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_DOCS]
      docs: ${s.commandPalette.search.docs}`))),s.commandPalette.sections&&(s.commandPalette.sections.quickActions!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS\]\s*quickActions:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS]
      quickActions: ${s.commandPalette.sections.quickActions}`)),s.commandPalette.sections.pages!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_PAGES]
      pages: ${s.commandPalette.sections.pages}`)),s.commandPalette.sections.social!==void 0&&(n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL\]\s*social:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL]
      social: ${s.commandPalette.sections.social}`)))),s.homeOptions&&(s.homeOptions.featuredPost&&(s.homeOptions.featuredPost.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED]
      enabled: ${s.homeOptions.featuredPost.enabled}`)),s.homeOptions.featuredPost.type&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE\]\s*type:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE]
      type: "${s.homeOptions.featuredPost.type}"`))),s.homeOptions.recentPosts&&(s.homeOptions.recentPosts.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED]
      enabled: ${s.homeOptions.recentPosts.enabled}`)),s.homeOptions.recentPosts.count&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT]
      count: ${s.homeOptions.recentPosts.count}`))),s.homeOptions.projects&&(s.homeOptions.projects.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_PROJECTS_ENABLED]
      enabled: ${s.homeOptions.projects.enabled}`)),s.homeOptions.projects.count&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_PROJECTS_COUNT]
      count: ${s.homeOptions.projects.count}`))),s.homeOptions.docs&&(s.homeOptions.docs.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_DOCS_ENABLED]
      enabled: ${s.homeOptions.docs.enabled}`)),s.homeOptions.docs.count&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_DOCS_COUNT]
      count: ${s.homeOptions.docs.count}`))),(g=s.homeOptions.blurb)!=null&&g.placement&&(n=n.replace(/\/\/ \[CONFIG:HOME_OPTIONS_BLURB_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_BLURB_PLACEMENT]
      placement: "${s.homeOptions.blurb.placement}"`))),s.postOptions&&(s.postOptions.postsPerPage&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_POSTS_PER_PAGE\]\s*postsPerPage:\s*\d+/,`// [CONFIG:POST_OPTIONS_POSTS_PER_PAGE]
    postsPerPage: ${s.postOptions.postsPerPage}`)),[{key:"readingTime",marker:"CONFIG:POST_OPTIONS_READING_TIME"},{key:"wordCount",marker:"CONFIG:POST_OPTIONS_WORD_COUNT"},{key:"tableOfContents",marker:"CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS"},{key:"tags",marker:"CONFIG:POST_OPTIONS_TAGS"},{key:"postNavigation",marker:"CONFIG:POST_OPTIONS_POST_NAVIGATION"}].forEach(m=>{s.postOptions[m.key]!==void 0&&(n=n.replace(new RegExp(`// \\[${m.marker}\\]\\s*${m.key}:\\s*(true|false)`),`// [${m.marker}]
    ${m.key}: ${s.postOptions[m.key]}`))}),s.postOptions.linkedMentions&&(s.postOptions.linkedMentions.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED]
      enabled: ${s.postOptions.linkedMentions.enabled}`)),s.postOptions.linkedMentions.linkedMentionsCompact!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT\]\s*linkedMentionsCompact:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT]
      linkedMentionsCompact: ${s.postOptions.linkedMentions.linkedMentionsCompact}`))),s.postOptions.graphView&&(s.postOptions.graphView.enabled!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED]
    enabled: ${s.postOptions.graphView.enabled}`)),s.postOptions.graphView.showInSidebar!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR\]\s*showInSidebar:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR]
      showInSidebar: ${s.postOptions.graphView.showInSidebar}`)),s.postOptions.graphView.showInCommandPalette!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE\]\s*showInCommandPalette:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE]
      showInCommandPalette: ${s.postOptions.graphView.showInCommandPalette}`)),s.postOptions.graphView.maxNodes&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES\]\s*maxNodes:\s*\d+/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES]
      maxNodes: ${s.postOptions.graphView.maxNodes}`)),s.postOptions.graphView.showOrphanedPosts!==void 0&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS\]\s*showOrphanedPosts:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS]
      showOrphanedPosts: ${s.postOptions.graphView.showOrphanedPosts}`))),s.postOptions.showPostCardCoverImages&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES\]\s*showPostCardCoverImages:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES]
    showPostCardCoverImages: "${s.postOptions.showPostCardCoverImages}"`)),s.postOptions.postCardAspectRatio&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO\]\s*postCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO]
    postCardAspectRatio: "${s.postOptions.postCardAspectRatio}"`)),s.postOptions.customPostCardAspectRatio&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO\]\s*customPostCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO]
    customPostCardAspectRatio: "${s.postOptions.customPostCardAspectRatio}"`))),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:PROFILE_PICTURE_ENABLED]
    enabled: ${a.optionalFeatures.profilePicture.enabled}`),a.optionalFeatures.profilePicture.enabled&&(n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_IMAGE\]\s*image:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_IMAGE]
    image: "${a.optionalFeatures.profilePicture.image}"`),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ALT\]\s*alt:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_ALT]
    alt: "${a.optionalFeatures.profilePicture.alt}"`),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_SIZE\]\s*size:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_SIZE]
    size: "${a.optionalFeatures.profilePicture.size}"`),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_URL\]\s*url:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_URL]
    url: "${a.optionalFeatures.profilePicture.url||""}"`),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_PLACEMENT]
    placement: "${a.optionalFeatures.profilePicture.placement}"`),n=n.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_STYLE]
    style: "${a.optionalFeatures.profilePicture.style}"`)),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_COMMENTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_COMMENTS_ENABLED]
      enabled: ${a.optionalFeatures.comments.enabled}`);let o=this.markerValidator.validateMarkers(n);if(!o.valid)return console.error("\u274C Config modification failed: Missing markers:",o.missing),console.error("Please ensure all CONFIG markers are present in your config.ts file"),e;let r=this.markerValidator.validateSyntax(n);if(!r.valid)return console.error("\u274C Config modification failed: Syntax errors:",r.errors),e;n=n.replace(/\/\/ \[CONFIG:SITE_URL\]\s*\n\s*site:\s*"[^"]*"/,`// [CONFIG:SITE_URL]
  site: "${a.siteInfo.site}"`),n=n.replace(/\/\/ \[CONFIG:SITE_TITLE\]\s*\n\s*title:\s*"[^"]*"/,`// [CONFIG:SITE_TITLE]
  title: "${a.siteInfo.title}"`),n=n.replace(/\/\/ \[CONFIG:SITE_DESCRIPTION\]\s*\n\s*description:\s*"[^"]*"/,`// [CONFIG:SITE_DESCRIPTION]
  description: "${a.siteInfo.description}"`),n=n.replace(/\/\/ \[CONFIG:SITE_AUTHOR\]\s*\n\s*author:\s*"[^"]*"/,`// [CONFIG:SITE_AUTHOR]
  author: "${a.siteInfo.author}"`),n=n.replace(/\/\/ \[CONFIG:SITE_LANGUAGE\]\s*\n\s*language:\s*"[^"]*"/,`// [CONFIG:SITE_LANGUAGE]
  language: "${a.siteInfo.language}"`);let l=a.navigation.pages.map(p=>`      { title: "${p.title}", url: "${p.url}" }`).join(`,
`);n=n.replace(/\/\/ \[CONFIG:NAVIGATION_PAGES\]\s*\n\s*pages:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_PAGES]
    pages: [
${l},
    ]`);let c=a.navigation.social.map(p=>`      {
        title: "${p.title}",
        url: "${p.url}",
        icon: "${p.icon}",
      }`).join(`,
`);return n=n.replace(/\/\/ \[CONFIG:NAVIGATION_SOCIAL\]\s*\n\s*social:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_SOCIAL]
    social: [
${c},
    ]`),n}modifyConfigFromFeatures(t,e){let a=e;return a=a.replace(/\/\/ \[CONFIG:THEME\]\s*\n\s*theme:\s*"[^"]*"/,`// [CONFIG:THEME]
  theme: "${t.currentTheme}"`),a=a.replace(/\/\/ \[CONFIG:FONT_SOURCE\]\s*\n\s*source:\s*"[^"]*"/,`// [CONFIG:FONT_SOURCE]
    source: "${t.typography.fontSource}"`),a=a.replace(/\/\/ \[CONFIG:FONT_BODY\]\s*\n\s*body:\s*"[^"]*"/,`// [CONFIG:FONT_BODY]
      body: "${t.typography.fontSource==="cdn"?t.typography.customFonts.prose:t.typography.proseFont}"`),a=a.replace(/\/\/ \[CONFIG:FONT_HEADING\]\s*\n\s*heading:\s*"[^"]*"/,`// [CONFIG:FONT_HEADING]
      heading: "${t.typography.fontSource==="cdn"?t.typography.customFonts.heading:t.typography.headingFont}"`),a=a.replace(/\/\/ \[CONFIG:FONT_MONO\]\s*\n\s*mono:\s*"[^"]*"/,`// [CONFIG:FONT_MONO]
      mono: "${t.typography.fontSource==="cdn"?t.typography.customFonts.mono:t.typography.monoFont}"`),a=a.replace(/\/\/ \[CONFIG:DEPLOYMENT_PLATFORM\]\s*\n\s*platform:\s*"[^"]*"/,`// [CONFIG:DEPLOYMENT_PLATFORM]
    platform: "${t.deployment.platform}"`),a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_ENABLED]
    enabled: ${t.features.commandPalette}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS\]\s*tableOfContents:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS]
    tableOfContents: ${t.features.tableOfContents}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_READING_TIME\]\s*readingTime:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_READING_TIME]
    readingTime: ${t.features.readingTime}`),"wordCount"in t.features&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_WORD_COUNT\]\s*wordCount:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_WORD_COUNT]
    wordCount: ${t.features.wordCount}`)),"tags"in t.features&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_TAGS\]\s*tags:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_TAGS]
    tags: ${t.features.tags}`)),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED]
      enabled: ${t.features.linkedMentions}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT\]\s*linkedMentionsCompact:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT]
      linkedMentionsCompact: ${t.features.linkedMentionsCompact}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_COMMENTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_COMMENTS_ENABLED]
      enabled: ${t.features.comments}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED]
    enabled: ${t.features.graphView}`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_NAVIGATION\]\s*postNavigation:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_POST_NAVIGATION]
    postNavigation: ${t.features.postNavigation}`),a=a.replace(/\/\/ \[CONFIG:SCROLL_TO_TOP\]\s*scrollToTop:\s*(true|false)/,`// [CONFIG:SCROLL_TO_TOP]
  scrollToTop: ${t.features.scrollToTop}`),a=a.replace(/\/\/ \[CONFIG:FOOTER_SHOW_SOCIAL_ICONS\]\s*showSocialIconsInFooter:\s*[^,\n}]+/,`// [CONFIG:FOOTER_SHOW_SOCIAL_ICONS]
    showSocialIconsInFooter: ${t.features.showSocialIconsInFooter}`),a=a.replace(/\/\/ \[CONFIG:DARK_MODE_TOGGLE_BUTTON\]\s*darkModeToggleButton:\s*"[^"]*"/,`// [CONFIG:DARK_MODE_TOGGLE_BUTTON]
  darkModeToggleButton: "${t.features.darkModeToggleButton}"`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES\]\s*showPostCardCoverImages:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES]
    showPostCardCoverImages: "${t.features.showPostCardCoverImages}"`),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO\]\s*postCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO]
    postCardAspectRatio: "${t.features.postCardAspectRatio}"`),t.features.customPostCardAspectRatio&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO\]\s*customPostCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO]
    customPostCardAspectRatio: "${t.features.customPostCardAspectRatio}"`)),a}};var Oe={};w(Oe,{config:()=>ke,contentOrganization:()=>Ge,default:()=>Re,description:()=>we,features:()=>De,name:()=>Le,theme:()=>xe});var Le="Standard",we="Full-featured blog with all options enabled",De={commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!0,comments:!0},xe="oxygen",Ge="file-based",ke={currentTemplate:"standard",currentTheme:"oxygen",contentOrganization:"file-based",features:{commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!0,comments:!0},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file-based",indexFileName:"index"},imageInserterSettings:{insertFormat:"[[attachments/{image-url}]]"}}},Re={name:Le,description:we,features:De,theme:xe,contentOrganization:Ge,config:ke};var Te={};w(Te,{config:()=>Ue,contentOrganization:()=>We,default:()=>Ve,description:()=>He,features:()=>Be,name:()=>$e,theme:()=>ze});var $e="Minimal",He="Clean, simple blog with minimal features",Be={commandPalette:!0,tableOfContents:!0,readingTime:!1,linkedMentions:!1,comments:!1},ze="minimal",We="file-based",Ue={currentTemplate:"minimal",currentTheme:"minimal",contentOrganization:"file-based",features:{commandPalette:!0,tableOfContents:!0,readingTime:!1,linkedMentions:!1,comments:!1},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file-based",indexFileName:"index"},imageInserterSettings:{insertFormat:"[[attachments/{image-url}]]"}}},Ve={name:$e,description:He,features:Be,theme:ze,contentOrganization:We,config:Ue};var Se={};w(Se,{config:()=>Xe,contentOrganization:()=>Je,default:()=>Qe,description:()=>qe,features:()=>Ye,name:()=>je,theme:()=>Ke});var je="Compact",qe="Balanced setup for smaller sites",Ye={commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!1,comments:!1},Ke="oxygen",Je="file-based",Xe={currentTemplate:"compact",currentTheme:"oxygen",contentOrganization:"file-based",features:{commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!1,comments:!1},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file-based",indexFileName:"index"},imageInserterSettings:{insertFormat:"[[attachments/{image-url}]]"}}},Qe={name:je,description:qe,features:Ye,theme:Ke,contentOrganization:Je,config:Xe};var Ce={};w(Ce,{config:()=>st,contentOrganization:()=>at,default:()=>ot,description:()=>et,features:()=>tt,name:()=>Ze,theme:()=>nt});var Ze="Documentation",et="Optimized for technical documentation",tt={commandPalette:!1,tableOfContents:!0,readingTime:!1,linkedMentions:!0,comments:!0},nt="nord",at="file-based",st={currentTemplate:"documentation",currentTheme:"nord",contentOrganization:"file-based",features:{commandPalette:!1,tableOfContents:!0,readingTime:!1,linkedMentions:!0,comments:!0},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file-based",indexFileName:"index"},imageInserterSettings:{insertFormat:"[[attachments/{image-url}]]"}}},ot={name:Ze,description:et,features:tt,theme:nt,contentOrganization:at,config:st};var pe=class{constructor(t){this.app=t,this.fileManager=new ie(t),this.presetModifier=new ce}async getConfigFileInfo(){return this.fileManager.getConfigFileInfo()}async readConfig(){return this.fileManager.readConfig()}async writeConfig(t){return this.fileManager.writeConfig(t)}async applyPreset(t){let e=await this.readConfig(),a=this.presetModifier.modifyConfigFromPreset(t,e);return await this.writeConfig(a)}async detectAstroDevServer(){return this.fileManager.detectAstroDevServer()}async updateIndividualFeatures(t){let e=await this.readConfig(),a=this.presetModifier.modifyConfigFromFeatures(t,e);return await this.writeConfig(a)}async triggerRebuild(){}getTemplatePreset(t){try{switch(t){case"standard":return Oe;case"minimal":return Te;case"compact":return Se;case"documentation":return Ce;default:return console.error(`Unknown template ID: ${t}`),null}}catch(e){return console.error("Error loading template preset:",e),null}}};var de=class{constructor(t){this.app=t}async getPluginStatus(){var n;let t=this.app.plugins,e=["astro-composer","insert-unsplash-image","obsidian-shellcommands"],a=[];for(let s of e){let i=(n=t==null?void 0:t.plugins)==null?void 0:n[s],o=(t==null?void 0:t.enabledPlugins)&&t.enabledPlugins.has(s),r=this.isPluginInstalled(s);a.push({name:this.getPluginDisplayName(s),installed:r,enabled:o||!1,configurable:this.isPluginConfigurable(s),currentSettings:i?await this.getPluginSettings(i):void 0})}return a}isPluginInstalled(t){var n,s;let e=(n=this.app.plugins)==null?void 0:n.communityPlugins;if(e&&Array.isArray(e))return e.includes(t);let a=this.app.plugins;return!!((s=a==null?void 0:a.plugins)!=null&&s[t])}getPluginDisplayName(t){return{"astro-composer":"Astro Composer","insert-unsplash-image":"Image Inserter","obsidian-shellcommands":"Shell Commands"}[t]||t}isPluginConfigurable(t){return["astro-composer","insert-unsplash-image"].includes(t)}async getPluginSettings(t){return{}}async configurePlugins(t){let e=0,a=0;try{return a++,await this.configureObsidianSettings(t.obsidianSettings),e++,a++,await this.configureAstroComposerSettings(t.astroComposerSettings),e++,a++,await this.configureImageInserterSettings(t.imageInserterSettings),e++,e>0}catch(n){return console.error("Plugin configuration failed:",n),!1}}async configureObsidianSettings(t){try{let e=this.app.vault.config;t.attachmentLocation==="subfolder"?(e.newLinkFormat="relative",e.attachmentFolderPath=`./${t.subfolderName}`):(e.newLinkFormat="relative",e.attachmentFolderPath="./");let a=this.app.settings;a&&"set"in a&&(a.set("attachmentFolderPath",e.attachmentFolderPath),a.set("newLinkFormat",e.newLinkFormat)),await this.app.vault.saveConfig()}catch(e){throw console.error("Failed to configure Obsidian settings:",e),e}}async configureAstroComposerSettings(t){var e;try{let a=this.app.plugins,n=(e=a==null?void 0:a.plugins)==null?void 0:e["astro-composer"];n&&n.settings&&(n.settings.creationMode=t.creationMode,n.settings.indexFileName=t.indexFileName,await n.saveSettings())}catch(a){console.error("Failed to configure Astro Composer:",a)}}async configureImageInserterSettings(t){var e;try{let a=this.app.plugins,n=(e=a==null?void 0:a.plugins)==null?void 0:e["insert-unsplash-image"];n&&n.settings&&(n.settings.frontmatter&&(n.settings.frontmatter.valueFormat=t.valueFormat),await n.saveSettings())}catch(a){console.error("Failed to configure Image Inserter:",a)}}async getManualConfigurationInstructions(t){let e=`## Obsidian Settings
`;return e+=`1. Go to **Settings \u2192 Files & Links**
`,e+="2. Set **Default location for new attachments** to: ",e+=t.obsidianSettings.attachmentLocation==="subfolder"?`**"In subfolder under current folder"**
`:`**"Same folder as current file"**
`,t.obsidianSettings.attachmentLocation==="subfolder"&&(e+=`3. Set **Subfolder name** to: **"${t.obsidianSettings.subfolderName}"**
`),e+=`
`,e+=`## Astro Composer Plugin
`,e+=`1. Go to **Settings \u2192 Community plugins \u2192 Astro Composer**
`,e+=`2. Set **Creation mode** to: "${t.astroComposerSettings.creationMode}"
`,t.astroComposerSettings.creationMode==="folder"&&(e+=`3. Set **Index file name** to: "${t.astroComposerSettings.indexFileName}"
`),e+=`
`,e+=`## Image Inserter Plugin
`,e+=`1. Go to **Settings \u2192 Community plugins \u2192 Image Inserter**
`,e+=`2. Set **Frontmatter \u2192 Value Format** to: "${t.imageInserterSettings.valueFormat}"
`,e}};var ge=class extends Pe.Plugin{async onload(){await this.loadSettings(),this.configManager=new pe(this.app),this.pluginManager=new de(this.app),Ee(this),this.settingsTab=new oe(this.app,this),this.addSettingTab(this.settingsTab),this.addRibbonIcon("rocket","Astro Modular Settings",async()=>{await this.loadSettings(),new I(this.app,this).open()}),this.settings.runWizardOnStartup&&(this.startupTimeoutId=window.setTimeout(()=>{this.runStartupWizard()},2e3))}onunload(){this.startupTimeoutId&&(window.clearTimeout(this.startupTimeoutId),this.startupTimeoutId=void 0)}async loadSettings(){this.settings=Object.assign({},D,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async runStartupWizard(){await this.loadSettings(),new I(this.app,this).open()}openSettings(){this.app.setting.open(),this.app.setting.openTabById(this.manifest.id)}triggerSettingsRefresh(){this.settingsTab&&this.settingsTab.render()}};
