/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var A=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var H=Object.getOwnPropertyNames;var B=Object.prototype.hasOwnProperty;var z=(m,r)=>{for(var e in r)A(m,e,{get:r[e],enumerable:!0})},U=(m,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of H(r))!B.call(m,o)&&o!==e&&A(m,o,{get:()=>r[o],enumerable:!(t=$(r,o))||t.enumerable});return m};var W=m=>U(A({},"__esModule",{value:!0}),m);var V={};z(V,{default:()=>_});module.exports=W(V);var w=require("obsidian");var P=["Inter","Roboto","Open Sans","Lato","Poppins","Source Sans Pro","Nunito","Montserrat","Playfair Display","Merriweather","Lora","Crimson Text","PT Serif","Libre Baskerville","Fira Code","JetBrains Mono","Source Code Pro","IBM Plex Mono","Cascadia Code"],M={runWizardOnStartup:!0,currentTemplate:"standard",currentTheme:"oxygen",contentOrganization:"file-based",siteInfo:{site:"https://astro-modular.netlify.app",title:"Astro Modular",description:"A flexible blog theme designed for Obsidian users.",author:"David V. Kimball",language:"en"},navigation:{pages:[{title:"Posts",url:"/posts"},{title:"Projects",url:"/projects"},{title:"Docs",url:"/docs"},{title:"About",url:"/about"},{title:"GitHub",url:"https://github.com/davidvkimball/astro-modular"}],social:[{title:"X",url:"https://x.com/davidvkimball",icon:"x-twitter"},{title:"GitHub",url:"https://github.com/davidvkimball",icon:"github"}]},features:{commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!0,comments:!1,graphView:!0,postNavigation:!0,scrollToTop:!0,darkModeToggleButton:"both",showSocialIconsInFooter:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og",linkedMentionsCompact:!1},typography:{headingFont:"Inter",proseFont:"Inter",monoFont:"JetBrains Mono",fontSource:"local",customFonts:{heading:"",prose:"",mono:""}},optionalFeatures:{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}},deployment:{platform:"netlify"},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file",indexFileName:"index"},imageInserterSettings:{valueFormat:"[[attachments/{image-url}]]",insertFormat:"[[attachments/{image-url}]]"}}},S=[{id:"oxygen",name:"Oxygen",description:"Modern, clean design",previewColors:["#075985","#38bdf8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#020617"},{id:"minimal",name:"Minimal",description:"Understated with high contrast",previewColors:["#2d383c","#87bfcf"],backgroundColorLight:"#fafafa",backgroundColorDark:"#1a1a1a"},{id:"atom",name:"Atom",description:"Dark theme with vibrant accents",previewColors:["#075985","#578af2"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#181a1f"},{id:"ayu-light",name:"Ayu Light",description:"Clean light theme",previewColors:["#99521a","#ff9933"],backgroundColorLight:"#f8f8f0",backgroundColorDark:"#0f1419"},{id:"ayu-mirage",name:"Ayu Mirage",description:"Soft dark theme",previewColors:["#99521a","#ff9933"],backgroundColorLight:"#f8f8f0",backgroundColorDark:"#0f1419"},{id:"ayu-dark",name:"Ayu Dark",description:"Deep dark theme",previewColors:["#99521a","#ff9933"],backgroundColorLight:"#f8f8f0",backgroundColorDark:"#0f1419"},{id:"catppuccin",name:"Catppuccin",description:"Pastel color palette",previewColors:["#95624f","#df7763"],backgroundColorLight:"#fef7ed",backgroundColorDark:"#181825"},{id:"charcoal",name:"Charcoal",description:"Dark, professional look",previewColors:["#202020","#c0c0c0"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#000000"},{id:"dracula",name:"Dracula",description:"Dark theme with purple accents",previewColors:["#7c3aed","#a78bfa"],backgroundColorLight:"#f8f8f2",backgroundColorDark:"#191a21"},{id:"everforest",name:"Everforest",description:"Soft, warm colors",previewColors:["#5a7a5a","#83c092"],backgroundColorLight:"#f7f6f3",backgroundColorDark:"#2d353b"},{id:"flexoki",name:"Flexoki",description:"Based on Material Design 3",previewColors:["#16504a","#4dbdb5"],backgroundColorLight:"#fefefe",backgroundColorDark:"#100f0f"},{id:"gruvbox",name:"Gruvbox",description:"Retro groove color scheme",previewColors:["#7a5412","#f78b33"],backgroundColorLight:"#fbf1c7",backgroundColorDark:"#1d2021"},{id:"macos",name:"macOS",description:"Native macOS appearance",previewColors:["#002e66","#339fff"],backgroundColorLight:"#f5f5f7",backgroundColorDark:"#141414"},{id:"nord",name:"Nord",description:"Arctic-inspired color palette",previewColors:["#2e4c63","#5e94b8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#2e3440"},{id:"obsidian",name:"Obsidian",description:"Matches Obsidian's default theme",previewColors:["#522994","#9c75ff"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#0a0a0a"},{id:"rose-pine",name:"Ros\xE9 Pine",description:"All natural pine, faux fir, and winter",previewColors:["#ab2142","#ef97a9"],backgroundColorLight:"#faf4ed",backgroundColorDark:"#191724"},{id:"sky",name:"Sky",description:"Light, airy design",previewColors:["#136194","#46aad0"],backgroundColorLight:"#f0f9ff",backgroundColorDark:"#232729"},{id:"solarized",name:"Solarized",description:"Precision colors for machines and people",previewColors:["#0e3754","#339fff"],backgroundColorLight:"#fdf6e3",backgroundColorDark:"#002b36"},{id:"things",name:"Things",description:"Clean, minimal design",previewColors:["#1e3a8a","#4d95f7"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#17191c"}],v=[{id:"standard",name:"Standard",description:"Full-featured blog with all default options enabled",features:["Command palette","Table of contents","Reading time","Linked mentions","Footer","Social icons","Scroll to top","Dark mode toggle"],recommended:!0},{id:"compact",name:"Compact",description:"Balanced setup for smaller sites with optimized layout",features:["Command palette","Table of contents","Reading time","Compact linked mentions","Custom aspect ratio"],recommended:!1},{id:"minimal",name:"Minimal",description:"Clean, simple blog with minimal features and content",features:["Command palette","Search posts/pages","Minimal navigation"],recommended:!1},{id:"custom",name:"Custom",description:"Granular control over every setting - opens config.ts",features:["All features configurable"],recommended:!1}];var N=require("obsidian");var C=require("obsidian");var I=class{constructor(r){this.app=r,this.configPath="../config.ts",console.log("\u{1F4C1} Config path:",this.configPath)}async getConfigFileInfo(){console.log("\u{1F50D} Looking for config at:",this.configPath),console.log("\u{1F3E0} Vault root path:",this.app.vault.adapter.path);try{let r=require("fs"),e=require("path"),t=this.app.vault.adapter.basePath||this.app.vault.adapter.path;console.log("\u{1F3E0} Vault path object:",t),console.log("\u{1F3E0} Vault path type:",typeof t);let o=typeof t=="string"?t:t.toString();console.log("\u{1F3E0} Vault path string:",o);let n=e.join(o,"..","config.ts");if(console.log("\u{1F50D} Trying to read config from:",n),r.existsSync(n)){console.log("\u2705 Found config file outside vault at:",n);let i=r.readFileSync(n,"utf8"),l=r.statSync(n);return{exists:!0,path:n,content:i,lastModified:new Date(l.mtime),valid:!0,errors:[]}}else return console.log("\u274C Config file not found at:",n),{exists:!1,path:n,content:"",lastModified:new Date,valid:!1,errors:["Config file not found"]}}catch(r){return console.log("\u274C Error accessing file outside vault:",r.message),{exists:!1,path:this.configPath,content:"",lastModified:new Date,valid:!1,errors:["Cannot access file outside vault"]}}}validateConfigContent(r){return r.includes("defineConfig")||r.includes("export default")||r.includes("astro/config")}async readConfig(){return(await this.getConfigFileInfo()).content}async writeConfig(r){console.log("\u{1F4DD} ConfigManager: Attempting to write config");try{let e=require("fs"),t=require("path"),o=this.app.vault.adapter.basePath||this.app.vault.adapter.path;console.log("\u{1F3E0} Vault path object:",o),console.log("\u{1F3E0} Vault path type:",typeof o);let n=typeof o=="string"?o:o.toString();console.log("\u{1F3E0} Vault path string:",n);let i=t.join(n,"..","config.ts");return console.log("\u{1F4C1} Writing config to:",i),e.writeFileSync(i,r,"utf8"),console.log("\u2705 Config file written successfully"),!0}catch(e){return console.log("\u274C Error writing config file:",e.message),!1}}async applyPreset(r){console.log("\u{1F527} ConfigManager: Starting preset application"),console.log("\u{1F4CB} Preset:",r.name),console.log("\u2699\uFE0F Settings:",r.config);let e=await this.readConfig();console.log("\u{1F4D6} Current config length:",e.length),console.log("\u{1F4D6} Current config preview:",e.substring(0,200)+"...");let t=this.modifyConfigFromPreset(r,e);console.log("\u{1F195} Modified config length:",t.length),console.log("\u{1F195} Modified config preview:",t.substring(0,200)+"...");let o=await this.writeConfig(t);return console.log("\u{1F4BE} Write result:",o),o}modifyConfigFromPreset(r,e){var L,k;let t=r.config;console.log("\u{1F504} ConfigManager: Modifying existing config from preset"),console.log("\u{1F3A8} Theme:",t.currentTheme),console.log("\u{1F524} Fonts:",t.typography),console.log("\u{1F50D} Current config contains style:",e.includes('style: "circle"')),console.log("\u{1F50D} Current config contains pages:",e.includes("pages: false"));let o=/search:\s*\{\s*posts:\s*(true|false),\s*pages:\s*(true|false),\s*projects:\s*(true|false),\s*docs:\s*(true|false),\s*\}/,n=/url:\s*"[^"]*",?\s*\/\/ Optional\s*,\s*placement:\s*"[^"]*",?\s*\/\/ "footer" or "header"\s*,\s*style:\s*"[^"]*",?\s*\/\/ "circle", "square", or "none"/;console.log("\u{1F50D} Search regex will match:",o.test(e)),console.log("\u{1F50D} Style regex will match:",n.test(e));let i=e.match(/style:\s*"[^"]*"/g);console.log("\u{1F50D} All style matches:",i);let l=e.match(/pages:\s*(true|false)/g);console.log("\u{1F50D} All pages matches:",l);let c=/style:\s*"[^"]*",?\s*\/\/ "circle", "square", or "none"/,p=/pages:\s*(true|false),/;console.log("\u{1F50D} Style regex test:",c.test(e)),console.log("\u{1F50D} Pages regex test:",p.test(e));let d=e.match(/placement:\s*"[^"]*",?\s*\/\/ "footer" or "header"\s*,\s*style:\s*"[^"]*",?\s*\/\/ "circle", "square", or "none"/);console.log("\u{1F50D} Style context match:",d);let g=e.match(/search:\s*\{\s*posts:\s*(true|false),\s*pages:\s*(true|false),\s*projects:\s*(true|false),\s*docs:\s*(true|false),\s*\}/);console.log("\u{1F50D} Pages context match:",g);let a=this.getTemplateConfig(r.name,t),s=e;console.log("\u{1F50D} Looking for theme marker in config...");let h=e.includes("// [CONFIG:THEME]");if(console.log("\u{1F50D} Theme marker exists:",h),h){let f=/\/\/ \[CONFIG:THEME\]\s*\n\s*theme:\s*"[^"]*"/,O=e.match(f);console.log("\u{1F50D} Theme regex match:",O),s=s.replace(f,`// [CONFIG:THEME]
  theme: "${t.currentTheme}"`),console.log("\u{1F50D} Theme replacement applied")}else console.log("\u274C Theme marker not found in config!");s=s.replace(/\/\/ \[CONFIG:FONT_SOURCE\]\s*\n\s*source:\s*"[^"]*"/,`// [CONFIG:FONT_SOURCE]
    source: "${t.typography.fontSource}"`),s=s.replace(/\/\/ \[CONFIG:FONT_BODY\]\s*\n\s*body:\s*"[^"]*"/,`// [CONFIG:FONT_BODY]
      body: "${t.typography.fontSource==="cdn"?t.typography.customFonts.prose:t.typography.proseFont}"`),s=s.replace(/\/\/ \[CONFIG:FONT_HEADING\]\s*\n\s*heading:\s*"[^"]*"/,`// [CONFIG:FONT_HEADING]
      heading: "${t.typography.fontSource==="cdn"?t.typography.customFonts.heading:t.typography.headingFont}"`),s=s.replace(/\/\/ \[CONFIG:FONT_MONO\]\s*\n\s*mono:\s*"[^"]*"/,`// [CONFIG:FONT_MONO]
      mono: "${t.typography.fontSource==="cdn"?t.typography.customFonts.mono:t.typography.monoFont}"`),s=s.replace(/\/\/ \[CONFIG:DEPLOYMENT_PLATFORM\]\s*\n\s*platform:\s*"[^"]*"/,`// [CONFIG:DEPLOYMENT_PLATFORM]
    platform: "${t.deployment.platform}"`),(L=a.layout)!=null&&L.contentWidth&&(s=s.replace(/\/\/ \[CONFIG:LAYOUT_CONTENT_WIDTH\]\s*\n\s*contentWidth:\s*"[^"]*"/,`// [CONFIG:LAYOUT_CONTENT_WIDTH]
    contentWidth: "${a.layout.contentWidth}"`)),a.optionalContentTypes&&(a.optionalContentTypes.projects!==void 0&&(s=s.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS\]\s*\n\s*projects:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS]
    projects: ${a.optionalContentTypes.projects}`)),a.optionalContentTypes.docs!==void 0&&(s=s.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_DOCS\]\s*\n\s*docs:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_DOCS]
    docs: ${a.optionalContentTypes.docs}`))),a.darkModeToggleButton&&(s=s.replace(/\/\/ \[CONFIG:DARK_MODE_TOGGLE_BUTTON\]\s*\n\s*darkModeToggleButton:\s*"[^"]*"/,`// [CONFIG:DARK_MODE_TOGGLE_BUTTON]
  darkModeToggleButton: "${a.darkModeToggleButton}"`)),a.footer&&(a.footer.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:FOOTER_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:FOOTER_ENABLED]
    enabled: ${a.footer.enabled}`)),a.footer.showSocialIconsInFooter!==void 0&&(s=s.replace(/\/\/ \[CONFIG:FOOTER_SHOW_SOCIAL_ICONS\]\s*showSocialIconsInFooter:\s*(true|false)/,`// [CONFIG:FOOTER_SHOW_SOCIAL_ICONS]
    showSocialIconsInFooter: ${a.footer.showSocialIconsInFooter}`))),a.navigation&&(a.navigation.style&&(s=s.replace(/\/\/ \[CONFIG:NAVIGATION_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:NAVIGATION_STYLE]
    style: "${a.navigation.style}"`)),a.navigation.showNavigation!==void 0&&(s=s.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_NAVIGATION\]\s*showNavigation:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_NAVIGATION]
    showNavigation: ${a.navigation.showNavigation}`)),a.navigation.showMobileMenu!==void 0&&(s=s.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_MOBILE_MENU\]\s*showMobileMenu:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_MOBILE_MENU]
    showMobileMenu: ${a.navigation.showMobileMenu}`))),a.commandPalette&&(a.commandPalette.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_ENABLED]
    enabled: ${a.commandPalette.enabled}`)),a.commandPalette.shortcut!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SHORTCUT\]\s*shortcut:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_SHORTCUT]
    shortcut: "${a.commandPalette.shortcut}"`)),a.commandPalette.placeholder!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_PLACEHOLDER\]\s*placeholder:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_PLACEHOLDER]
    placeholder: "${a.commandPalette.placeholder}"`)),a.commandPalette.search&&(console.log("\u{1F50D} Template search config:",a.commandPalette.search),a.commandPalette.search.posts!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_POSTS\]\s*posts:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_POSTS]
      posts: ${a.commandPalette.search.posts}`)),a.commandPalette.search.pages!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PAGES]
      pages: ${a.commandPalette.search.pages}`)),a.commandPalette.search.projects!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS\]\s*projects:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS]
      projects: ${a.commandPalette.search.projects}`)),a.commandPalette.search.docs!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_DOCS\]\s*docs:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_DOCS]
      docs: ${a.commandPalette.search.docs}`)),console.log("\u{1F50D} Search replacement completed")),a.commandPalette.sections&&(console.log("\u{1F50D} Template sections config:",a.commandPalette.sections),a.commandPalette.sections.quickActions!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS\]\s*quickActions:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS]
      quickActions: ${a.commandPalette.sections.quickActions}`)),a.commandPalette.sections.pages!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_PAGES]
      pages: ${a.commandPalette.sections.pages}`)),a.commandPalette.sections.social!==void 0&&(s=s.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL\]\s*social:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL]
      social: ${a.commandPalette.sections.social}`)),console.log("\u{1F50D} Sections replacement completed"))),a.homeOptions&&(a.homeOptions.featuredPost&&(a.homeOptions.featuredPost.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED]
      enabled: ${a.homeOptions.featuredPost.enabled}`)),a.homeOptions.featuredPost.type&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE\]\s*type:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE]
      type: "${a.homeOptions.featuredPost.type}"`))),a.homeOptions.recentPosts&&(a.homeOptions.recentPosts.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED]
      enabled: ${a.homeOptions.recentPosts.enabled}`)),a.homeOptions.recentPosts.count&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT]
      count: ${a.homeOptions.recentPosts.count}`))),a.homeOptions.projects&&(a.homeOptions.projects.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_PROJECTS_ENABLED]
      enabled: ${a.homeOptions.projects.enabled}`)),a.homeOptions.projects.count&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_PROJECTS_COUNT]
      count: ${a.homeOptions.projects.count}`))),a.homeOptions.docs&&(a.homeOptions.docs.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_DOCS_ENABLED]
      enabled: ${a.homeOptions.docs.enabled}`)),a.homeOptions.docs.count&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_DOCS_COUNT]
      count: ${a.homeOptions.docs.count}`))),(k=a.homeOptions.blurb)!=null&&k.placement&&(s=s.replace(/\/\/ \[CONFIG:HOME_OPTIONS_BLURB_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_BLURB_PLACEMENT]
      placement: "${a.homeOptions.blurb.placement}"`))),a.postOptions&&(a.postOptions.postsPerPage&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_POSTS_PER_PAGE\]\s*postsPerPage:\s*\d+/,`// [CONFIG:POST_OPTIONS_POSTS_PER_PAGE]
    postsPerPage: ${a.postOptions.postsPerPage}`)),[{key:"readingTime",marker:"CONFIG:POST_OPTIONS_READING_TIME"},{key:"wordCount",marker:"CONFIG:POST_OPTIONS_WORD_COUNT"},{key:"tableOfContents",marker:"CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS"},{key:"tags",marker:"CONFIG:POST_OPTIONS_TAGS"},{key:"postNavigation",marker:"CONFIG:POST_OPTIONS_POST_NAVIGATION"}].forEach(O=>{a.postOptions[O.key]!==void 0&&(s=s.replace(new RegExp(`// \\[${O.marker}\\]\\s*${O.key}:\\s*(true|false)`),`// [${O.marker}]
    ${O.key}: ${a.postOptions[O.key]}`))}),a.postOptions.linkedMentions&&(a.postOptions.linkedMentions.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED]
      enabled: ${a.postOptions.linkedMentions.enabled}`)),a.postOptions.linkedMentions.linkedMentionsCompact!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT\]\s*linkedMentionsCompact:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT]
      linkedMentionsCompact: ${a.postOptions.linkedMentions.linkedMentionsCompact}`))),a.postOptions.graphView&&(a.postOptions.graphView.enabled!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED]
    enabled: ${a.postOptions.graphView.enabled}`)),a.postOptions.graphView.showInSidebar!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR\]\s*showInSidebar:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR]
      showInSidebar: ${a.postOptions.graphView.showInSidebar}`)),a.postOptions.graphView.showInCommandPalette!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE\]\s*showInCommandPalette:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE]
      showInCommandPalette: ${a.postOptions.graphView.showInCommandPalette}`)),a.postOptions.graphView.maxNodes&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES\]\s*maxNodes:\s*\d+/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES]
      maxNodes: ${a.postOptions.graphView.maxNodes}`)),a.postOptions.graphView.showOrphanedPosts!==void 0&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS\]\s*showOrphanedPosts:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS]
      showOrphanedPosts: ${a.postOptions.graphView.showOrphanedPosts}`))),a.postOptions.showPostCardCoverImages&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES\]\s*showPostCardCoverImages:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES]
    showPostCardCoverImages: "${a.postOptions.showPostCardCoverImages}"`)),a.postOptions.postCardAspectRatio&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO\]\s*postCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO]
    postCardAspectRatio: "${a.postOptions.postCardAspectRatio}"`)),a.postOptions.customPostCardAspectRatio&&(s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO\]\s*customPostCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO]
    customPostCardAspectRatio: "${a.postOptions.customPostCardAspectRatio}"`))),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:PROFILE_PICTURE_ENABLED]
    enabled: ${t.optionalFeatures.profilePicture.enabled}`),t.optionalFeatures.profilePicture.enabled&&(s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_IMAGE\]\s*image:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_IMAGE]
    image: "${t.optionalFeatures.profilePicture.image}"`),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ALT\]\s*alt:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_ALT]
    alt: "${t.optionalFeatures.profilePicture.alt}"`),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_SIZE\]\s*size:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_SIZE]
    size: "${t.optionalFeatures.profilePicture.size}"`),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_URL\]\s*url:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_URL]
    url: "${t.optionalFeatures.profilePicture.url||""}"`),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_PLACEMENT]
    placement: "${t.optionalFeatures.profilePicture.placement}"`),s=s.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_STYLE]
    style: "${t.optionalFeatures.profilePicture.style}"`)),s=s.replace(/\/\/ \[CONFIG:POST_OPTIONS_COMMENTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_COMMENTS_ENABLED]
      enabled: ${t.optionalFeatures.comments.enabled}`);let E=this.validateMarkers(s);if(!E.valid)return console.error("\u274C Config modification failed: Missing markers:",E.missing),console.error("Please ensure all CONFIG markers are present in your config.ts file"),e;try{let f=(s.match(/\{/g)||[]).length,O=(s.match(/\}/g)||[]).length,R=(s.match(/\[/g)||[]).length,x=(s.match(/\]/g)||[]).length;if(f!==O)return console.error("\u274C Config modification failed: Mismatched braces"),e;if(R!==x)return console.error("\u274C Config modification failed: Mismatched brackets"),e;console.log("\u2705 Config modification complete")}catch(f){return console.error("\u274C Config validation failed:",f),e}s=s.replace(/\/\/ \[CONFIG:SITE_URL\]\s*\n\s*site:\s*"[^"]*"/,`// [CONFIG:SITE_URL]
  site: "${t.siteInfo.site}"`),s=s.replace(/\/\/ \[CONFIG:SITE_TITLE\]\s*\n\s*title:\s*"[^"]*"/,`// [CONFIG:SITE_TITLE]
  title: "${t.siteInfo.title}"`),s=s.replace(/\/\/ \[CONFIG:SITE_DESCRIPTION\]\s*\n\s*description:\s*"[^"]*"/,`// [CONFIG:SITE_DESCRIPTION]
  description: "${t.siteInfo.description}"`),s=s.replace(/\/\/ \[CONFIG:SITE_AUTHOR\]\s*\n\s*author:\s*"[^"]*"/,`// [CONFIG:SITE_AUTHOR]
  author: "${t.siteInfo.author}"`),s=s.replace(/\/\/ \[CONFIG:SITE_LANGUAGE\]\s*\n\s*language:\s*"[^"]*"/,`// [CONFIG:SITE_LANGUAGE]
  language: "${t.siteInfo.language}"`);let F=t.navigation.pages.map(f=>`      { title: "${f.title}", url: "${f.url}" }`).join(`,
`);s=s.replace(/\/\/ \[CONFIG:NAVIGATION_PAGES\]\s*\n\s*pages:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_PAGES]
    pages: [
${F},
    ]`);let D=t.navigation.social.map(f=>`      {
        title: "${f.title}",
        url: "${f.url}",
        icon: "${f.icon}",
      }`).join(`,
`);return s=s.replace(/\/\/ \[CONFIG:NAVIGATION_SOCIAL\]\s*\n\s*social:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_SOCIAL]
    social: [
${D},
    ]`),s}validateMarkers(r){let t=["CONFIG:SITE_URL","CONFIG:SITE_TITLE","CONFIG:SITE_DESCRIPTION","CONFIG:SITE_AUTHOR","CONFIG:SITE_LANGUAGE","CONFIG:THEME","CONFIG:FONT_SOURCE","CONFIG:FONT_BODY","CONFIG:FONT_HEADING","CONFIG:FONT_MONO","CONFIG:LAYOUT_CONTENT_WIDTH","CONFIG:FOOTER_ENABLED","CONFIG:FOOTER_SHOW_SOCIAL_ICONS","CONFIG:SCROLL_TO_TOP","CONFIG:DARK_MODE_TOGGLE_BUTTON","CONFIG:DEPLOYMENT_PLATFORM","CONFIG:COMMAND_PALETTE_ENABLED","CONFIG:COMMAND_PALETTE_SHORTCUT","CONFIG:COMMAND_PALETTE_PLACEHOLDER","CONFIG:COMMAND_PALETTE_SEARCH_POSTS","CONFIG:COMMAND_PALETTE_SEARCH_PAGES","CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS","CONFIG:COMMAND_PALETTE_SEARCH_DOCS","CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS","CONFIG:COMMAND_PALETTE_SECTIONS_PAGES","CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL","CONFIG:PROFILE_PICTURE_ENABLED","CONFIG:PROFILE_PICTURE_IMAGE","CONFIG:PROFILE_PICTURE_ALT","CONFIG:PROFILE_PICTURE_SIZE","CONFIG:PROFILE_PICTURE_URL","CONFIG:PROFILE_PICTURE_PLACEMENT","CONFIG:PROFILE_PICTURE_STYLE","CONFIG:NAVIGATION_SHOW_NAVIGATION","CONFIG:NAVIGATION_STYLE","CONFIG:NAVIGATION_SHOW_MOBILE_MENU","CONFIG:NAVIGATION_PAGES","CONFIG:NAVIGATION_SOCIAL","CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS","CONFIG:OPTIONAL_CONTENT_TYPES_DOCS","CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED","CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE","CONFIG:HOME_OPTIONS_FEATURED_POST_SLUG","CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED","CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT","CONFIG:HOME_OPTIONS_PROJECTS_ENABLED","CONFIG:HOME_OPTIONS_PROJECTS_COUNT","CONFIG:HOME_OPTIONS_DOCS_ENABLED","CONFIG:HOME_OPTIONS_DOCS_COUNT","CONFIG:HOME_OPTIONS_BLURB_PLACEMENT","CONFIG:POST_OPTIONS_POSTS_PER_PAGE","CONFIG:POST_OPTIONS_READING_TIME","CONFIG:POST_OPTIONS_WORD_COUNT","CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS","CONFIG:POST_OPTIONS_TAGS","CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED","CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT","CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE","CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS","CONFIG:POST_OPTIONS_POST_NAVIGATION","CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES","CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_COMMENTS_ENABLED"].filter(o=>!r.includes(`// [${o}]`));return{valid:t.length===0,missing:t}}interpolateTemplate(r,e,t){console.log("\u{1F504} ConfigManager: Interpolating template variables"),console.log("\u{1F3A8} Theme:",e.currentTheme),console.log("\u{1F4DD} Font source:",e.typography.fontSource),console.log("\u{1F524} Prose font:",e.typography.proseFont),console.log("\u{1F4CB} Template name:",t);let o=r.replace(/\$\{settings\.currentTheme\}/g,e.currentTheme).replace(/\$\{settings\.typography\.fontSource\}/g,e.typography.fontSource).replace(/\$\{settings\.typography\.proseFont\}/g,e.typography.proseFont).replace(/\$\{settings\.typography\.headingFont\}/g,e.typography.headingFont).replace(/\$\{settings\.typography\.monoFont\}/g,e.typography.monoFont).replace(/\$\{settings\.typography\.customFonts\.prose\}/g,e.typography.customFonts.prose).replace(/\$\{settings\.typography\.customFonts\.heading\}/g,e.typography.customFonts.heading).replace(/\$\{settings\.typography\.customFonts\.mono\}/g,e.typography.customFonts.mono).replace(/\$\{settings\.optionalFeatures\.comments\.enabled\}/g,e.optionalFeatures.comments.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.enabled\}/g,e.optionalFeatures.profilePicture.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.image\}/g,e.optionalFeatures.profilePicture.image).replace(/\$\{settings\.optionalFeatures\.profilePicture\.alt\}/g,e.optionalFeatures.profilePicture.alt).replace(/\$\{settings\.optionalFeatures\.profilePicture\.size\}/g,e.optionalFeatures.profilePicture.size).replace(/\$\{settings\.optionalFeatures\.profilePicture\.url\}/g,e.optionalFeatures.profilePicture.url||"").replace(/\$\{settings\.optionalFeatures\.profilePicture\.placement\}/g,e.optionalFeatures.profilePicture.placement).replace(/\$\{settings\.optionalFeatures\.profilePicture\.style\}/g,e.optionalFeatures.profilePicture.style).replace(/\$\{settings\.deployment\.platform\}/g,e.deployment.platform).replace(/\$\{templateName\}/g,t);return console.log("\u2705 Template interpolation complete"),console.log("\u{1F50D} Sample of interpolated result:",o.substring(0,300)+"..."),o}getTemplateConfig(r,e){switch(r){case"standard":return{layout:{contentWidth:"45rem"},footer:{enabled:!0,showSocialIconsInFooter:!0},darkModeToggleButton:"both",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!0,social:!0}},optionalContentTypes:{projects:!0,docs:!0},homeOptions:{featuredPost:{enabled:!0,type:"latest"},recentPosts:{enabled:!0,count:7},projects:{enabled:!0,count:2},docs:{enabled:!0,count:3},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!1},graphView:{enabled:!0,showInSidebar:!0,showInCommandPalette:!0,maxNodes:100},postNavigation:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"traditional"}};case"compact":return{layout:{contentWidth:"42rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!1,social:!0}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!0},graphView:{enabled:!1},postNavigation:!0,showPostCardCoverImages:"posts",postCardAspectRatio:"custom",customPostCardAspectRatio:"2.5/1"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"minimal"}};case"minimal":return{layout:{contentWidth:"40rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"",placeholder:"Search content",search:{posts:!0,pages:!0,projects:!1,docs:!1},sections:{quickActions:!1,pages:!1,social:!1}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"none"}},postOptions:{postsPerPage:6,readingTime:!1,wordCount:!1,tableOfContents:!1,tags:!1,linkedMentions:{enabled:!1,linkedMentionsCompact:!1},graphView:{enabled:!1},postNavigation:!1,showPostCardCoverImages:"none",postCardAspectRatio:"og"},navigation:{showNavigation:!1,showMobileMenu:!1,style:"minimal"}};default:return{}}}async detectAstroDevServer(){let r=this.app.vault.getAbstractFileByPath("package.json");if(r)try{let e=await this.app.vault.read(r);return e.includes("astro")&&e.includes("dev")}catch(e){return!1}return!1}async triggerRebuild(){}};var y=class{constructor(r){this.app=r}async getPluginStatus(){var o;let r=this.app.plugins,e=["astro-composer","insert-unsplash-image","obsidian-shellcommands"],t=[];for(let n of e){let i=(o=r==null?void 0:r.plugins)==null?void 0:o[n],l=(r==null?void 0:r.enabledPlugins)&&r.enabledPlugins.has(n),c=this.isPluginInstalled(n);t.push({name:this.getPluginDisplayName(n),installed:c,enabled:l,configurable:this.isPluginConfigurable(n),currentSettings:i?await this.getPluginSettings(i):void 0})}return t}isPluginInstalled(r){var o,n;let e=(o=this.app.plugins)==null?void 0:o.communityPlugins;if(e&&Array.isArray(e))return e.includes(r);let t=this.app.plugins;return!!((n=t==null?void 0:t.plugins)!=null&&n[r])}getPluginDisplayName(r){return{"astro-composer":"Astro Composer","insert-unsplash-image":"Image Inserter","obsidian-shellcommands":"Shell Commands"}[r]||r}isPluginConfigurable(r){return["astro-composer","insert-unsplash-image"].includes(r)}async getPluginSettings(r){return{}}async configurePlugins(r){console.log("Starting plugin configuration...");let e=0,t=0;try{return t++,console.log("Configuring Obsidian settings..."),await this.configureObsidianSettings(r.obsidianSettings),e++,console.log("Obsidian settings configured"),t++,console.log("Configuring Astro Composer..."),await this.configureAstroComposerSettings(r.astroComposerSettings),e++,t++,console.log("Configuring Image Inserter..."),await this.configureImageInserterSettings(r.imageInserterSettings),e++,console.log(`Plugin configuration complete! ${e}/${t} configurations successful`),e>0}catch(o){return console.error("Plugin configuration failed:",o),!1}}async configureObsidianSettings(r){try{let e=this.app.vault.config;r.attachmentLocation==="subfolder"?(e.newLinkFormat="relative",e.attachmentFolderPath=`./${r.subfolderName}`,console.log(`Set attachment location to subfolder: ${r.subfolderName}`)):(e.newLinkFormat="relative",e.attachmentFolderPath="./",console.log("Set attachment location to same folder as current file"));let t=this.app.settings;t&&(t.set("attachmentFolderPath",e.attachmentFolderPath),t.set("newLinkFormat",e.newLinkFormat)),await this.app.vault.saveConfig(),console.log("Obsidian settings saved")}catch(e){throw console.error("Failed to configure Obsidian settings:",e),e}}async configureAstroComposerSettings(r){var e;try{let t=this.app.plugins,o=(e=t==null?void 0:t.plugins)==null?void 0:e["astro-composer"];o&&o.settings?(o.settings.creationMode=r.creationMode,o.settings.indexFileName=r.indexFileName,await o.saveSettings(),console.log("Astro Composer configured successfully")):console.log("Astro Composer plugin not found or not enabled")}catch(t){console.error("Failed to configure Astro Composer:",t)}}async configureImageInserterSettings(r){var e;try{let t=this.app.plugins,o=(e=t==null?void 0:t.plugins)==null?void 0:e["insert-unsplash-image"];o&&o.settings?(o.settings.frontmatter&&(o.settings.frontmatter.valueFormat=r.valueFormat),await o.saveSettings(),console.log("Image Inserter configured successfully")):console.log("Image Inserter plugin not found or not enabled")}catch(t){console.error("Failed to configure Image Inserter:",t)}}async getManualConfigurationInstructions(r){let e=`# Manual Configuration Instructions

`;return e+=`## Obsidian Settings
`,e+=`1. Go to **Settings \u2192 Files & Links**
`,e+="2. Set **Default location for new attachments** to: ",e+=r.obsidianSettings.attachmentLocation==="subfolder"?`**"In subfolder under current folder"**
`:`**"Same folder as current file"**
`,r.obsidianSettings.attachmentLocation==="subfolder"&&(e+=`3. Set **Subfolder name** to: **"${r.obsidianSettings.subfolderName}"**
`),e+=`
`,e+=`## Astro Composer Plugin
`,e+=`1. Go to **Settings \u2192 Community plugins \u2192 Astro Composer**
`,e+=`2. Set **Creation mode** to: "${r.astroComposerSettings.creationMode}"
`,r.astroComposerSettings.creationMode==="folder"&&(e+=`3. Set **Index file name** to: "${r.astroComposerSettings.indexFileName}"
`),e+=`
`,e+=`## Image Inserter Plugin
`,e+=`1. Go to **Settings \u2192 Community plugins \u2192 Image Inserter**
`,e+=`2. Set **Frontmatter \u2192 Value Format** to: "${r.imageInserterSettings.valueFormat}"
`,e}};var T=class extends C.Modal{constructor(e,t,o){super(e);this.currentStep=1;this.totalSteps=10;this.selectedFeatures={};this.settings=t,this.configManager=new I(e),this.pluginManager=new y(e),this.onComplete=o,this.initializeFromSettings()}onOpen(){let{contentEl:e}=this;e.empty(),e.addClass("astro-modular-wizard"),this.renderCurrentStep()}onClose(){let{contentEl:e}=this;e.empty()}initializeFromSettings(){var e;this.selectedTemplate=this.settings.currentTemplate||"standard",this.selectedTheme=this.settings.currentTheme||"oxygen",this.selectedContentOrg=this.settings.contentOrganization||"file-based",this.selectedSiteInfo=this.settings.siteInfo||{site:"https://astro-modular.netlify.app",title:"Astro Modular",description:"A flexible blog theme designed for Obsidian users.",author:"David V. Kimball",language:"en"},this.selectedNavigation=this.settings.navigation||{pages:[{title:"Posts",url:"/posts"},{title:"Projects",url:"/projects"},{title:"Docs",url:"/docs"},{title:"About",url:"/about"},{title:"GitHub",url:"https://github.com/davidvkimball/astro-modular"}],social:[{title:"X",url:"https://x.com/davidvkimball",icon:"x-twitter"},{title:"GitHub",url:"https://github.com/davidvkimball",icon:"github"}]},this.selectedFeatures=this.settings.features||{},this.selectedTypography=this.settings.typography||{headingFont:"Inter",proseFont:"Inter",monoFont:"JetBrains Mono",fontSource:"local",customFonts:{heading:"",prose:"",mono:""}},this.selectedOptionalFeatures=this.settings.optionalFeatures||{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}},this.selectedDeployment=((e=this.settings.deployment)==null?void 0:e.platform)||"netlify",this.runWizardOnStartup=this.settings.runWizardOnStartup!==void 0?this.settings.runWizardOnStartup:!0}renderCurrentStep(){let{contentEl:e}=this;e.empty(),e.scrollTop=0;let t=e.createDiv("wizard-header"),o=Math.max(this.currentStep/this.totalSteps*100,5);t.innerHTML=`
			<h1>Astro Modular Setup</h1>
			<div class="wizard-progress">
				<div class="progress-bar">
					<div class="progress-fill"></div>
				</div>
				<span class="progress-text">Step ${this.currentStep} of ${this.totalSteps}</span>
			</div>
		`;let n=t.querySelector(".progress-fill"),i=t.querySelector(".progress-bar");n&&i&&(n.style.width=`${o}%`,n.style.setProperty("background","var(--interactive-accent)","important"),n.style.setProperty("height","12px","important"),n.style.setProperty("border-radius","4px","important"),n.style.setProperty("display","block","important"),n.style.setProperty("min-height","12px","important"),n.style.setProperty("margin","0","important"),n.style.setProperty("padding","0","important"),n.style.setProperty("position","absolute","important"),n.style.setProperty("top","0","important"),n.style.setProperty("left","0","important"));let l=e.createDiv("wizard-content");this.renderStepContent(l);let c=e.createDiv("wizard-footer");this.renderStepFooter(c)}renderStepContent(e){switch(this.currentStep){case 1:this.renderWelcomeStep(e);break;case 2:this.renderTemplateStep(e);break;case 3:this.renderThemeStep(e);break;case 4:this.renderFontStep(e);break;case 5:this.renderContentOrgStep(e);break;case 6:this.renderNavigationStep(e);break;case 7:this.renderOptionalFeaturesStep(e);break;case 8:this.renderDeploymentStep(e);break;case 9:this.renderPluginConfigStep(e);break;case 10:this.renderFinalizeStep(e);break}}renderWelcomeStep(e){var t,o,n,i,l;e.innerHTML=`
			<div class="welcome-content">
				<h2>Welcome to Astro Modular!</h2>
				<p>This wizard will help you set up your Astro Modular theme with the perfect configuration for your needs.</p>
				
				<div class="site-info-form">
					<h3>Site Information</h3>
					<div class="form-group">
						<label for="site-url">URL</label>
						<input type="text" id="site-url" value="${this.selectedSiteInfo.site}" placeholder="https://astro-modular.netlify.app">
					</div>
					<div class="form-group">
						<label for="site-title">Title</label>
						<input type="text" id="site-title" value="${this.selectedSiteInfo.title}" placeholder="Astro Modular">
					</div>
					<div class="form-group">
						<label for="site-description">Description</label>
						<input type="text" id="site-description" value="${this.selectedSiteInfo.description}" placeholder="A flexible blog theme designed for Obsidian users.">
					</div>
					<div class="form-group">
						<label for="site-author">Author Name</label>
						<input type="text" id="site-author" value="${this.selectedSiteInfo.author}" placeholder="David V. Kimball">
					</div>
					<div class="form-group">
						<label for="site-language">Language</label>
						<input type="text" id="site-language" value="${this.selectedSiteInfo.language}" placeholder="en">
					</div>
				</div>
			</div>
		`,(t=e.querySelector("#site-url"))==null||t.addEventListener("input",c=>{this.selectedSiteInfo.site=c.target.value}),(o=e.querySelector("#site-title"))==null||o.addEventListener("input",c=>{this.selectedSiteInfo.title=c.target.value}),(n=e.querySelector("#site-description"))==null||n.addEventListener("input",c=>{this.selectedSiteInfo.description=c.target.value}),(i=e.querySelector("#site-author"))==null||i.addEventListener("input",c=>{this.selectedSiteInfo.author=c.target.value}),(l=e.querySelector("#site-language"))==null||l.addEventListener("input",c=>{this.selectedSiteInfo.language=c.target.value})}renderTemplateStep(e){e.innerHTML=`
			<div class="template-selection">
				<h2>Choose your preset</h2>
				<p>Select a preset that best fits your content type and goals.</p>
				<div class="template-options">
					${v.map(t=>`
						<div class="template-option ${this.selectedTemplate===t.id?"selected":""}" 
							 data-template="${t.id}">
							<div class="template-header">
								<h3>${t.name}</h3>
								${t.recommended?'<span class="recommended">Default</span>':""}
							</div>
							<p class="template-description">${t.description}</p>
							<div class="template-features">
								${t.features.map(o=>`<span class="feature-tag">${o}</span>`).join("")}
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,e.querySelectorAll(".template-option").forEach(t=>{t.addEventListener("click",()=>{let o=t.getAttribute("data-template");if(o){if(this.selectedTemplate=o,o==="custom"){let n="../../../config.ts";this.app.vault.getAbstractFileByPath(n)?this.app.workspace.openLinkText("",n):(this.app.vault.create(n,`// Astro Modular Configuration
// Customize your settings here

export const siteConfig = {
  // Add your configuration here
};
`),this.app.workspace.openLinkText("",n)),new C.Notice("Opening config.ts for custom configuration"),this.close();return}this.renderCurrentStep()}})})}renderThemeStep(e){let t=this.isObsidianDarkMode();e.innerHTML=`
			<div class="theme-selection">
				<h2>Choose your theme</h2>
				<p>Select a color scheme that matches your style and content.</p>
				<div class="theme-options">
					${S.map(o=>`
						<div class="theme-option ${this.selectedTheme===o.id?"selected":""}" 
							 data-theme="${o.id}" 
							 style="background: ${t?o.backgroundColorDark:o.backgroundColorLight};">
							<div class="theme-preview" style="background: linear-gradient(135deg, ${o.previewColors.join(", ")});">
								<div class="theme-preview-content">
									<div class="preview-text">Sample Text</div>
									<div class="preview-accent">Accent</div>
								</div>
							</div>
							<div class="theme-info">
								<h3>${o.name}</h3>
								<p>${o.description}</p>
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,e.querySelectorAll(".theme-option").forEach(o=>{o.addEventListener("click",()=>{let n=o.getAttribute("data-theme");n&&(this.selectedTheme=n,this.renderCurrentStep())})})}renderContentOrgStep(e){e.innerHTML=`
			<div class="content-org-selection">
				<h2>Content organization</h2>
				<p>Choose how you want to organize your content and assets.</p>
				<div class="org-options">
					<div class="org-option ${this.selectedContentOrg==="file-based"?"selected":""}" 
						 data-org="file-based">
						<div class="org-header">
							<h3>File-based</h3>
							<span class="default-badge">Default</span>
						</div>
						<p>Single markdown files with images in attachments subfolder</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post.md
\u2514\u2500\u2500 attachments/
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
					<div class="org-option ${this.selectedContentOrg==="folder-based"?"selected":""}" 
						 data-org="folder-based">
						<div class="org-header">
							<h3>Folder-based</h3>
						</div>
						<p>Each post gets its own folder with co-located assets</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post/
\u2502   \u251C\u2500\u2500 index.md
\u2502   \u2514\u2500\u2500 image.jpg
\u2514\u2500\u2500 another-post/
    \u251C\u2500\u2500 index.md
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
				</div>
			</div>
		`,e.querySelectorAll(".org-option").forEach(t=>{t.addEventListener("click",()=>{let o=t.getAttribute("data-org");o&&(this.selectedContentOrg=o,this.renderCurrentStep())})})}renderNavigationStep(e){var t,o;e.innerHTML=`
			<div class="navigation-config">
				<h2>Navigation</h2>
				<p>Configure your site's navigation menu and social links.</p>
				
				<div class="navigation-sections">
					<div class="nav-section">
						<h3>Pages</h3>
						<p>Add and arrange navigation pages</p>
						<div class="nav-items" id="pages-list">
							${this.selectedNavigation.pages.map((n,i)=>`
								<div class="nav-item" data-index="${i}" draggable="true">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" value="${n.title}" placeholder="Page Title">
											<input type="text" class="nav-url" value="${n.url}" placeholder="/page-url">
										</div>
										<button class="nav-remove mod-warning" type="button">Remove</button>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add mod-button" id="add-page" type="button">Add Page</button>
					</div>
					
					<div class="nav-section">
						<h3>Social Links</h3>
						<p>Add social media and external links</p>
						<div class="nav-items" id="social-list">
							${this.selectedNavigation.social.map((n,i)=>`
								<div class="nav-item" data-index="${i}" draggable="true">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" value="${n.title}" placeholder="Social Title">
											<input type="text" class="nav-url" value="${n.url}" placeholder="https://example.com">
										</div>
										<button class="nav-remove mod-warning" type="button">Remove</button>
									</div>
									<div class="nav-icon-row">
										<input type="text" class="nav-icon" value="${n.icon}" placeholder="icon-name">
										<div class="nav-icon-help">
											<small>Icon names from <a href="https://fontawesome.com/search?ic=brands&o=r" target="_blank">FontAwesome Brands</a></small>
										</div>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add mod-button" id="add-social" type="button">Add Social Link</button>
					</div>
				</div>
			</div>
		`,(t=e.querySelector("#add-page"))==null||t.addEventListener("click",()=>{this.addNavigationItem("pages")}),(o=e.querySelector("#add-social"))==null||o.addEventListener("click",()=>{this.addNavigationItem("social")}),e.querySelectorAll("#pages-list .nav-remove").forEach(n=>{n.addEventListener("click",i=>{let l=i.target.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0");this.removeNavigationItem("pages",c),this.renderCurrentStep()})}),e.querySelectorAll("#social-list .nav-remove").forEach(n=>{n.addEventListener("click",i=>{let l=i.target.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0");this.removeNavigationItem("social",c),this.renderCurrentStep()})}),e.querySelectorAll("#pages-list .nav-title, #pages-list .nav-url").forEach(n=>{n.addEventListener("input",i=>{let l=i.target.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0"),p=i.target.classList.contains("nav-title")?"title":"url";this.updateNavigationItem("pages",c,p,i.target.value)})}),e.querySelectorAll("#social-list .nav-title, #social-list .nav-url").forEach(n=>{n.addEventListener("input",i=>{let l=i.target.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0"),p=i.target.classList.contains("nav-title")?"title":"url";this.updateNavigationItem("social",c,p,i.target.value)})}),e.querySelectorAll("#social-list .nav-icon").forEach(n=>{n.addEventListener("input",i=>{let l=i.target.closest(".nav-item"),c=parseInt((l==null?void 0:l.getAttribute("data-index"))||"0");this.updateNavigationItem("social",c,"icon",i.target.value)})}),this.setupDragAndDrop(e)}setupDragAndDrop(e){let t=null,o=-1,n=null;e.querySelectorAll(".nav-item").forEach(i=>{i.addEventListener("dragstart",l=>{var c;t=i,o=parseInt(i.getAttribute("data-index")||"0"),n=i.closest("#pages-list")?"pages":"social",i.classList.add("dragging"),(c=l.dataTransfer)==null||c.setData("text/plain","")}),i.addEventListener("dragend",l=>{i.classList.remove("dragging"),t=null,o=-1,n=null}),i.addEventListener("dragover",l=>{l.preventDefault(),i.classList.add("drag-over")}),i.addEventListener("dragleave",l=>{i.classList.remove("drag-over")}),i.addEventListener("drop",l=>{if(l.preventDefault(),i.classList.remove("drag-over"),t&&n){let c=parseInt(i.getAttribute("data-index")||"0");this.reorderNavigationItems(n,o,c),this.renderCurrentStep()}})})}reorderNavigationItems(e,t,o){let n=e==="pages"?this.selectedNavigation.pages:this.selectedNavigation.social;if(t===o)return;let[i]=n.splice(t,1);n.splice(o,0,i),console.log(`\u{1F504} Reordered ${e}: moved item from ${t} to ${o}`)}addNavigationItem(e){e==="pages"?this.selectedNavigation.pages.push({title:"",url:""}):this.selectedNavigation.social.push({title:"",url:"",icon:""}),this.renderCurrentStep()}removeNavigationItem(e,t){e==="pages"?this.selectedNavigation.pages.splice(t,1):this.selectedNavigation.social.splice(t,1)}updateNavigationItem(e,t,o,n){e==="pages"?this.selectedNavigation.pages[t][o]=n:this.selectedNavigation.social[t][o]=n}renderFontStep(e){var t,o,n,i,l,c,p;e.innerHTML=`
			<div class="font-selection">
				<h2>Choose your fonts</h2>
				<p>Select fonts for headings, body text, and code.</p>
				<div class="font-options">
					<div class="font-setting">
						<label>Heading Font</label>
						<select id="heading-font">
							${P.map(d=>`<option value="${d}" ${this.selectedTypography.headingFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Body Font</label>
						<select id="prose-font">
							${P.map(d=>`<option value="${d}" ${this.selectedTypography.proseFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Monospace Font</label>
						<select id="mono-font">
							${P.map(d=>`<option value="${d}" ${this.selectedTypography.monoFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Font Source</label>
						<select id="font-source">
							<option value="local" ${this.selectedTypography.fontSource==="local"?"selected":""}>Local (Google Fonts)</option>
							<option value="cdn" ${this.selectedTypography.fontSource==="cdn"?"selected":""}>CDN (Custom)</option>
						</select>
					</div>
					${this.selectedTypography.fontSource==="cdn"?`
						<div class="font-setting">
							<label>Custom Font URLs (comma-separated)</label>
							<input type="text" id="custom-fonts" placeholder="https://fonts.googleapis.com/css2?family=Custom+Font:wght@400;600&display=swap">
						</div>
						<div class="font-setting">
							<label>Heading Font Name</label>
							<input type="text" id="custom-heading-font" value="${this.selectedTypography.customFonts.heading}" placeholder="Custom Heading Font">
						</div>
						<div class="font-setting">
							<label>Body Font Name</label>
							<input type="text" id="custom-prose-font" value="${this.selectedTypography.customFonts.prose}" placeholder="Custom Body Font">
						</div>
						<div class="font-setting">
							<label>Monospace Font Name</label>
							<input type="text" id="custom-mono-font" value="${this.selectedTypography.customFonts.mono}" placeholder="Custom Monospace Font">
						</div>
					`:""}
				</div>
			</div>
		`,(t=e.querySelector("#heading-font"))==null||t.addEventListener("change",d=>{this.selectedTypography.headingFont=d.target.value}),(o=e.querySelector("#prose-font"))==null||o.addEventListener("change",d=>{this.selectedTypography.proseFont=d.target.value}),(n=e.querySelector("#mono-font"))==null||n.addEventListener("change",d=>{this.selectedTypography.monoFont=d.target.value}),(i=e.querySelector("#font-source"))==null||i.addEventListener("change",d=>{this.selectedTypography.fontSource=d.target.value,this.renderCurrentStep()}),(l=e.querySelector("#custom-heading-font"))==null||l.addEventListener("input",d=>{this.selectedTypography.customFonts.heading=d.target.value}),(c=e.querySelector("#custom-prose-font"))==null||c.addEventListener("input",d=>{this.selectedTypography.customFonts.prose=d.target.value}),(p=e.querySelector("#custom-mono-font"))==null||p.addEventListener("input",d=>{this.selectedTypography.customFonts.mono=d.target.value})}renderOptionalFeaturesStep(e){var t,o,n,i,l,c,p,d;e.innerHTML=`
			<div class="optional-features">
				<h2>Optional features</h2>
				<p>Configure additional features for your site.</p>
				
				<div class="features-grid">
					<div class="feature-card">
						<div class="feature-header">
							<label class="feature-toggle">
								<input type="checkbox" ${this.selectedOptionalFeatures.profilePicture.enabled?"checked":""} id="profile-picture-enabled">
								<span class="toggle-slider"></span>
								<span class="feature-label">Profile Picture</span>
							</label>
						</div>
						<div class="feature-details" id="profile-picture-details" style="display: ${this.selectedOptionalFeatures.profilePicture.enabled?"block":"none"};">
							<div class="settings-grid">
								<div class="setting-group">
									<label>Image Path (within /public folder)</label>
									<input type="text" id="profile-image" value="${this.selectedOptionalFeatures.profilePicture.image}" placeholder="/profile.jpg">
								</div>
								<div class="setting-group">
									<label>Alt Text</label>
									<input type="text" id="profile-alt" value="${this.selectedOptionalFeatures.profilePicture.alt}" placeholder="Profile picture">
								</div>
								<div class="setting-group">
									<label>Size</label>
									<select id="profile-size">
										<option value="sm" ${this.selectedOptionalFeatures.profilePicture.size==="sm"?"selected":""}>Small (32px)</option>
										<option value="md" ${this.selectedOptionalFeatures.profilePicture.size==="md"?"selected":""}>Medium (48px)</option>
										<option value="lg" ${this.selectedOptionalFeatures.profilePicture.size==="lg"?"selected":""}>Large (64px)</option>
									</select>
								</div>
								<div class="setting-group">
									<label>URL (optional)</label>
									<input type="text" id="profile-url" value="${this.selectedOptionalFeatures.profilePicture.url}" placeholder="/about">
								</div>
								<div class="setting-group">
									<label>Placement</label>
									<select id="profile-placement">
										<option value="footer" ${this.selectedOptionalFeatures.profilePicture.placement==="footer"?"selected":""}>Footer</option>
										<option value="header" ${this.selectedOptionalFeatures.profilePicture.placement==="header"?"selected":""}>Header</option>
									</select>
								</div>
								<div class="setting-group">
									<label>Style</label>
									<select id="profile-style">
										<option value="circle" ${this.selectedOptionalFeatures.profilePicture.style==="circle"?"selected":""}>Circle</option>
										<option value="square" ${this.selectedOptionalFeatures.profilePicture.style==="square"?"selected":""}>Square</option>
										<option value="none" ${this.selectedOptionalFeatures.profilePicture.style==="none"?"selected":""}>None</option>
									</select>
								</div>
							</div>
						</div>
					</div>
					
					<div class="feature-card">
						<div class="feature-header">
							<label class="feature-toggle">
								<input type="checkbox" ${this.selectedOptionalFeatures.comments.enabled?"checked":""} id="comments-enabled">
								<span class="toggle-slider"></span>
								<span class="feature-label">Comments (Giscus)</span>
							</label>
						</div>
						<div class="feature-details" id="comments-details" style="display: ${this.selectedOptionalFeatures.comments.enabled?"block":"none"};">
							<div class="feature-note">
								<p>Comments require GitHub repository setup. See the <a href="https://github.com/astro-modular/docs" target="_blank">documentation</a> for detailed setup instructions.</p>
							</div>
							<div style="height: 1rem;"></div>
						</div>
					</div>
				</div>
			</div>
		`,(t=e.querySelector("#profile-picture-enabled"))==null||t.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.enabled=g.target.checked;let a=e.querySelector("#profile-picture-details");a.style.display=this.selectedOptionalFeatures.profilePicture.enabled?"block":"none"}),(o=e.querySelector("#comments-enabled"))==null||o.addEventListener("change",g=>{this.selectedOptionalFeatures.comments.enabled=g.target.checked;let a=e.querySelector("#comments-details");a.style.display=this.selectedOptionalFeatures.comments.enabled?"block":"none"}),(n=e.querySelector("#profile-image"))==null||n.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.image=g.target.value}),(i=e.querySelector("#profile-alt"))==null||i.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.alt=g.target.value}),(l=e.querySelector("#profile-size"))==null||l.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.size=g.target.value}),(c=e.querySelector("#profile-url"))==null||c.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.url=g.target.value}),(p=e.querySelector("#profile-placement"))==null||p.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.placement=g.target.value}),(d=e.querySelector("#profile-style"))==null||d.addEventListener("change",g=>{this.selectedOptionalFeatures.profilePicture.style=g.target.value})}renderDeploymentStep(e){e.innerHTML=`
			<div class="deployment-selection">
				<h2>Deployment platform</h2>
				<p>Choose your deployment platform for automatic configuration file generation.</p>
				<div class="deployment-options">
					<div class="deployment-option ${this.selectedDeployment==="netlify"?"selected":""}" data-platform="netlify">
						<div class="deployment-header">
							<h3>Netlify</h3>
							<span class="default-badge">Default</span>
						</div>
						<p>Generates netlify.toml with redirects and build settings</p>
					</div>
					<div class="deployment-option ${this.selectedDeployment==="vercel"?"selected":""}" data-platform="vercel">
						<div class="deployment-header">
							<h3>Vercel</h3>
						</div>
						<p>Generates vercel.json with redirects and cache headers</p>
					</div>
					<div class="deployment-option ${this.selectedDeployment==="github-pages"?"selected":""}" data-platform="github-pages">
						<div class="deployment-header">
							<h3>GitHub Pages</h3>
						</div>
						<p>Generates public/redirects.txt for GitHub Pages redirects</p>
					</div>
				</div>
			</div>
		`,e.querySelectorAll(".deployment-option").forEach(t=>{t.addEventListener("click",()=>{let o=t.getAttribute("data-platform");o&&(this.selectedDeployment=o,this.renderCurrentStep())})})}renderFeaturesStep(e){if(this.selectedTemplate!=="custom"){this.currentStep++,this.renderCurrentStep();return}e.innerHTML=`
			<div class="features-selection">
				<h2>Configure features</h2>
				<p>Choose which features you want to enable for your site.</p>
				<div class="features-list">
					${Object.entries({commandPalette:"Command palette",tableOfContents:"Table of contents",readingTime:"Reading time",linkedMentions:"Linked mentions",comments:"Comments"}).map(([t,o])=>`
						<div class="feature-setting">
							<label class="feature-toggle">
								<input type="checkbox" ${this.selectedFeatures[t]?"checked":""} data-feature="${t}">
								<span class="toggle-slider"></span>
								<span class="feature-label">${o}</span>
							</label>
						</div>
					`).join("")}
				</div>
			</div>
		`,e.querySelectorAll('input[type="checkbox"]').forEach(t=>{t.addEventListener("change",o=>{let n=o.target,i=n.dataset.feature;i&&(this.selectedFeatures[i]=n.checked)})})}async renderPluginConfigStep(e){var o,n;let t=await this.pluginManager.getPluginStatus();e.innerHTML=`
			<div class="plugin-config">
				<h2>Plugin configuration</h2>
				<p>We'll automatically configure your plugins based on your choices.</p>
				<div class="plugin-status">
					${t.map(i=>`
						<div class="plugin-item ${i.installed?"installed":"missing"}">
							<div class="plugin-icon">
								<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
									${i.installed?'<path d="M20 6L9 17l-5-5"/>':'<path d="M18 6L6 18M6 6l12 12"/>'}
								</svg>
							</div>
							<div class="plugin-info">
								<h3>${i.name}</h3>
								<p>${i.installed?"Ready to configure":"Not installed"}</p>
							</div>
						</div>
					`).join("")}
				</div>
				<div class="config-options">
					<button class="mod-button mod-cta" id="auto-configure">Configure automatically</button>
					<button class="mod-button" id="manual-configure">Show manual instructions</button>
				</div>
			</div>
		`,(o=e.querySelector("#auto-configure"))==null||o.addEventListener("click",()=>{this.configurePlugins()}),(n=e.querySelector("#manual-configure"))==null||n.addEventListener("click",()=>{this.showManualInstructions()})}renderFinalizeStep(e){var t,o,n;e.innerHTML=`
			<div class="finalize-step">
				<h2>Almost done!</h2>
				<p>Review your configuration and complete the setup.</p>
				<div class="config-summary">
					<div class="summary-item">
						<strong>Preset:</strong> ${(t=v.find(i=>i.id===this.selectedTemplate))==null?void 0:t.name}
					</div>
					<div class="summary-item">
						<strong>Theme:</strong> ${(o=S.find(i=>i.id===this.selectedTheme))==null?void 0:o.name}
					</div>
					<div class="summary-item">
						<strong>Organization:</strong> ${this.selectedContentOrg==="file-based"?"File-based":"Folder-based"}
					</div>
				</div>
				<div class="finalize-options">
					<label class="checkbox-option">
						<input type="checkbox" ${this.runWizardOnStartup?"checked":""} id="run-on-startup">
						<span>Run wizard on startup</span>
					</label>
				</div>
			</div>
		`,(n=e.querySelector("#run-on-startup"))==null||n.addEventListener("change",i=>{this.runWizardOnStartup=i.target.checked})}renderStepFooter(e){let t=e.createDiv("wizard-buttons");if(this.currentStep>1&&t.createEl("button",{text:"Previous",cls:"mod-button"}).addEventListener("click",()=>{this.currentStep--,this.renderCurrentStep()}),t.createEl("button",{text:this.currentStep===this.totalSteps?"Complete Setup":"Next",cls:"mod-button mod-cta"}).addEventListener("click",()=>{this.currentStep===this.totalSteps?this.completeSetup():(this.currentStep++,this.renderCurrentStep())}),this.currentStep<this.totalSteps&&this.currentStep>1){let n=t.createEl("button",{text:"Skip",cls:"mod-button"});n.style.opacity="0.6",n.addEventListener("click",()=>{this.applyDefaultValues(),this.currentStep++,this.renderCurrentStep()})}}applyDefaultValues(){var e;switch(this.currentStep){case 4:this.selectedTypography=this.settings.typography||{headingFont:"Inter",proseFont:"Inter",monoFont:"JetBrains Mono",fontSource:"local",customFonts:{heading:"",prose:"",mono:""}};break;case 5:this.selectedContentOrg=this.settings.contentOrganization||"file-based";break;case 6:this.selectedOptionalFeatures=this.settings.optionalFeatures||{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}};break;case 7:this.selectedDeployment=((e=this.settings.deployment)==null?void 0:e.platform)||"netlify";break}}async configurePlugins(){let e=document.querySelector("#auto-configure");e&&(e.textContent="Configuring...",e.disabled=!0);try{let t={obsidianSettings:{attachmentLocation:this.selectedContentOrg==="file-based"?"subfolder":"same-folder",subfolderName:"attachments"},astroComposerSettings:{creationMode:this.selectedContentOrg==="file-based"?"file":"folder",indexFileName:"index"},imageInserterSettings:{valueFormat:this.selectedContentOrg==="file-based"?"[[attachments/{image-url}]]":"[[{image-url}]]",insertFormat:this.selectedContentOrg==="file-based"?"[[attachments/{image-url}]]":"[[{image-url}]]"}};console.log("\u{1F527} Configuring plugins with settings:",t);let o=await this.pluginManager.configurePlugins(t);return o?(new C.Notice("Plugins configured successfully!",3e3),e&&(e.textContent="Configured",e.style.background="var(--color-green)")):(new C.Notice("Some plugins could not be configured. Check console for details.",5e3),e&&(e.textContent="Partial Success",e.style.background="var(--color-orange)")),o}catch(t){return console.error("Plugin configuration failed:",t),new C.Notice("Plugin configuration failed. Check console for details.",5e3),e&&(e.textContent="Failed",e.style.background="var(--color-red)"),!1}}async showManualInstructions(){let e={obsidianSettings:{attachmentLocation:this.selectedContentOrg==="file-based"?"subfolder":"same-folder",subfolderName:"attachments"},astroComposerSettings:{creationMode:this.selectedContentOrg==="file-based"?"file":"folder",indexFileName:"index"},imageInserterSettings:{valueFormat:this.selectedContentOrg==="file-based"?"[[attachments/{image-url}]]":"[[{image-url}]]",insertFormat:this.selectedContentOrg==="file-based"?"[[attachments/{image-url}]]":"[[{image-url}]]"}},t=await this.pluginManager.getManualConfigurationInstructions(e),o=new C.Modal(this.app),n=t.replace(/\*\*(.*?)\*\*/g,"<strong>$1</strong>").replace(/\*(.*?)\*/g,"<em>$1</em>").replace(/^### (.*$)/gim,"<h3>$1</h3>").replace(/^## (.*$)/gim,"<h2>$1</h2>").replace(/^# (.*$)/gim,"<h1>$1</h1>").replace(/^\d+\. (.*$)/gim,"<li>$1</li>").replace(/^- (.*$)/gim,"<li>$1</li>").replace(/\n\n/g,"</p><p>").replace(/^(.*)$/gim,"<p>$1</p>").replace(/<p><\/p>/g,"").replace(/<p>(<h[1-6]>.*<\/h[1-6]>)<\/p>/g,"$1").replace(/<p>(<li>.*<\/li>)<\/p>/g,"<ul>$1</ul>").replace(/<\/ul><ul>/g,"").replace(/<p>(<strong>.*<\/strong>)<\/p>/g,"$1").replace(/<p>(<em>.*<\/em>)<\/p>/g,"$1");o.contentEl.innerHTML=`
			<div style="padding: 15px; line-height: 1.5; max-height: 75vh; overflow-y: auto;">
				${n}
			</div>
		`,o.open()}isObsidianDarkMode(){let e=document.body,t=e.classList.contains("theme-dark")||e.classList.contains("dark"),o=getComputedStyle(document.documentElement),i=o.getPropertyValue("color-scheme").trim()==="dark",l=o.getPropertyValue("--background-primary").trim(),c=Boolean(l&&(l.includes("#")&&parseInt(l.slice(1,3),16)<128||l.includes("rgb")&&l.includes("0, 0, 0")||l.includes("hsl")&&l.includes("0, 0%, 0%")));return t||i||c}async completeSetup(){console.log("\u{1F3AF} SetupWizard: Starting completion process"),console.log("\u{1F4CB} Selected template:",this.selectedTemplate),console.log("\u{1F3A8} Selected theme:",this.selectedTheme),console.log("\u{1F4C1} Selected content org:",this.selectedContentOrg),this.settings.currentTemplate=this.selectedTemplate,this.settings.currentTheme=this.selectedTheme,this.settings.contentOrganization=this.selectedContentOrg,this.settings.siteInfo=this.selectedSiteInfo,this.settings.navigation=this.selectedNavigation,this.settings.runWizardOnStartup=this.runWizardOnStartup,this.settings.typography=this.selectedTypography,this.settings.optionalFeatures=this.selectedOptionalFeatures,this.settings.deployment={platform:this.selectedDeployment},console.log("\u{1F4BE} Settings updated, calling config manager...");let e=await this.configManager.applyPreset({name:this.selectedTemplate,description:"",features:this.selectedFeatures,theme:this.selectedTheme,contentOrganization:this.selectedContentOrg,config:this.settings});console.log("\u{1F527} Config manager result:",e),await this.configManager.triggerRebuild();let t=await this.configurePlugins();this.onComplete(this.settings),this.close();let o=t?"Astro Modular setup complete! Configuration saved and plugins configured successfully. Your site is ready to go!":"Astro Modular setup complete! Configuration saved. Some plugins may need manual configuration - check the documentation for details.";new C.Notice(o,8e3)}};function G(m,r){m.addCommand({id:"open-settings",name:"Open Astro Modular Settings",callback:()=>{m.openSettings()}}),m.addCommand({id:"run-setup-wizard",name:"Run Setup Wizard",callback:()=>{new T(m.app,r,async t=>{r=t,await m.saveData(r)}).open()}}),m.addCommand({id:"open-config",name:"Open config.ts",callback:async()=>{m.app.vault.getAbstractFileByPath("astro.config.ts")?await m.app.workspace.openLinkText("","astro.config.ts"):new N.Notice("Config file not found. Make sure you have an Astro project in this vault.")}}),m.addCommand({id:"apply-configuration",name:"Apply Current Configuration",callback:async()=>{new N.Notice("Configuration applied successfully!")}}),m.addCommand({id:"toggle-wizard-startup",name:"Toggle Wizard on Startup",callback:async()=>{r.runWizardOnStartup=!r.runWizardOnStartup,await m.saveData(r),new N.Notice(`Wizard on startup ${r.runWizardOnStartup?"enabled":"disabled"}`)}})}var u=require("obsidian");var b=class extends u.PluginSettingTab{constructor(e,t,o){super(e,t);this.plugin=t,this.settings=o,this.configManager=new I(e),this.pluginManager=new y(e)}display(){let{containerEl:e}=this;e.empty(),e.addClass("astro-modular-settings");let t=e.createDiv("tab-container"),o=t.createDiv("tab-nav"),n=t.createDiv("tab-content"),i=[{id:"general",name:"General",description:"Basic settings and configuration overview",render:()=>this.renderGeneralTab(n)},{id:"quick-config",name:"Quick Config",description:"Fast template and theme changes",render:()=>this.renderQuickConfigTab(n)},{id:"features",name:"Features",description:"Enable or disable theme features",render:()=>this.renderFeaturesTab(n)},{id:"plugin-settings",name:"Plugin Settings",description:"Manage Obsidian plugin configurations",render:()=>this.renderPluginTab(n)},{id:"advanced",name:"Advanced",description:"Advanced options and utilities",render:()=>this.renderAdvancedTab(n)}];i.forEach((l,c)=>{let p=o.createEl("button",{text:l.name,cls:`tab-button ${c===0?"active":""}`});p.title=l.description,p.addEventListener("click",()=>{o.querySelectorAll(".tab-button").forEach(d=>d.classList.remove("active")),p.classList.add("active"),n.style.opacity="0",setTimeout(()=>{n.empty(),l.render(),n.style.opacity="1"},150)})}),i[0].render()}renderGeneralTab(e){var a,s;e.empty();let t=e.createDiv("settings-section"),o=t.createEl("h2",{text:"General Settings"}),n=t.createEl("p",{text:"Configure basic plugin behavior and view current status."});new u.Setting(e).setName("Run wizard on startup").setDesc("Show the setup wizard when Obsidian starts (if not disabled)").addToggle(h=>h.setValue(this.settings.runWizardOnStartup).onChange(async E=>{this.settings.runWizardOnStartup=E,await this.plugin.saveData(this.settings)}));let l=e.createDiv("config-display").createDiv("config-info"),c=l.createEl("h3",{text:"Current Configuration"}),p=l.createDiv("config-item");p.createEl("strong",{text:"Template: "}),p.createSpan({text:((a=v.find(h=>h.id===this.settings.currentTemplate))==null?void 0:a.name)||"Unknown"});let d=l.createDiv("config-item");d.createEl("strong",{text:"Theme: "}),d.createSpan({text:((s=S.find(h=>h.id===this.settings.currentTheme))==null?void 0:s.name)||"Unknown"});let g=l.createDiv("config-item");g.createEl("strong",{text:"Organization: "}),g.createSpan({text:this.settings.contentOrganization==="file-based"?"File-based":"Folder-based"}),new u.Setting(e).setName("Setup wizard").setDesc("Run the setup wizard to reconfigure your theme").addButton(h=>h.setButtonText("Run Setup Wizard").setCta().onClick(()=>{new T(this.app,this.settings,async F=>{this.settings=F,await this.plugin.saveData(this.settings)}).open()}))}renderQuickConfigTab(e){e.empty();let t=e.createDiv("settings-section"),o=t.createEl("h2",{text:"Quick Configuration"}),n=t.createEl("p",{text:"Quickly change your template, theme, and content organization."});new u.Setting(e).setName("Template").setDesc("Choose your content template").addDropdown(i=>{v.forEach(l=>{i.addOption(l.id,l.name)}),i.setValue(this.settings.currentTemplate),i.onChange(async l=>{this.settings.currentTemplate=l,await this.plugin.saveData(this.settings)})}),new u.Setting(e).setName("Theme").setDesc("Choose your color theme").addDropdown(i=>{S.forEach(l=>{i.addOption(l.id,l.name)}),i.setValue(this.settings.currentTheme),i.onChange(async l=>{this.settings.currentTheme=l,await this.plugin.saveData(this.settings)})}),new u.Setting(e).setName("Content organization").setDesc("Choose how to organize your content and assets").addDropdown(i=>{i.addOption("file-based","File-based"),i.addOption("folder-based","Folder-based"),i.setValue(this.settings.contentOrganization),i.onChange(async l=>{this.settings.contentOrganization=l,await this.plugin.saveData(this.settings)})}),new u.Setting(e).setName("Apply configuration").setDesc("Apply the current settings to your Astro configuration").addButton(i=>i.setButtonText("Apply Configuration").setCta().onClick(async()=>{await this.applyCurrentConfiguration()})),new u.Setting(e).setName("Edit config.ts directly").setDesc("Open your Astro configuration file in the editor").addButton(i=>i.setButtonText("Open config.ts").onClick(async()=>{await this.openConfigFile()}))}renderFeaturesTab(e){e.empty();let t=e.createDiv("settings-section"),o=t.createEl("h2",{text:"Feature Configuration"}),n=t.createEl("p",{text:"Enable or disable specific features for your site."});[{key:"commandPalette",name:"Command palette",desc:"Add a command palette to your site"},{key:"tableOfContents",name:"Table of contents",desc:"Show table of contents on pages"},{key:"readingTime",name:"Reading time",desc:"Display estimated reading time"},{key:"linkedMentions",name:"Linked mentions",desc:"Show linked mentions and backlinks"},{key:"comments",name:"Comments",desc:"Enable comment system"},{key:"graphView",name:"Graph view",desc:"Show graph view of post connections"},{key:"postNavigation",name:"Post navigation",desc:"Show next/previous post navigation"},{key:"scrollToTop",name:"Scroll to top",desc:"Show scroll to top button"},{key:"showSocialIconsInFooter",name:"Social icons in footer",desc:"Show social icons in footer"}].forEach(l=>{let c=l.key,p=this.settings.features[c],d=typeof p=="boolean"?p:!1;new u.Setting(e).setName(l.name).setDesc(l.desc).addToggle(g=>g.setValue(d).onChange(async a=>{this.settings.features[c]=a,await this.plugin.saveData(this.settings)}))}),new u.Setting(e).setName("Save configuration").setDesc("Save your feature settings to the configuration file").addButton(l=>l.setButtonText("Save Configuration").setCta().onClick(async()=>{await this.applyCurrentConfiguration()}))}async renderPluginTab(e){e.empty();let t=e.createDiv("settings-section"),o=t.createEl("h2",{text:"Plugin Configuration"}),n=t.createEl("p",{text:"Manage your Obsidian plugins and their settings."}),i=await this.pluginManager.getPluginStatus(),c=e.createDiv("plugin-status-container").createDiv("plugin-status");for(let p of i){let d=c.createDiv(`plugin-item ${p.installed?"installed":"missing"}`),g=d.createDiv("plugin-icon");g.textContent=p.installed?"\u2705":"\u274C";let a=d.createDiv("plugin-info");a.createEl("h3",{text:p.name});let s=p.installed?p.enabled?"Enabled":"Disabled":"Not installed";a.createEl("p",{text:s})}new u.Setting(e).setName("Configure automatically").setDesc("Automatically configure all installed plugins").addButton(p=>p.setButtonText("Configure Automatically").setCta().onClick(async()=>{await this.pluginManager.configurePlugins(this.settings.pluginConfig)?new u.Notice("Plugins configured successfully!"):new u.Notice("Some plugins could not be configured automatically.")})),new u.Setting(e).setName("Show manual instructions").setDesc("Get step-by-step instructions for manual configuration").addButton(p=>p.setButtonText("Show Manual Instructions").onClick(async()=>{let d=await this.pluginManager.getManualConfigurationInstructions(this.settings.pluginConfig),g=new u.Modal(this.app);g.titleEl.setText("Manual Configuration Instructions");let a=g.contentEl.createEl("pre");a.textContent=d,g.open()}))}renderAdvancedTab(e){e.empty();let t=e.createDiv("settings-section"),o=t.createEl("h2",{text:"Advanced Settings"}),n=t.createEl("p",{text:"Advanced configuration options and utilities."});new u.Setting(e).setName("Open config.ts in editor").setDesc("Open your Astro configuration file in the editor").addButton(i=>i.setButtonText("Open config.ts").onClick(async()=>{await this.openConfigFile()})),new u.Setting(e).setName("Reset to defaults").setDesc("Reset all settings to their default values").addButton(i=>i.setButtonText("Reset to Defaults").setWarning().onClick(async()=>{confirm("Are you sure you want to reset all settings to defaults?")&&new u.Notice("Settings reset to defaults")})),new u.Setting(e).setName("Export configuration").setDesc("Export your current configuration as JSON").addButton(i=>i.setButtonText("Export JSON").onClick(()=>{this.exportConfiguration()})),new u.Setting(e).setName("Import configuration").setDesc("Import configuration from JSON file").addButton(i=>i.setButtonText("Import JSON").onClick(()=>{this.importConfiguration()}))}async applyCurrentConfiguration(){try{await this.configManager.applyPreset({name:this.settings.currentTemplate,description:"",features:this.settings.features,theme:this.settings.currentTheme,contentOrganization:this.settings.contentOrganization,config:this.settings})?(new u.Notice("Configuration applied successfully!"),await this.configManager.triggerRebuild()):new u.Notice("Failed to apply configuration. Check the console for errors.")}catch(e){new u.Notice(`Error applying configuration: ${e.message}`)}}async openConfigFile(){this.app.vault.getAbstractFileByPath("astro.config.ts")?await this.app.workspace.openLinkText("","astro.config.ts"):new u.Notice("Config file not found. Make sure you have an Astro project in this vault.")}exportConfiguration(){let e=JSON.stringify(this.settings,null,2),t=new Blob([e],{type:"application/json"}),o=URL.createObjectURL(t),n=document.createElement("a");n.href=o,n.download="astro-modular-config.json",document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(o),new u.Notice("Configuration exported successfully!")}importConfiguration(){let e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=async t=>{var n;let o=(n=t.target.files)==null?void 0:n[0];if(o)try{let i=await o.text(),l=JSON.parse(i);this.settings={...this.settings,...l},await this.plugin.saveData(this.settings),this.display(),new u.Notice("Configuration imported successfully!")}catch(i){new u.Notice("Failed to import configuration. Please check the file format.")}},e.click()}};var _=class extends w.Plugin{async onload(){await this.loadSettings(),G(this,this.settings),this.addSettingTab(new b(this.app,this,this.settings)),this.addRibbonIcon("rocket","Astro Modular Settings",()=>{new T(this.app,this.settings,async t=>{this.settings=t,await this.saveSettings()}).open()}),this.settings.runWizardOnStartup&&setTimeout(()=>{this.runStartupWizard()},2e3)}onunload(){}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async runStartupWizard(){new T(this.app,this.settings,async t=>{this.settings=t,await this.saveSettings()}).open()}openSettings(){this.app.setting.open(),this.app.setting.openTabById(this.manifest.id)}};
