/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

"use strict";var pe=Object.defineProperty;var Te=Object.getOwnPropertyDescriptor;var ye=Object.getOwnPropertyNames;var Ne=Object.prototype.hasOwnProperty;var Ie=(c,e)=>{for(var t in e)pe(c,t,{get:e[t],enumerable:!0})},Ee=(c,e,t,n)=>{if(e&&typeof e=="object"||typeof e=="function")for(let a of ye(e))!Ne.call(c,a)&&a!==t&&pe(c,a,{get:()=>e[a],enumerable:!(n=Te(e,a))||n.enumerable});return c};var ve=c=>Ee(pe({},"__esModule",{value:!0}),c);var Pe={};Ie(Pe,{default:()=>ce});module.exports=ve(Pe);var Ce=require("obsidian");var P=["Inter","Roboto","Open Sans","Lato","Poppins","Source Sans Pro","Nunito","Montserrat","Playfair Display","Merriweather","Lora","Crimson Text","PT Serif","Libre Baskerville","Fira Code","JetBrains Mono","Source Code Pro","IBM Plex Mono","Cascadia Code"],L={runWizardOnStartup:!0,currentTemplate:"standard",currentTheme:"oxygen",contentOrganization:"file-based",siteInfo:{site:"https://astro-modular.netlify.app",title:"Astro Modular",description:"A flexible blog theme designed for Obsidian users.",author:"David V. Kimball",language:"en"},navigation:{pages:[{title:"Posts",url:"/posts"},{title:"Projects",url:"/projects"},{title:"Docs",url:"/docs"},{title:"About",url:"/about"},{title:"GitHub",url:"https://github.com/davidvkimball/astro-modular"}],social:[{title:"X",url:"https://x.com/davidvkimball",icon:"x-twitter"},{title:"GitHub",url:"https://github.com/davidvkimball",icon:"github"}]},features:{commandPalette:!0,tableOfContents:!0,readingTime:!0,linkedMentions:!0,comments:!1,graphView:!0,postNavigation:!0,scrollToTop:!0,darkModeToggleButton:"both",showSocialIconsInFooter:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og",linkedMentionsCompact:!1,profilePicture:!1},typography:{headingFont:"Inter",proseFont:"Inter",monoFont:"JetBrains Mono",fontSource:"local",customFonts:{heading:"",prose:"",mono:""}},optionalFeatures:{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}},deployment:{platform:"netlify"},pluginConfig:{obsidianSettings:{attachmentLocation:"subfolder",subfolderName:"attachments"},astroComposerSettings:{creationMode:"file",indexFileName:"index"},imageInserterSettings:{valueFormat:"[[attachments/{image-url}]]",insertFormat:"[[attachments/{image-url}]]"}}},_=[{id:"oxygen",name:"Oxygen",description:"Modern, clean design",previewColors:["#075985","#38bdf8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#020617"},{id:"minimal",name:"Minimal",description:"Understated with high contrast",previewColors:["#2d383c","#87bfcf"],backgroundColorLight:"#fafafa",backgroundColorDark:"#1a1a1a"},{id:"atom",name:"Atom",description:"Dark theme with vibrant accents",previewColors:["#075985","#578af2"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#181a1f"},{id:"ayu",name:"Ayu",description:"Clean theme with warm colors",previewColors:["#99521a","#ff9933"],backgroundColorLight:"#f8f8f0",backgroundColorDark:"#0f1419"},{id:"catppuccin",name:"Catppuccin",description:"Pastel color palette",previewColors:["#95624f","#df7763"],backgroundColorLight:"#fef7ed",backgroundColorDark:"#181825"},{id:"charcoal",name:"Charcoal",description:"Dark, professional look",previewColors:["#202020","#c0c0c0"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#000000"},{id:"dracula",name:"Dracula",description:"Dark theme with purple accents",previewColors:["#7c3aed","#a78bfa"],backgroundColorLight:"#f8f8f2",backgroundColorDark:"#191a21"},{id:"everforest",name:"Everforest",description:"Soft, warm colors",previewColors:["#5a7a5a","#83c092"],backgroundColorLight:"#f7f6f3",backgroundColorDark:"#2d353b"},{id:"flexoki",name:"Flexoki",description:"Based on Material Design 3",previewColors:["#16504a","#4dbdb5"],backgroundColorLight:"#fefefe",backgroundColorDark:"#100f0f"},{id:"gruvbox",name:"Gruvbox",description:"Retro groove color scheme",previewColors:["#7a5412","#f78b33"],backgroundColorLight:"#fbf1c7",backgroundColorDark:"#1d2021"},{id:"macos",name:"macOS",description:"Native macOS appearance",previewColors:["#002e66","#339fff"],backgroundColorLight:"#f5f5f7",backgroundColorDark:"#141414"},{id:"nord",name:"Nord",description:"Arctic-inspired color palette",previewColors:["#2e4c63","#5e94b8"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#2e3440"},{id:"obsidian",name:"Obsidian",description:"Matches Obsidian's default theme",previewColors:["#522994","#9c75ff"],backgroundColorLight:"#f8f8f8",backgroundColorDark:"#0a0a0a"},{id:"rose-pine",name:"Ros\xE9 Pine",description:"All natural pine, faux fir, and winter",previewColors:["#ab2142","#ef97a9"],backgroundColorLight:"#faf4ed",backgroundColorDark:"#191724"},{id:"sky",name:"Sky",description:"Light, airy design",previewColors:["#136194","#46aad0"],backgroundColorLight:"#f0f9ff",backgroundColorDark:"#232729"},{id:"solarized",name:"Solarized",description:"Precision colors for machines and people",previewColors:["#0e3754","#339fff"],backgroundColorLight:"#fdf6e3",backgroundColorDark:"#002b36"},{id:"things",name:"Things",description:"Clean, minimal design",previewColors:["#1e3a8a","#4d95f7"],backgroundColorLight:"#f8fafc",backgroundColorDark:"#17191c"}],y=[{id:"standard",name:"Standard",description:"Full-featured blog with all default options enabled",features:["Command palette","Table of contents","Reading time","Linked mentions","Footer","Social icons","Scroll to top","Dark mode toggle"],recommended:!0},{id:"compact",name:"Compact",description:"Balanced setup for smaller sites with optimized layout",features:["Command palette","Table of contents","Reading time","Compact linked mentions","Custom aspect ratio"],recommended:!1},{id:"minimal",name:"Minimal",description:"Clean, simple blog with minimal features and content",features:["Command palette","Search posts/pages","Minimal navigation"],recommended:!1},{id:"custom",name:"Custom",description:"Granular control over every setting - opens config.ts",features:["All features configurable"],recommended:!1}];var Z=require("obsidian");var he=require("obsidian");var x=class{constructor(e){this.app=e,this.configPath="../config.ts"}async getConfigFileInfo(){try{let e=require("fs"),t=require("path"),n=this.app.vault.adapter,a=n.basePath||n.path,s=typeof a=="string"?a:a?String(a):"",i=t.join(s,"..","config.ts"),o=t.dirname(i);if(e.existsSync(i)){let r=e.readFileSync(i,"utf8"),l=e.statSync(i);return{exists:!0,path:i,content:r,lastModified:new Date(l.mtime),valid:!0,errors:[]}}else return{exists:!1,path:i,content:"",lastModified:new Date,valid:!1,errors:["Config file not found"]}}catch(e){return{exists:!1,path:this.configPath,content:"",lastModified:new Date,valid:!1,errors:["Cannot access file outside vault"]}}}validateConfigContent(e){return e.includes("defineConfig")||e.includes("export default")||e.includes("astro/config")}async readConfig(){return(await this.getConfigFileInfo()).content}async writeConfig(e){try{let t=require("fs"),n=require("path"),a=this.app.vault.adapter,s=a.basePath||a.path,i=typeof s=="string"?s:s?String(s):"",o=n.join(i,"..","config.ts");return t.writeFileSync(o,e,"utf8"),!0}catch(t){return!1}}async detectAstroDevServer(){let e=this.app.vault.getAbstractFileByPath("package.json");if(e)try{let t=await this.app.vault.read(e);return t.includes("astro")&&t.includes("dev")}catch(t){return!1}return!1}};var R=class{interpolateTemplate(e,t,n){return e.replace(/\$\{settings\.currentTheme\}/g,t.currentTheme).replace(/\$\{settings\.typography\.fontSource\}/g,t.typography.fontSource).replace(/\$\{settings\.typography\.proseFont\}/g,t.typography.proseFont).replace(/\$\{settings\.typography\.headingFont\}/g,t.typography.headingFont).replace(/\$\{settings\.typography\.monoFont\}/g,t.typography.monoFont).replace(/\$\{settings\.typography\.customFonts\.prose\}/g,t.typography.customFonts.prose).replace(/\$\{settings\.typography\.customFonts\.heading\}/g,t.typography.customFonts.heading).replace(/\$\{settings\.typography\.customFonts\.mono\}/g,t.typography.customFonts.mono).replace(/\$\{settings\.optionalFeatures\.comments\.enabled\}/g,t.optionalFeatures.comments.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.enabled\}/g,t.optionalFeatures.profilePicture.enabled.toString()).replace(/\$\{settings\.optionalFeatures\.profilePicture\.image\}/g,t.optionalFeatures.profilePicture.image).replace(/\$\{settings\.optionalFeatures\.profilePicture\.alt\}/g,t.optionalFeatures.profilePicture.alt).replace(/\$\{settings\.optionalFeatures\.profilePicture\.size\}/g,t.optionalFeatures.profilePicture.size).replace(/\$\{settings\.optionalFeatures\.profilePicture\.url\}/g,t.optionalFeatures.profilePicture.url||"").replace(/\$\{settings\.optionalFeatures\.profilePicture\.placement\}/g,t.optionalFeatures.profilePicture.placement).replace(/\$\{settings\.optionalFeatures\.profilePicture\.style\}/g,t.optionalFeatures.profilePicture.style).replace(/\$\{settings\.deployment\.platform\}/g,t.deployment.platform).replace(/\$\{templateName\}/g,n)}getTemplateConfig(e,t){switch(e){case"standard":return{layout:{contentWidth:"45rem"},footer:{enabled:!0,showSocialIconsInFooter:!0},darkModeToggleButton:"both",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!0,social:!0}},optionalContentTypes:{projects:!0,docs:!0},homeOptions:{featuredPost:{enabled:!0,type:"latest"},recentPosts:{enabled:!0,count:7},projects:{enabled:!0,count:2},docs:{enabled:!0,count:3},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!1},graphView:{enabled:!0,showInSidebar:!0,showInCommandPalette:!0,maxNodes:100},postNavigation:!0,showPostCardCoverImages:"featured-and-posts",postCardAspectRatio:"og"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"traditional"}};case"compact":return{layout:{contentWidth:"42rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"ctrl+K",placeholder:"Search posts",search:{posts:!0,pages:!1,projects:!1,docs:!1},sections:{quickActions:!0,pages:!1,social:!0}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"below"}},postOptions:{postsPerPage:6,readingTime:!0,wordCount:!0,tableOfContents:!0,tags:!0,linkedMentions:{enabled:!0,linkedMentionsCompact:!0},graphView:{enabled:!1},postNavigation:!0,showPostCardCoverImages:"posts",postCardAspectRatio:"custom",customPostCardAspectRatio:"2.5/1"},navigation:{showNavigation:!0,showMobileMenu:!0,style:"minimal"}};case"minimal":return{layout:{contentWidth:"40rem"},optionalContentTypes:{projects:!1,docs:!1},footer:{showSocialIconsInFooter:!1},darkModeToggleButton:"commandPalette",commandPalette:{enabled:!0,shortcut:"",placeholder:"Search content",search:{posts:!0,pages:!0,projects:!1,docs:!1},sections:{quickActions:!1,pages:!1,social:!1}},homeOptions:{featuredPost:{enabled:!1,type:"latest"},recentPosts:{enabled:!0,count:7},blurb:{placement:"none"}},postOptions:{postsPerPage:6,readingTime:!1,wordCount:!1,tableOfContents:!1,tags:!1,linkedMentions:{enabled:!1,linkedMentionsCompact:!1},graphView:{enabled:!1},postNavigation:!1,showPostCardCoverImages:"none",postCardAspectRatio:"og"},navigation:{showNavigation:!1,showMobileMenu:!1,style:"minimal"}};default:return{}}}};var $=class{validateMarkers(e){let n=["CONFIG:SITE_URL","CONFIG:SITE_TITLE","CONFIG:SITE_DESCRIPTION","CONFIG:SITE_AUTHOR","CONFIG:SITE_LANGUAGE","CONFIG:THEME","CONFIG:FONT_SOURCE","CONFIG:FONT_BODY","CONFIG:FONT_HEADING","CONFIG:FONT_MONO","CONFIG:LAYOUT_CONTENT_WIDTH","CONFIG:FOOTER_ENABLED","CONFIG:FOOTER_SHOW_SOCIAL_ICONS","CONFIG:SCROLL_TO_TOP","CONFIG:DARK_MODE_TOGGLE_BUTTON","CONFIG:DEPLOYMENT_PLATFORM","CONFIG:COMMAND_PALETTE_ENABLED","CONFIG:COMMAND_PALETTE_SHORTCUT","CONFIG:COMMAND_PALETTE_PLACEHOLDER","CONFIG:COMMAND_PALETTE_SEARCH_POSTS","CONFIG:COMMAND_PALETTE_SEARCH_PAGES","CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS","CONFIG:COMMAND_PALETTE_SEARCH_DOCS","CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS","CONFIG:COMMAND_PALETTE_SECTIONS_PAGES","CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL","CONFIG:PROFILE_PICTURE_ENABLED","CONFIG:PROFILE_PICTURE_IMAGE","CONFIG:PROFILE_PICTURE_ALT","CONFIG:PROFILE_PICTURE_SIZE","CONFIG:PROFILE_PICTURE_URL","CONFIG:PROFILE_PICTURE_PLACEMENT","CONFIG:PROFILE_PICTURE_STYLE","CONFIG:NAVIGATION_SHOW_NAVIGATION","CONFIG:NAVIGATION_STYLE","CONFIG:NAVIGATION_SHOW_MOBILE_MENU","CONFIG:NAVIGATION_PAGES","CONFIG:NAVIGATION_SOCIAL","CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS","CONFIG:OPTIONAL_CONTENT_TYPES_DOCS","CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED","CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE","CONFIG:HOME_OPTIONS_FEATURED_POST_SLUG","CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED","CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT","CONFIG:HOME_OPTIONS_PROJECTS_ENABLED","CONFIG:HOME_OPTIONS_PROJECTS_COUNT","CONFIG:HOME_OPTIONS_DOCS_ENABLED","CONFIG:HOME_OPTIONS_DOCS_COUNT","CONFIG:HOME_OPTIONS_BLURB_PLACEMENT","CONFIG:POST_OPTIONS_POSTS_PER_PAGE","CONFIG:POST_OPTIONS_READING_TIME","CONFIG:POST_OPTIONS_WORD_COUNT","CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS","CONFIG:POST_OPTIONS_TAGS","CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED","CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT","CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE","CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES","CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS","CONFIG:POST_OPTIONS_POST_NAVIGATION","CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES","CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO","CONFIG:POST_OPTIONS_COMMENTS_ENABLED"].filter(a=>!e.includes(`// [${a}]`));return{valid:n.length===0,missing:n}}validateSyntax(e){let t=[];try{let n=(e.match(/\{/g)||[]).length,a=(e.match(/\}/g)||[]).length,s=(e.match(/\[/g)||[]).length,i=(e.match(/\]/g)||[]).length;n!==a&&t.push("Mismatched braces"),s!==i&&t.push("Mismatched brackets")}catch(n){t.push(`Validation failed: ${n instanceof Error?n.message:String(n)}`)}return{valid:t.length===0,errors:t}}};var H=class{constructor(){this.templateManager=new R,this.markerValidator=new $}modifyConfigFromPreset(e,t){var g,f;let n=e.config,a=this.modifyConfigFromFeatures(n,t),s=this.templateManager.getTemplateConfig(e.name,n);if(a.includes("// [CONFIG:THEME]")){let d=/\/\/ \[CONFIG:THEME\]\s*\n\s*theme:\s*"[^"]*"/,C=a.match(d);a=a.replace(d,`// [CONFIG:THEME]
  theme: "${n.currentTheme}"`)}a=a.replace(/\/\/ \[CONFIG:FONT_SOURCE\]\s*\n\s*source:\s*"[^"]*"/,`// [CONFIG:FONT_SOURCE]
    source: "${n.typography.fontSource}"`),a=a.replace(/\/\/ \[CONFIG:FONT_BODY\]\s*\n\s*body:\s*"[^"]*"/,`// [CONFIG:FONT_BODY]
      body: "${n.typography.fontSource==="cdn"?n.typography.customFonts.prose:n.typography.proseFont}"`),a=a.replace(/\/\/ \[CONFIG:FONT_HEADING\]\s*\n\s*heading:\s*"[^"]*"/,`// [CONFIG:FONT_HEADING]
      heading: "${n.typography.fontSource==="cdn"?n.typography.customFonts.heading:n.typography.headingFont}"`),a=a.replace(/\/\/ \[CONFIG:FONT_MONO\]\s*\n\s*mono:\s*"[^"]*"/,`// [CONFIG:FONT_MONO]
      mono: "${n.typography.fontSource==="cdn"?n.typography.customFonts.mono:n.typography.monoFont}"`),a=a.replace(/\/\/ \[CONFIG:DEPLOYMENT_PLATFORM\]\s*\n\s*platform:\s*"[^"]*"/,`// [CONFIG:DEPLOYMENT_PLATFORM]
    platform: "${n.deployment.platform}"`),(g=s.layout)!=null&&g.contentWidth&&(a=a.replace(/\/\/ \[CONFIG:LAYOUT_CONTENT_WIDTH\]\s*\n\s*contentWidth:\s*"[^"]*"/,`// [CONFIG:LAYOUT_CONTENT_WIDTH]
    contentWidth: "${s.layout.contentWidth}"`)),s.optionalContentTypes&&(s.optionalContentTypes.projects!==void 0&&(a=a.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS\]\s*\n\s*projects:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_PROJECTS]
    projects: ${s.optionalContentTypes.projects}`)),s.optionalContentTypes.docs!==void 0&&(a=a.replace(/\/\/ \[CONFIG:OPTIONAL_CONTENT_TYPES_DOCS\]\s*\n\s*docs:\s*(true|false)/,`// [CONFIG:OPTIONAL_CONTENT_TYPES_DOCS]
    docs: ${s.optionalContentTypes.docs}`))),s.darkModeToggleButton&&(a=a.replace(/\/\/ \[CONFIG:DARK_MODE_TOGGLE_BUTTON\]\s*\n\s*darkModeToggleButton:\s*"[^"]*"/,`// [CONFIG:DARK_MODE_TOGGLE_BUTTON]
  darkModeToggleButton: "${s.darkModeToggleButton}"`)),s.footer&&(s.footer.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:FOOTER_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:FOOTER_ENABLED]
    enabled: ${s.footer.enabled}`)),s.footer.showSocialIconsInFooter!==void 0&&(a=a.replace(/\/\/ \[CONFIG:FOOTER_SHOW_SOCIAL_ICONS\]\s*showSocialIconsInFooter:\s*(true|false)/,`// [CONFIG:FOOTER_SHOW_SOCIAL_ICONS]
    showSocialIconsInFooter: ${s.footer.showSocialIconsInFooter}`))),s.navigation&&(s.navigation.style&&(a=a.replace(/\/\/ \[CONFIG:NAVIGATION_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:NAVIGATION_STYLE]
    style: "${s.navigation.style}"`)),s.navigation.showNavigation!==void 0&&(a=a.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_NAVIGATION\]\s*showNavigation:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_NAVIGATION]
    showNavigation: ${s.navigation.showNavigation}`)),s.navigation.showMobileMenu!==void 0&&(a=a.replace(/\/\/ \[CONFIG:NAVIGATION_SHOW_MOBILE_MENU\]\s*showMobileMenu:\s*(true|false)/,`// [CONFIG:NAVIGATION_SHOW_MOBILE_MENU]
    showMobileMenu: ${s.navigation.showMobileMenu}`))),s.commandPalette&&(s.commandPalette.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_ENABLED]
    enabled: ${s.commandPalette.enabled}`)),s.commandPalette.shortcut!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SHORTCUT\]\s*shortcut:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_SHORTCUT]
    shortcut: "${s.commandPalette.shortcut}"`)),s.commandPalette.placeholder!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_PLACEHOLDER\]\s*placeholder:\s*"[^"]*"/,`// [CONFIG:COMMAND_PALETTE_PLACEHOLDER]
    placeholder: "${s.commandPalette.placeholder}"`)),s.commandPalette.search&&(s.commandPalette.search.posts!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_POSTS\]\s*posts:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_POSTS]
      posts: ${s.commandPalette.search.posts}`)),s.commandPalette.search.pages!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PAGES]
      pages: ${s.commandPalette.search.pages}`)),s.commandPalette.search.projects!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS\]\s*projects:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_PROJECTS]
      projects: ${s.commandPalette.search.projects}`)),s.commandPalette.search.docs!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SEARCH_DOCS\]\s*docs:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SEARCH_DOCS]
      docs: ${s.commandPalette.search.docs}`))),s.commandPalette.sections&&(s.commandPalette.sections.quickActions!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS\]\s*quickActions:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_QUICK_ACTIONS]
      quickActions: ${s.commandPalette.sections.quickActions}`)),s.commandPalette.sections.pages!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_PAGES\]\s*pages:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_PAGES]
      pages: ${s.commandPalette.sections.pages}`)),s.commandPalette.sections.social!==void 0&&(a=a.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL\]\s*social:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_SECTIONS_SOCIAL]
      social: ${s.commandPalette.sections.social}`)))),s.homeOptions&&(s.homeOptions.featuredPost&&(s.homeOptions.featuredPost.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_ENABLED]
      enabled: ${s.homeOptions.featuredPost.enabled}`)),s.homeOptions.featuredPost.type&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE\]\s*type:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_FEATURED_POST_TYPE]
      type: "${s.homeOptions.featuredPost.type}"`))),s.homeOptions.recentPosts&&(s.homeOptions.recentPosts.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_ENABLED]
      enabled: ${s.homeOptions.recentPosts.enabled}`)),s.homeOptions.recentPosts.count&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_RECENT_POSTS_COUNT]
      count: ${s.homeOptions.recentPosts.count}`))),s.homeOptions.projects&&(s.homeOptions.projects.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_PROJECTS_ENABLED]
      enabled: ${s.homeOptions.projects.enabled}`)),s.homeOptions.projects.count&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_PROJECTS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_PROJECTS_COUNT]
      count: ${s.homeOptions.projects.count}`))),s.homeOptions.docs&&(s.homeOptions.docs.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:HOME_OPTIONS_DOCS_ENABLED]
      enabled: ${s.homeOptions.docs.enabled}`)),s.homeOptions.docs.count&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_DOCS_COUNT\]\s*count:\s*\d+/,`// [CONFIG:HOME_OPTIONS_DOCS_COUNT]
      count: ${s.homeOptions.docs.count}`))),(f=s.homeOptions.blurb)!=null&&f.placement&&(a=a.replace(/\/\/ \[CONFIG:HOME_OPTIONS_BLURB_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:HOME_OPTIONS_BLURB_PLACEMENT]
      placement: "${s.homeOptions.blurb.placement}"`))),s.postOptions&&(s.postOptions.postsPerPage&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_POSTS_PER_PAGE\]\s*postsPerPage:\s*\d+/,`// [CONFIG:POST_OPTIONS_POSTS_PER_PAGE]
    postsPerPage: ${s.postOptions.postsPerPage}`)),[{key:"readingTime",marker:"CONFIG:POST_OPTIONS_READING_TIME"},{key:"wordCount",marker:"CONFIG:POST_OPTIONS_WORD_COUNT"},{key:"tableOfContents",marker:"CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS"},{key:"tags",marker:"CONFIG:POST_OPTIONS_TAGS"},{key:"postNavigation",marker:"CONFIG:POST_OPTIONS_POST_NAVIGATION"}].forEach(C=>{s.postOptions[C.key]!==void 0&&(a=a.replace(new RegExp(`// \\[${C.marker}\\]\\s*${C.key}:\\s*(true|false)`),`// [${C.marker}]
    ${C.key}: ${s.postOptions[C.key]}`))}),s.postOptions.linkedMentions&&(s.postOptions.linkedMentions.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED]
      enabled: ${s.postOptions.linkedMentions.enabled}`)),s.postOptions.linkedMentions.linkedMentionsCompact!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT\]\s*linkedMentionsCompact:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT]
      linkedMentionsCompact: ${s.postOptions.linkedMentions.linkedMentionsCompact}`))),s.postOptions.graphView&&(s.postOptions.graphView.enabled!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED]
    enabled: ${s.postOptions.graphView.enabled}`)),s.postOptions.graphView.showInSidebar!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR\]\s*showInSidebar:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_SIDEBAR]
      showInSidebar: ${s.postOptions.graphView.showInSidebar}`)),s.postOptions.graphView.showInCommandPalette!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE\]\s*showInCommandPalette:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_IN_COMMAND_PALETTE]
      showInCommandPalette: ${s.postOptions.graphView.showInCommandPalette}`)),s.postOptions.graphView.maxNodes&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES\]\s*maxNodes:\s*\d+/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_MAX_NODES]
      maxNodes: ${s.postOptions.graphView.maxNodes}`)),s.postOptions.graphView.showOrphanedPosts!==void 0&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS\]\s*showOrphanedPosts:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_SHOW_ORPHANED_POSTS]
      showOrphanedPosts: ${s.postOptions.graphView.showOrphanedPosts}`))),s.postOptions.showPostCardCoverImages&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES\]\s*showPostCardCoverImages:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES]
    showPostCardCoverImages: "${s.postOptions.showPostCardCoverImages}"`)),s.postOptions.postCardAspectRatio&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO\]\s*postCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO]
    postCardAspectRatio: "${s.postOptions.postCardAspectRatio}"`)),s.postOptions.customPostCardAspectRatio&&(a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO\]\s*customPostCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO]
    customPostCardAspectRatio: "${s.postOptions.customPostCardAspectRatio}"`))),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:PROFILE_PICTURE_ENABLED]
    enabled: ${n.optionalFeatures.profilePicture.enabled}`),n.optionalFeatures.profilePicture.enabled&&(a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_IMAGE\]\s*image:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_IMAGE]
    image: "${n.optionalFeatures.profilePicture.image}"`),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_ALT\]\s*alt:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_ALT]
    alt: "${n.optionalFeatures.profilePicture.alt}"`),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_SIZE\]\s*size:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_SIZE]
    size: "${n.optionalFeatures.profilePicture.size}"`),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_URL\]\s*url:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_URL]
    url: "${n.optionalFeatures.profilePicture.url||""}"`),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_PLACEMENT\]\s*placement:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_PLACEMENT]
    placement: "${n.optionalFeatures.profilePicture.placement}"`),a=a.replace(/\/\/ \[CONFIG:PROFILE_PICTURE_STYLE\]\s*style:\s*"[^"]*"/,`// [CONFIG:PROFILE_PICTURE_STYLE]
    style: "${n.optionalFeatures.profilePicture.style}"`)),a=a.replace(/\/\/ \[CONFIG:POST_OPTIONS_COMMENTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_COMMENTS_ENABLED]
      enabled: ${n.optionalFeatures.comments.enabled}`);let o=this.markerValidator.validateMarkers(a);if(!o.valid)return console.error("\u274C Config modification failed: Missing markers:",o.missing),console.error("Please ensure all CONFIG markers are present in your config.ts file"),t;let r=this.markerValidator.validateSyntax(a);if(!r.valid)return console.error("\u274C Config modification failed: Syntax errors:",r.errors),t;a=a.replace(/\/\/ \[CONFIG:SITE_URL\]\s*\n\s*site:\s*"[^"]*"/,`// [CONFIG:SITE_URL]
  site: "${n.siteInfo.site}"`),a=a.replace(/\/\/ \[CONFIG:SITE_TITLE\]\s*\n\s*title:\s*"[^"]*"/,`// [CONFIG:SITE_TITLE]
  title: "${n.siteInfo.title}"`),a=a.replace(/\/\/ \[CONFIG:SITE_DESCRIPTION\]\s*\n\s*description:\s*"[^"]*"/,`// [CONFIG:SITE_DESCRIPTION]
  description: "${n.siteInfo.description}"`),a=a.replace(/\/\/ \[CONFIG:SITE_AUTHOR\]\s*\n\s*author:\s*"[^"]*"/,`// [CONFIG:SITE_AUTHOR]
  author: "${n.siteInfo.author}"`),a=a.replace(/\/\/ \[CONFIG:SITE_LANGUAGE\]\s*\n\s*language:\s*"[^"]*"/,`// [CONFIG:SITE_LANGUAGE]
  language: "${n.siteInfo.language}"`);let l=n.navigation.pages.map(d=>`      { title: "${d.title}", url: "${d.url}" }`).join(`,
`);a=a.replace(/\/\/ \[CONFIG:NAVIGATION_PAGES\]\s*\n\s*pages:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_PAGES]
    pages: [
${l},
    ]`);let p=n.navigation.social.map(d=>`      {
        title: "${d.title}",
        url: "${d.url}",
        icon: "${d.icon}",
      }`).join(`,
`);return a=a.replace(/\/\/ \[CONFIG:NAVIGATION_SOCIAL\]\s*\n\s*social:\s*\[[\s\S]*?\]/,`// [CONFIG:NAVIGATION_SOCIAL]
    social: [
${p},
    ]`),a}modifyConfigFromFeatures(e,t){let n=t;return n=n.replace(/\/\/ \[CONFIG:THEME\]\s*\n\s*theme:\s*"[^"]*"/,`// [CONFIG:THEME]
  theme: "${e.currentTheme}"`),n=n.replace(/\/\/ \[CONFIG:FONT_SOURCE\]\s*\n\s*source:\s*"[^"]*"/,`// [CONFIG:FONT_SOURCE]
    source: "${e.typography.fontSource}"`),n=n.replace(/\/\/ \[CONFIG:FONT_BODY\]\s*\n\s*body:\s*"[^"]*"/,`// [CONFIG:FONT_BODY]
      body: "${e.typography.fontSource==="cdn"?e.typography.customFonts.prose:e.typography.proseFont}"`),n=n.replace(/\/\/ \[CONFIG:FONT_HEADING\]\s*\n\s*heading:\s*"[^"]*"/,`// [CONFIG:FONT_HEADING]
      heading: "${e.typography.fontSource==="cdn"?e.typography.customFonts.heading:e.typography.headingFont}"`),n=n.replace(/\/\/ \[CONFIG:FONT_MONO\]\s*\n\s*mono:\s*"[^"]*"/,`// [CONFIG:FONT_MONO]
      mono: "${e.typography.fontSource==="cdn"?e.typography.customFonts.mono:e.typography.monoFont}"`),n=n.replace(/\/\/ \[CONFIG:DEPLOYMENT_PLATFORM\]\s*\n\s*platform:\s*"[^"]*"/,`// [CONFIG:DEPLOYMENT_PLATFORM]
    platform: "${e.deployment.platform}"`),n=n.replace(/\/\/ \[CONFIG:COMMAND_PALETTE_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:COMMAND_PALETTE_ENABLED]
    enabled: ${e.features.commandPalette}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS\]\s*tableOfContents:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_TABLE_OF_CONTENTS]
    tableOfContents: ${e.features.tableOfContents}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_READING_TIME\]\s*readingTime:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_READING_TIME]
    readingTime: ${e.features.readingTime}`),"wordCount"in e.features&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_WORD_COUNT\]\s*wordCount:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_WORD_COUNT]
    wordCount: ${e.features.wordCount}`)),"tags"in e.features&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_TAGS\]\s*tags:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_TAGS]
    tags: ${e.features.tags}`)),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_ENABLED]
      enabled: ${e.features.linkedMentions}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT\]\s*linkedMentionsCompact:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_LINKED_MENTIONS_COMPACT]
      linkedMentionsCompact: ${e.features.linkedMentionsCompact}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_COMMENTS_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_COMMENTS_ENABLED]
      enabled: ${e.features.comments}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED\]\s*enabled:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_GRAPH_VIEW_ENABLED]
    enabled: ${e.features.graphView}`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_NAVIGATION\]\s*postNavigation:\s*(true|false)/,`// [CONFIG:POST_OPTIONS_POST_NAVIGATION]
    postNavigation: ${e.features.postNavigation}`),n=n.replace(/\/\/ \[CONFIG:SCROLL_TO_TOP\]\s*scrollToTop:\s*(true|false)/,`// [CONFIG:SCROLL_TO_TOP]
  scrollToTop: ${e.features.scrollToTop}`),n=n.replace(/\/\/ \[CONFIG:FOOTER_SHOW_SOCIAL_ICONS\]\s*showSocialIconsInFooter:\s*(true|false)/,`// [CONFIG:FOOTER_SHOW_SOCIAL_ICONS]
    showSocialIconsInFooter: ${e.features.showSocialIconsInFooter}`),n=n.replace(/\/\/ \[CONFIG:DARK_MODE_TOGGLE_BUTTON\]\s*darkModeToggleButton:\s*"[^"]*"/,`// [CONFIG:DARK_MODE_TOGGLE_BUTTON]
  darkModeToggleButton: "${e.features.darkModeToggleButton}"`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES\]\s*showPostCardCoverImages:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_SHOW_POST_CARD_COVER_IMAGES]
    showPostCardCoverImages: "${e.features.showPostCardCoverImages}"`),n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO\]\s*postCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_POST_CARD_ASPECT_RATIO]
    postCardAspectRatio: "${e.features.postCardAspectRatio}"`),e.features.customPostCardAspectRatio&&(n=n.replace(/\/\/ \[CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO\]\s*customPostCardAspectRatio:\s*"[^"]*"/,`// [CONFIG:POST_OPTIONS_CUSTOM_POST_CARD_ASPECT_RATIO]
    customPostCardAspectRatio: "${e.features.customPostCardAspectRatio}"`)),n}};var b=class{constructor(e){this.app=e,this.fileManager=new x(e),this.presetModifier=new H}async getConfigFileInfo(){return this.fileManager.getConfigFileInfo()}async readConfig(){return this.fileManager.readConfig()}async writeConfig(e){return this.fileManager.writeConfig(e)}async applyPreset(e){let t=await this.readConfig(),n=this.presetModifier.modifyConfigFromPreset(e,t);return await this.writeConfig(n)}async detectAstroDevServer(){return this.fileManager.detectAstroDevServer()}async updateIndividualFeatures(e){let t=await this.readConfig(),n=this.presetModifier.modifyConfigFromFeatures(e,t);return await this.writeConfig(n)}async triggerRebuild(){}};var A=class{constructor(e){this.app=e}async getPluginStatus(){var a;let e=this.app.plugins,t=["astro-composer","insert-unsplash-image","obsidian-shellcommands"],n=[];for(let s of t){let i=(a=e==null?void 0:e.plugins)==null?void 0:a[s],o=(e==null?void 0:e.enabledPlugins)&&e.enabledPlugins.has(s),r=this.isPluginInstalled(s);n.push({name:this.getPluginDisplayName(s),installed:r,enabled:o||!1,configurable:this.isPluginConfigurable(s),currentSettings:i?await this.getPluginSettings(i):void 0})}return n}isPluginInstalled(e){var a,s;let t=(a=this.app.plugins)==null?void 0:a.communityPlugins;if(t&&Array.isArray(t))return t.includes(e);let n=this.app.plugins;return!!((s=n==null?void 0:n.plugins)!=null&&s[e])}getPluginDisplayName(e){return{"astro-composer":"Astro Composer","insert-unsplash-image":"Image Inserter","obsidian-shellcommands":"Shell Commands"}[e]||e}isPluginConfigurable(e){return["astro-composer","insert-unsplash-image"].includes(e)}async getPluginSettings(e){return{}}async configurePlugins(e){let t=0,n=0;try{return n++,await this.configureObsidianSettings(e.obsidianSettings),t++,n++,await this.configureAstroComposerSettings(e.astroComposerSettings),t++,n++,await this.configureImageInserterSettings(e.imageInserterSettings),t++,t>0}catch(a){return console.error("Plugin configuration failed:",a),!1}}async configureObsidianSettings(e){try{let t=this.app.vault.config;e.attachmentLocation==="subfolder"?(t.newLinkFormat="relative",t.attachmentFolderPath=`./${e.subfolderName}`):(t.newLinkFormat="relative",t.attachmentFolderPath="./");let n=this.app.settings;n&&"set"in n&&(n.set("attachmentFolderPath",t.attachmentFolderPath),n.set("newLinkFormat",t.newLinkFormat)),await this.app.vault.saveConfig()}catch(t){throw console.error("Failed to configure Obsidian settings:",t),t}}async configureAstroComposerSettings(e){var t;try{let n=this.app.plugins,a=(t=n==null?void 0:n.plugins)==null?void 0:t["astro-composer"];a&&a.settings&&(a.settings.creationMode=e.creationMode,a.settings.indexFileName=e.indexFileName,await a.saveSettings())}catch(n){console.error("Failed to configure Astro Composer:",n)}}async configureImageInserterSettings(e){var t;try{let n=this.app.plugins,a=(t=n==null?void 0:n.plugins)==null?void 0:t["insert-unsplash-image"];a&&a.settings&&(a.settings.frontmatter&&(a.settings.frontmatter.valueFormat=e.valueFormat),await a.saveSettings())}catch(n){console.error("Failed to configure Image Inserter:",n)}}async getManualConfigurationInstructions(e){let t=`# Manual Configuration Instructions

`;return t+=`## Obsidian Settings
`,t+=`1. Go to **Settings \u2192 Files & Links**
`,t+="2. Set **Default location for new attachments** to: ",t+=e.obsidianSettings.attachmentLocation==="subfolder"?`**"In subfolder under current folder"**
`:`**"Same folder as current file"**
`,e.obsidianSettings.attachmentLocation==="subfolder"&&(t+=`3. Set **Subfolder name** to: **"${e.obsidianSettings.subfolderName}"**
`),t+=`
`,t+=`## Astro Composer Plugin
`,t+=`1. Go to **Settings \u2192 Community plugins \u2192 Astro Composer**
`,t+=`2. Set **Creation mode** to: "${e.astroComposerSettings.creationMode}"
`,e.astroComposerSettings.creationMode==="folder"&&(t+=`3. Set **Index file name** to: "${e.astroComposerSettings.indexFileName}"
`),t+=`
`,t+=`## Image Inserter Plugin
`,t+=`1. Go to **Settings \u2192 Community plugins \u2192 Image Inserter**
`,t+=`2. Set **Frontmatter \u2192 Value Format** to: "${e.imageInserterSettings.valueFormat}"
`,t}};var B=class{constructor(e){this.state={currentStep:1,totalSteps:10,selectedTemplate:e.currentTemplate,selectedTheme:e.currentTheme,selectedContentOrg:e.contentOrganization,selectedSiteInfo:e.siteInfo,selectedNavigation:e.navigation,selectedFeatures:e.features,selectedTypography:e.typography,selectedOptionalFeatures:e.optionalFeatures||{},selectedDeployment:e.deployment.platform,runWizardOnStartup:e.runWizardOnStartup,originalSettings:e}}getState(){return this.state}updateState(e){this.state={...this.state,...e}}setState(e){this.state={...this.state,...e}}nextStep(){this.state.currentStep<this.state.totalSteps&&this.state.currentStep++}previousStep(){this.state.currentStep>1&&this.state.currentStep--}canGoNext(){return this.state.currentStep<this.state.totalSteps}canGoPrevious(){return this.state.currentStep>1}getProgress(){return this.state.currentStep/this.state.totalSteps*100}buildFinalSettings(){return{...this.state.originalSettings,currentTemplate:this.state.selectedTemplate,currentTheme:this.state.selectedTheme,contentOrganization:this.state.selectedContentOrg,siteInfo:this.state.selectedSiteInfo,navigation:this.state.selectedNavigation,features:this.state.selectedFeatures,typography:this.state.selectedTypography,optionalFeatures:this.state.selectedOptionalFeatures,deployment:{...this.state.originalSettings.deployment,platform:this.state.selectedDeployment},runWizardOnStartup:this.state.runWizardOnStartup}}};var u=class{constructor(e,t,n,a,s){this.app=e,this.modal=t,this.stateManager=n,this.configManager=a,this.pluginManager=s}nextStep(){this.stateManager.nextStep(),this.modal.close()}previousStep(){this.stateManager.previousStep(),this.modal.close()}updateState(e){this.stateManager.updateState(e)}getState(){return this.stateManager.getState()}};var z=class extends u{render(e){var n,a,s,i,o,r;let t=this.getState();e.innerHTML=`
			<div class="welcome-content">
				<h2>Welcome to Astro Modular!</h2>
				<p>This wizard will help you set up your Astro Modular theme with the perfect configuration for your needs.</p>
				
				<div class="checkbox-option">
					<input type="checkbox" id="run-wizard-startup" ${t.runWizardOnStartup?"checked":""}>
					<label for="run-wizard-startup">Run this wizard on startup</label>
				</div>
				
				<div class="site-info-form">
					<h3>Site Information</h3>
					<div class="form-group">
						<label for="site-url">URL</label>
						<input type="text" id="site-url" value="${t.selectedSiteInfo.site}" placeholder="https://astro-modular.netlify.app">
					</div>
					<div class="form-group">
						<label for="site-title">Title</label>
						<input type="text" id="site-title" value="${t.selectedSiteInfo.title}" placeholder="Astro Modular">
					</div>
					<div class="form-group">
						<label for="site-description">Description</label>
						<input type="text" id="site-description" value="${t.selectedSiteInfo.description}" placeholder="A flexible blog theme designed for Obsidian users.">
					</div>
					<div class="form-group">
						<label for="site-author">Author Name</label>
						<input type="text" id="site-author" value="${t.selectedSiteInfo.author}" placeholder="David V. Kimball">
					</div>
					<div class="form-group">
						<label for="site-language">Language</label>
						<input type="text" id="site-language" value="${t.selectedSiteInfo.language}" placeholder="en">
					</div>
				</div>
			</div>
		`,(n=e.querySelector("#run-wizard-startup"))==null||n.addEventListener("change",l=>{let p=l.target;this.updateState({runWizardOnStartup:p.checked})}),(a=e.querySelector("#site-url"))==null||a.addEventListener("input",l=>{this.updateState({selectedSiteInfo:{...t.selectedSiteInfo,site:l.target.value}})}),(s=e.querySelector("#site-title"))==null||s.addEventListener("input",l=>{this.updateState({selectedSiteInfo:{...t.selectedSiteInfo,title:l.target.value}})}),(i=e.querySelector("#site-description"))==null||i.addEventListener("input",l=>{this.updateState({selectedSiteInfo:{...t.selectedSiteInfo,description:l.target.value}})}),(o=e.querySelector("#site-author"))==null||o.addEventListener("input",l=>{this.updateState({selectedSiteInfo:{...t.selectedSiteInfo,author:l.target.value}})}),(r=e.querySelector("#site-language"))==null||r.addEventListener("input",l=>{this.updateState({selectedSiteInfo:{...t.selectedSiteInfo,language:l.target.value}})})}};var de=require("obsidian"),V=class extends u{render(e){let t=this.getState();e.innerHTML=`
			<div class="template-selection">
				<h2>Choose your preset</h2>
				<p>Select a preset that best fits your content type and goals.</p>
				<div class="template-options">
					${y.map(n=>`
						<div class="template-option ${t.selectedTemplate===n.id?"selected":""}" 
							 data-template="${n.id}">
							<div class="template-header">
								<h3>${n.name}</h3>
								${n.recommended?'<span class="recommended">Default</span>':""}
							</div>
							<p class="template-description">${n.description}</p>
							<div class="template-features">
								${n.features.map(a=>`<span class="feature-tag">${a}</span>`).join("")}
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,e.querySelectorAll(".template-option").forEach(n=>{n.addEventListener("click",()=>{let a=n.getAttribute("data-template");if(a){if(this.updateState({selectedTemplate:a}),a==="custom")try{let s=require("fs"),i=require("path"),{shell:o}=require("electron"),r=this.app.vault.adapter.basePath||this.app.vault.adapter.path,l=typeof r=="string"?r:r.toString(),p=i.join(l,"..","config.ts");s.existsSync(p)||s.writeFileSync(p,`// Astro Modular Configuration
// Customize your settings here

export const siteConfig = {
  // Add your configuration here
};
`),o.openPath(p),new de.Notice("Opening config.ts for custom configuration"),this.modal.close();return}catch(s){new de.Notice(`Error opening config file: ${s instanceof Error?s.message:String(s)}`)}this.render(e)}})})}};var W=class extends u{render(e){let t=this.getState(),n=this.isObsidianDarkMode();e.innerHTML=`
			<div class="theme-selection">
				<h2>Choose your theme</h2>
				<p>Select a color scheme that matches your style and content.</p>
				<div class="theme-options">
					${_.map(a=>`
						<div class="theme-option ${t.selectedTheme===a.id?"selected":""}" 
							 data-theme="${a.id}" 
							 style="background: ${n?a.backgroundColorDark:a.backgroundColorLight};">
							<div class="theme-preview" style="background: linear-gradient(135deg, ${a.previewColors.join(", ")});">
								<div class="theme-preview-content">
									<div class="preview-text">Sample Text</div>
									<div class="preview-accent">Accent</div>
								</div>
							</div>
							<div class="theme-info">
								<h3>${a.name}</h3>
								<p>${a.description}</p>
							</div>
						</div>
					`).join("")}
				</div>
			</div>
		`,e.querySelectorAll(".theme-option").forEach(a=>{a.addEventListener("click",()=>{let s=a.getAttribute("data-theme");s&&(this.updateState({selectedTheme:s}),this.render(e))})})}isObsidianDarkMode(){let e=document.body,t=e.classList.contains("theme-dark")||e.classList.contains("dark"),n=getComputedStyle(document.documentElement),s=n.getPropertyValue("color-scheme").trim()==="dark",i=n.getPropertyValue("--background-primary").trim(),o=Boolean(i&&(i.includes("#")&&parseInt(i.slice(1,3),16)<128||i.includes("rgb")&&i.includes("0, 0, 0")||i.includes("hsl")&&i.includes("0, 0%, 0%")));return t||s||o}};var U=class extends u{render(e){var n,a,s,i,o,r,l,p,g,f;let t=this.getState();e.innerHTML=`
			<div class="font-selection">
				<h2>Choose your fonts</h2>
				<p>Select fonts for headings, body text, and code.</p>
				<div class="font-options">
					<div class="font-setting">
						<label>Heading Font</label>
						<select id="heading-font">
							${P.map(d=>`<option value="${d}" ${t.selectedTypography.headingFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Body Font</label>
						<select id="prose-font">
							${P.map(d=>`<option value="${d}" ${t.selectedTypography.proseFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Monospace Font</label>
						<select id="mono-font">
							${P.map(d=>`<option value="${d}" ${t.selectedTypography.monoFont===d?"selected":""}>${d}</option>`).join("")}
						</select>
					</div>
					<div class="font-setting">
						<label>Font Source</label>
						<select id="font-source">
							<option value="local" ${t.selectedTypography.fontSource==="local"?"selected":""}>Local (Google Fonts)</option>
							<option value="cdn" ${t.selectedTypography.fontSource==="cdn"?"selected":""}>CDN (Custom)</option>
						</select>
					</div>
					${t.selectedTypography.fontSource==="cdn"?`
						<div class="font-setting">
							<label>Custom Font URLs (comma-separated)</label>
							<input type="text" id="custom-fonts" placeholder="https://fonts.googleapis.com/css2?family=Custom+Font:wght@400;600&display=swap">
						</div>
						<div class="font-setting">
							<label>Heading Font Name</label>
							<input type="text" id="custom-heading-font" value="${((n=t.selectedTypography.customFonts)==null?void 0:n.heading)||""}" placeholder="Custom Heading Font">
						</div>
						<div class="font-setting">
							<label>Body Font Name</label>
							<input type="text" id="custom-prose-font" value="${((a=t.selectedTypography.customFonts)==null?void 0:a.prose)||""}" placeholder="Custom Body Font">
						</div>
						<div class="font-setting">
							<label>Monospace Font Name</label>
							<input type="text" id="custom-mono-font" value="${((s=t.selectedTypography.customFonts)==null?void 0:s.mono)||""}" placeholder="Custom Monospace Font">
						</div>
					`:""}
				</div>
			</div>
		`,(i=e.querySelector("#heading-font"))==null||i.addEventListener("change",d=>{this.updateState({selectedTypography:{...t.selectedTypography,headingFont:d.target.value}})}),(o=e.querySelector("#prose-font"))==null||o.addEventListener("change",d=>{this.updateState({selectedTypography:{...t.selectedTypography,proseFont:d.target.value}})}),(r=e.querySelector("#mono-font"))==null||r.addEventListener("change",d=>{this.updateState({selectedTypography:{...t.selectedTypography,monoFont:d.target.value}})}),(l=e.querySelector("#font-source"))==null||l.addEventListener("change",d=>{this.updateState({selectedTypography:{...t.selectedTypography,fontSource:d.target.value}}),this.render(e)}),(p=e.querySelector("#custom-heading-font"))==null||p.addEventListener("input",d=>{this.updateState({selectedTypography:{...t.selectedTypography,customFonts:{...t.selectedTypography.customFonts,heading:d.target.value}}})}),(g=e.querySelector("#custom-prose-font"))==null||g.addEventListener("input",d=>{this.updateState({selectedTypography:{...t.selectedTypography,customFonts:{...t.selectedTypography.customFonts,prose:d.target.value}}})}),(f=e.querySelector("#custom-mono-font"))==null||f.addEventListener("input",d=>{this.updateState({selectedTypography:{...t.selectedTypography,customFonts:{...t.selectedTypography.customFonts,mono:d.target.value}}})})}};var j=class extends u{render(e){let t=this.getState();e.innerHTML=`
			<div class="content-org-selection">
				<h2>Content organization</h2>
				<p>Choose how you want to organize your content and assets.</p>
				<div class="org-options">
					<div class="org-option ${t.selectedContentOrg==="file-based"?"selected":""}" 
						 data-org="file-based">
						<div class="org-header">
							<h3>File-based</h3>
							<span class="default-badge">Default</span>
						</div>
						<p>Single markdown files with images in attachments subfolder</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post.md
\u2514\u2500\u2500 attachments/
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
					<div class="org-option ${t.selectedContentOrg==="folder-based"?"selected":""}" 
						 data-org="folder-based">
						<div class="org-header">
							<h3>Folder-based</h3>
						</div>
						<p>Each post gets its own folder with co-located assets</p>
						<div class="org-example">
							<pre><code>posts/
\u251C\u2500\u2500 my-post/
\u2502   \u251C\u2500\u2500 index.md
\u2502   \u2514\u2500\u2500 image.jpg
\u2514\u2500\u2500 another-post/
    \u251C\u2500\u2500 index.md
    \u2514\u2500\u2500 image.jpg</code></pre>
						</div>
					</div>
				</div>
			</div>
		`,e.querySelectorAll(".org-option").forEach(n=>{n.addEventListener("click",()=>{let a=n.getAttribute("data-org");a&&(this.updateState({selectedContentOrg:a}),this.render(e))})})}};var q=class extends u{render(e){let t=this.getState();e.innerHTML=`
			<div class="navigation-selection">
				<h2>Navigation setup</h2>
				<p>Configure your site navigation and social links.</p>
				
				<div class="navigation-sections">
					<div class="nav-section">
						<h3>Navigation Pages</h3>
						<p>Add pages to your main navigation menu.</p>
						<div class="nav-items" id="pages-list">
							${t.selectedNavigation.pages.map((n,a)=>`
								<div class="nav-item" data-index="${a}">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" placeholder="Page Title" value="${n.title}">
											<input type="text" class="nav-url" placeholder="/page-url" value="${n.url}">
										</div>
										<button class="nav-remove mod-warning" data-index="${a}">Remove</button>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add" id="add-page">+ Add Page</button>
					</div>
					
					<div class="nav-section">
						<h3>Social Links</h3>
						<p>Add social media links for your footer.</p>
						<div class="nav-items" id="social-list">
							${t.selectedNavigation.social.map((n,a)=>`
								<div class="nav-item" data-index="${a}">
									<div class="nav-item-content">
										<div class="nav-item-fields">
											<input type="text" class="nav-title" placeholder="Social Title" value="${n.title}">
											<input type="text" class="nav-url" placeholder="https://example.com" value="${n.url}">
										</div>
										<button class="nav-remove mod-warning" data-index="${a}">Remove</button>
									</div>
									<div class="nav-icon-row">
										<input type="text" class="nav-icon" placeholder="icon-name" value="${n.icon||""}">
										<div class="nav-icon-help">
											<small>Icon names from FontAwesome Brands</small>
										</div>
									</div>
								</div>
							`).join("")}
						</div>
						<button class="nav-add" id="add-social">+ Add Social Link</button>
					</div>
				</div>
			</div>
		`,this.setupEventHandlers(e)}setupEventHandlers(e){var n,a;let t=this.getState();e.querySelectorAll("#pages-list .nav-item input").forEach(s=>{s.addEventListener("input",i=>{let o=i.target,r=o.closest(".nav-item"),l=parseInt((r==null?void 0:r.getAttribute("data-index"))||"0"),p=o.classList.contains("nav-title")?"title":"url",g=[...t.selectedNavigation.pages];g[l]={...g[l],[p]:o.value},this.updateState({selectedNavigation:{...t.selectedNavigation,pages:g}})})}),e.querySelectorAll("#social-list .nav-item input").forEach(s=>{s.addEventListener("input",i=>{let o=i.target,r=o.closest(".nav-item"),l=parseInt((r==null?void 0:r.getAttribute("data-index"))||"0"),p=o.classList.contains("nav-title")?"title":o.classList.contains("nav-url")?"url":"icon",g=[...t.selectedNavigation.social];g[l]={...g[l],[p]:o.value},this.updateState({selectedNavigation:{...t.selectedNavigation,social:g}})})}),(n=e.querySelector("#add-page"))==null||n.addEventListener("click",()=>{this.updateState({selectedNavigation:{...t.selectedNavigation,pages:[...t.selectedNavigation.pages,{title:"New Page",url:"/new-page"}]}}),this.render(e)}),(a=e.querySelector("#add-social"))==null||a.addEventListener("click",()=>{this.updateState({selectedNavigation:{...t.selectedNavigation,social:[...t.selectedNavigation.social,{title:"New Social",url:"https://example.com",icon:""}]}}),this.render(e)}),e.querySelectorAll(".nav-remove").forEach(s=>{s.addEventListener("click",i=>{let o=i.target,r=parseInt(o.getAttribute("data-index")||"0");if(o.closest("#pages-list")){let p=[...t.selectedNavigation.pages];p.splice(r,1),this.updateState({selectedNavigation:{...t.selectedNavigation,pages:p}})}else{let p=[...t.selectedNavigation.social];p.splice(r,1),this.updateState({selectedNavigation:{...t.selectedNavigation,social:p}})}this.render(e)})})}};var Y=class extends u{render(e){let t=this.getState();e.innerHTML=`
			<div class="features-selection">
				<h2>Optional features</h2>
				<p>Enable or disable specific features for your site.</p>
				<div class="features-list">
					${this.renderFeatureToggle("commandPalette","Command palette","Add a command palette to your site",t)}
					${this.renderFeatureToggle("tableOfContents","Table of contents","Show table of contents on pages",t)}
					${this.renderFeatureToggle("readingTime","Reading time","Display estimated reading time",t)}
					${this.renderFeatureToggle("linkedMentions","Linked mentions","Show linked mentions and backlinks",t)}
					${this.renderFeatureToggle("graphView","Graph view","Show graph view of post connections",t)}
					${this.renderFeatureToggle("postNavigation","Post navigation","Show next/previous post navigation",t)}
					${this.renderFeatureToggle("scrollToTop","Scroll to top","Show scroll to top button",t)}
					${this.renderFeatureToggle("showSocialIconsInFooter","Social icons in footer","Show social icons in footer",t)}
					${this.renderFeatureToggle("profilePicture","Profile picture","Show profile picture in header",t)}
					${this.renderFeatureToggle("comments","Comments","Enable comment system",t)}
				</div>
			</div>
		`,this.setupEventHandlers(e)}renderFeatureToggle(e,t,n,a){let s=a.selectedFeatures[e]||!1;return`
			<div class="feature-setting">
				<div class="feature-toggle">
					<input type="checkbox" id="feature-${e}" ${s?"checked":""}>
					<label for="feature-${e}" class="toggle-slider"></label>
					<div class="feature-label">
						<strong>${t}</strong>
						<p>${n}</p>
					</div>
				</div>
			</div>
		`}setupEventHandlers(e){let t=this.getState();e.querySelectorAll('.feature-toggle input[type="checkbox"]').forEach(n=>{n.addEventListener("change",a=>{let s=a.target,i=s.id.replace("feature-","");this.updateState({selectedFeatures:{...t.selectedFeatures,[i]:s.checked}})})})}};var K=class extends u{render(e){let t=this.getState();e.innerHTML=`
			<div class="deployment-selection">
				<h2>Deployment platform</h2>
				<p>Choose your preferred deployment platform.</p>
				<div class="deployment-options">
					<div class="deployment-option ${t.selectedDeployment==="netlify"?"selected":""}" 
						 data-deployment="netlify">
						<div class="deployment-header">
							<h3>Netlify</h3>
						</div>
						<p>Automatic deployments from Git with built-in form handling and serverless functions.</p>
					</div>
					<div class="deployment-option ${t.selectedDeployment==="vercel"?"selected":""}" 
						 data-deployment="vercel">
						<div class="deployment-header">
							<h3>Vercel</h3>
						</div>
						<p>Excellent performance with edge functions and automatic HTTPS.</p>
					</div>
					<div class="deployment-option ${t.selectedDeployment==="github-pages"?"selected":""}" 
						 data-deployment="github-pages">
						<div class="deployment-header">
							<h3>GitHub Pages</h3>
						</div>
						<p>Free hosting directly from your GitHub repository.</p>
					</div>
				</div>
			</div>
		`,e.querySelectorAll(".deployment-option").forEach(n=>{n.addEventListener("click",()=>{let a=n.getAttribute("data-deployment");a&&(this.updateState({selectedDeployment:a}),this.render(e))})})}};var D=require("obsidian"),J=class extends u{async render(e){let t=this.getState(),n=await this.pluginManager.getPluginStatus();e.innerHTML=`
			<div class="plugin-config">
				<h2>Plugin configuration</h2>
				<p>Configure your Obsidian plugins for optimal integration.</p>
				
				<div class="plugin-status">
					${n.map(a=>`
						<div class="plugin-item ${a.installed?"installed":"missing"}">
							<div class="plugin-icon">
								${a.installed?'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"/></svg>':'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6L6 18M6 6l12 12"/></svg>'}
							</div>
							<div class="plugin-info">
								<h3>${a.name}</h3>
								<p>${a.installed?a.enabled?"Enabled":"Disabled":"Not installed"}</p>
							</div>
						</div>
					`).join("")}
				</div>
				
				<div class="config-options">
					<button class="config-button primary" id="configure-plugins">Configure Automatically</button>
					<button class="config-button secondary" id="show-instructions">Show Manual Instructions</button>
				</div>
			</div>
		`,this.setupEventHandlers(e)}setupEventHandlers(e){var n,a;let t=this.getState();(n=e.querySelector("#configure-plugins"))==null||n.addEventListener("click",async()=>{try{await this.pluginManager.configurePlugins(t.selectedFeatures)?new D.Notice("Plugins configured successfully!"):new D.Notice("Some plugins could not be configured automatically.")}catch(s){new D.Notice(`Error configuring plugins: ${s instanceof Error?s.message:String(s)}`)}}),(a=e.querySelector("#show-instructions"))==null||a.addEventListener("click",async()=>{try{let s=await this.pluginManager.getManualConfigurationInstructions(t.selectedFeatures),{Modal:i}=require("obsidian"),o=new i(this.app);o.titleEl.setText("Manual Configuration Instructions");let r=o.contentEl.createEl("pre");r.textContent=s,o.open()}catch(s){new D.Notice(`Error getting instructions: ${s instanceof Error?s.message:String(s)}`)}})}};var X=require("obsidian");var Q=class extends u{render(e){let t=this.getState(),n=this.formatTemplateName(t.selectedTemplate),a=this.formatThemeName(t.selectedTheme),s=this.formatContentOrganization(t.selectedContentOrg),i=this.formatDeploymentName(t.selectedDeployment);e.innerHTML=`
			<div class="finalize-step">
				<h2>Finalize your configuration</h2>
				<p>Review your settings and complete the setup.</p>
				
				<div class="config-summary">
					<h3>Configuration Summary</h3>
					<div class="config-item">
						<strong>Template:</strong> ${n}
					</div>
					<div class="config-item">
						<strong>Theme:</strong> ${a}
					</div>
					<div class="config-item">
						<strong>Content Organization:</strong> ${s}
					</div>
					<div class="config-item">
						<strong>Deployment:</strong> ${i}
					</div>
					<div class="config-item">
						<strong>Site Title:</strong> ${t.selectedSiteInfo.title}
					</div>
					<div class="config-item">
						<strong>Site URL:</strong> ${t.selectedSiteInfo.site}
					</div>
				</div>
				
				<div class="finalize-options">
					<div class="checkbox-option">
						<input type="checkbox" id="run-wizard-startup" ${t.runWizardOnStartup?"checked":""}>
						<label for="run-wizard-startup">Run wizard on startup (if not completed)</label>
					</div>
				</div>
			</div>
		`,this.setupEventHandlers(e)}setupEventHandlers(e){var n;let t=this.getState();(n=e.querySelector("#run-wizard-startup"))==null||n.addEventListener("change",a=>{let s=a.target;this.updateState({runWizardOnStartup:s.checked})})}async completeWizard(){let e=this.getState();try{let t=this.stateManager.buildFinalSettings();await this.configManager.applyPreset({name:t.currentTemplate,description:"",features:t.features,theme:t.currentTheme,contentOrganization:t.contentOrganization,config:t})?new X.Notice("Configuration applied successfully!"):new X.Notice("Failed to apply configuration. Check the console for errors."),this.stateManager.updateState({currentStep:this.stateManager.getState().totalSteps})}catch(t){new X.Notice(`Error completing wizard: ${t instanceof Error?t.message:String(t)}`)}}formatTemplateName(e){let t=y.find(n=>n.id===e);return t?t.name:e}formatThemeName(e){let t=_.find(n=>n.id===e);return t?t.name:e}formatContentOrganization(e){return e==="file-based"?"File-based":"Folder-based"}formatDeploymentName(e){switch(e){case"netlify":return"Netlify";case"vercel":return"Vercel";case"github-pages":return"GitHub Pages";default:return e}}};var E=class extends he.Modal{constructor(t,n,a){super(t);this.stateManager=new B(n),this.configManager=new b(t),this.pluginManager=new A(t),this.onComplete=a,this.steps=[new z(t,this,this.stateManager,this.configManager,this.pluginManager),new V(t,this,this.stateManager,this.configManager,this.pluginManager),new W(t,this,this.stateManager,this.configManager,this.pluginManager),new U(t,this,this.stateManager,this.configManager,this.pluginManager),new j(t,this,this.stateManager,this.configManager,this.pluginManager),new q(t,this,this.stateManager,this.configManager,this.pluginManager),new Y(t,this,this.stateManager,this.configManager,this.pluginManager),new K(t,this,this.stateManager,this.configManager,this.pluginManager),new J(t,this,this.stateManager,this.configManager,this.pluginManager),new Q(t,this,this.stateManager,this.configManager,this.pluginManager)]}onOpen(){let{contentEl:t}=this;t.empty(),t.addClass("astro-modular-wizard"),this.renderCurrentStep()}onClose(){let{contentEl:t}=this;t.empty()}renderCurrentStep(){let{contentEl:t}=this,n=this.stateManager.getState();t.empty(),t.addClass("astro-modular-wizard"),this.renderHeader(t),this.renderProgress(t);let a=t.createDiv("wizard-content");this.renderStepContent(a),this.renderFooter(t)}renderHeader(t){let n=t.createDiv("wizard-header");n.innerHTML=`
			<h1>Astro Modular Setup</h1>
		`}renderProgress(t){let n=this.stateManager.getState(),a=t.createDiv("wizard-progress");a.innerHTML=`
			<div class="progress-bar">
				<div class="progress-fill" style="width: ${this.stateManager.getProgress()}%"></div>
			</div>
			<div class="progress-text">Step ${n.currentStep} of ${n.totalSteps}</div>
		`}async renderStepContent(t){let a=this.stateManager.getState().currentStep-1;a>=0&&a<this.steps.length&&await this.steps[a].render(t)}renderFooter(t){let n=this.stateManager.getState(),s=t.createDiv("wizard-footer").createDiv("wizard-buttons");if(this.stateManager.canGoPrevious()&&s.createEl("button",{text:"Previous",cls:"mod-button"}).addEventListener("click",()=>{this.stateManager.previousStep(),this.renderCurrentStep()}),this.stateManager.canGoNext()?s.createEl("button",{text:"Next",cls:"mod-button mod-cta"}).addEventListener("click",()=>{this.stateManager.nextStep(),this.renderCurrentStep()}):s.createEl("button",{text:"Complete Setup",cls:"mod-button mod-cta"}).addEventListener("click",async()=>{await this.steps[this.steps.length-1].completeWizard();let r=this.stateManager.buildFinalSettings();this.onComplete(r),this.close()}),this.stateManager.canGoNext()&&n.currentStep>1){let i=s.createEl("button",{text:"Skip",cls:"mod-button"});i.style.opacity="0.6",i.addEventListener("click",()=>{this.applyDefaultValuesForCurrentStep(),this.stateManager.nextStep(),this.renderCurrentStep()})}}applyDefaultValuesForCurrentStep(){switch(this.stateManager.getState().currentStep-1){case 1:this.stateManager.setState({selectedTemplate:"standard"});break;case 2:this.stateManager.setState({selectedTheme:"oxygen"});break;case 3:this.stateManager.setState({selectedTypography:{fontSource:"system",proseFont:"Inter",headingFont:"Inter",monoFont:"JetBrains Mono",customFonts:{prose:"",heading:"",mono:""}}});break;case 4:this.stateManager.setState({selectedContentOrg:"file-based"});break;case 5:this.stateManager.setState({selectedNavigation:{pages:[],social:[]}});break;case 6:this.stateManager.setState({selectedFeatures:{profilePicture:{enabled:!1,image:"/profile.jpg",alt:"Profile picture",size:"md",url:"",placement:"footer",style:"circle"},comments:{enabled:!1,provider:"giscus"}}});break;case 7:this.stateManager.setState({selectedDeployment:"netlify"});break;case 8:break}}};function fe(c,e){c.addCommand({id:"open-settings",name:"Open Astro Modular Settings",callback:()=>{c.app.setting.open(),c.app.setting.openTabById(c.manifest.id)}}),c.addCommand({id:"run-setup-wizard",name:"Run Setup Wizard",callback:()=>{new E(c.app,e,async n=>{e=n,await c.saveData(e)}).open()}}),c.addCommand({id:"open-config",name:"Open config.ts",callback:async()=>{c.app.vault.getAbstractFileByPath("astro.config.ts")?await c.app.workspace.openLinkText("","astro.config.ts"):new Z.Notice("Config file not found. Make sure you have an Astro project in this vault.")}}),c.addCommand({id:"apply-configuration",name:"Apply Current Configuration",callback:async()=>{new Z.Notice("Configuration applied successfully!")}}),c.addCommand({id:"toggle-wizard-startup",name:"Toggle Wizard on Startup",callback:async()=>{e.runWizardOnStartup=!e.runWizardOnStartup,await c.saveData(e),new Z.Notice(`Wizard on startup ${e.runWizardOnStartup?"enabled":"disabled"}`)}})}var Se=require("obsidian");var ge=require("obsidian");var F=require("obsidian"),O=class{constructor(e,t,n,a,s){this.app=e,this.settings=t,this.configManager=n,this.pluginManager=a,this.plugin=s}async applyCurrentConfiguration(){try{let e=await this.configManager.applyPreset({name:this.settings.currentTemplate,description:"",features:this.settings.features,theme:this.settings.currentTheme,contentOrganization:this.settings.contentOrganization,config:this.settings}),t=await this.configManager.updateIndividualFeatures(this.settings);e&&t?(new F.Notice("Configuration applied successfully!"),await this.configManager.triggerRebuild()):new F.Notice("Failed to apply configuration. Check the console for errors.")}catch(e){new F.Notice(`Error applying configuration: ${e instanceof Error?e.message:String(e)}`)}}createDropdownSetting(e,t,n,a,s,i){return new F.Setting(e).setName(t).setDesc(n).addDropdown(o=>(Object.entries(s).forEach(([r,l])=>{o.addOption(r,l)}),o.setValue(a),o.onChange(async r=>{i(r),await this.applyCurrentConfiguration()}),o))}createTextSetting(e,t,n,a,s){return new F.Setting(e).setName(t).setDesc(n).addText(i=>(i.setValue(a),i.onChange(async o=>{s(o),await this.applyCurrentConfiguration()}),i))}createToggleSetting(e,t,n,a,s){return new F.Setting(e).setName(t).setDesc(n).addToggle(i=>(i.setValue(a),i.onChange(async o=>{s(o),await this.applyCurrentConfiguration()}),i))}};var ee=class extends O{render(e){var C,v;e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"General Settings"}),a=t.createEl("p",{text:"Configure basic plugin behavior and view current status."});new ge.Setting(e).setName("Run wizard on startup").setDesc("Show the setup wizard when Obsidian starts (if not disabled)").addToggle(T=>T.setValue(this.settings.runWizardOnStartup).onChange(async I=>{this.settings.runWizardOnStartup=I,await this.plugin.saveData(this.settings)}));let i=e.createDiv("config-display").createDiv("config-info"),o=i.createEl("h3",{text:"Current Configuration"}),r=i.createDiv("config-item");r.createEl("strong",{text:"Template: "}),r.createSpan({text:((C=y.find(T=>T.id===this.settings.currentTemplate))==null?void 0:C.name)||"Unknown"});let l=i.createDiv("config-item");l.createEl("strong",{text:"Theme: "}),l.createSpan({text:((v=_.find(T=>T.id===this.settings.currentTheme))==null?void 0:v.name)||"Unknown"});let p=i.createDiv("config-item");p.createEl("strong",{text:"Organization: "}),p.createSpan({text:this.settings.contentOrganization==="file-based"?"File-based":"Folder-based"});let g=i.createDiv("config-item");g.createEl("strong",{text:"Deployment: "}),g.createSpan({text:this.formatDeploymentName(this.settings.deployment.platform)});let f=i.createDiv("config-item");f.createEl("strong",{text:"Site Title: "}),f.createSpan({text:this.settings.siteInfo.title});let d=i.createDiv("config-item");d.createEl("strong",{text:"Site URL: "}),d.createSpan({text:this.settings.siteInfo.site}),new ge.Setting(e).setName("Setup wizard").setDesc("Run the setup wizard to reconfigure your theme").addButton(T=>T.setButtonText("Run Setup Wizard").setCta().onClick(()=>{new E(this.app,this.settings,async me=>{this.settings=me,await this.plugin.saveData(this.settings)}).open()}))}formatDeploymentName(e){switch(e){case"netlify":return"Netlify";case"vercel":return"Vercel";case"github-pages":return"GitHub Pages";default:return e}}};var S=require("obsidian");var te=class extends O{render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Site Information"}),a=t.createEl("p",{text:"Configure your site metadata and basic information. Changes are applied to your config.ts file immediately."});new S.Setting(e).setName("Site URL").setDesc("Your site's base URL (e.g., https://yoursite.com)").addText(s=>s.setPlaceholder("https://astro-modular.netlify.app").setValue(this.settings.siteInfo.site).onChange(async i=>{this.settings.siteInfo.site=i,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new S.Notice("Site URL updated and applied to config.ts")}catch(o){new S.Notice(`Failed to apply site URL change: ${o instanceof Error?o.message:String(o)}`)}})),new S.Setting(e).setName("Site Title").setDesc("Your site's title").addText(s=>s.setPlaceholder("Astro Modular").setValue(this.settings.siteInfo.title).onChange(async i=>{this.settings.siteInfo.title=i,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new S.Notice("Site title updated and applied to config.ts")}catch(o){new S.Notice(`Failed to apply site title change: ${o instanceof Error?o.message:String(o)}`)}})),new S.Setting(e).setName("Site Description").setDesc("A brief description of your site").addTextArea(s=>{s.setPlaceholder("A flexible blog theme designed for Obsidian users.").setValue(this.settings.siteInfo.description),s.inputEl.rows=4,s.onChange(async i=>{this.settings.siteInfo.description=i,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new S.Notice("Site description updated and applied to config.ts")}catch(o){new S.Notice(`Failed to apply site description change: ${o instanceof Error?o.message:String(o)}`)}})}),new S.Setting(e).setName("Author Name").setDesc("Your name or the site author's name").addText(s=>s.setPlaceholder("David V. Kimball").setValue(this.settings.siteInfo.author).onChange(async i=>{this.settings.siteInfo.author=i,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new S.Notice("Author name updated and applied to config.ts")}catch(o){new S.Notice(`Failed to apply author name change: ${o instanceof Error?o.message:String(o)}`)}})),new S.Setting(e).setName("Language").setDesc("Your site's primary language (ISO 639-1 code)").addText(s=>s.setPlaceholder("en").setValue(this.settings.siteInfo.language).onChange(async i=>{this.settings.siteInfo.language=i,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new S.Notice("Language updated and applied to config.ts")}catch(o){new S.Notice(`Failed to apply language change: ${o instanceof Error?o.message:String(o)}`)}}))}};var ue=require("obsidian");var ae=class extends O{render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Navigation"}),a=t.createEl("p",{text:"Configure your site navigation pages and social links. Changes are applied to your config.ts file immediately."}),s=e.createDiv("settings-section");s.createEl("h3",{text:"Navigation Pages"}),s.createEl("p",{text:"Add or remove pages from your main navigation menu."});let i=s.createDiv("nav-items");this.settings.navigation.pages.forEach((l,p)=>{let g=i.createDiv("nav-item");g.setAttribute("data-index",p.toString());let f=g.createDiv("nav-item-content"),d=f.createDiv("nav-item-fields"),C=d.createEl("input",{type:"text",cls:"nav-title",placeholder:"Page Title"});C.value=l.title,C.addEventListener("input",async I=>{this.settings.navigation.pages[p].title=I.target.value,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()});let v=d.createEl("input",{type:"text",cls:"nav-url",placeholder:"/page-url"});v.value=l.url,v.addEventListener("input",async I=>{this.settings.navigation.pages[p].url=I.target.value,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()}),f.createEl("button",{text:"Remove",cls:"nav-remove mod-warning"}).addEventListener("click",async()=>{this.settings.navigation.pages.splice(p,1),await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration(),this.render(e)})}),new ue.Setting(s).setName("Add Page").setDesc("Add a new page to your navigation").addButton(l=>l.setButtonText("+ Add Page").setCta().onClick(async()=>{this.settings.navigation.pages.push({title:"New Page",url:"/new-page"}),await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration(),this.render(e)}));let o=e.createDiv("settings-section");o.createEl("h3",{text:"Social Links"}),o.createEl("p",{text:"Configure your social media links in the footer."});let r=o.createDiv("nav-items");this.settings.navigation.social.forEach((l,p)=>{let g=r.createDiv("nav-item");g.setAttribute("data-index",p.toString());let f=g.createDiv("nav-item-content"),d=f.createDiv("nav-item-fields"),C=d.createEl("input",{type:"text",cls:"nav-title",placeholder:"Social Title"});C.value=l.title,C.addEventListener("input",async w=>{this.settings.navigation.social[p].title=w.target.value,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()});let v=d.createEl("input",{type:"text",cls:"nav-url",placeholder:"https://example.com"});v.value=l.url,v.addEventListener("input",async w=>{this.settings.navigation.social[p].url=w.target.value,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()});let T=g.createDiv("nav-icon-row"),I=T.createEl("input",{type:"text",cls:"nav-icon",placeholder:"icon-name"});I.value=l.icon||"",I.addEventListener("input",async w=>{this.settings.navigation.social[p].icon=w.target.value,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()}),T.createDiv("nav-icon-help").createEl("small",{text:"Icon names from FontAwesome Brands"}),f.createEl("button",{text:"Remove",cls:"nav-remove mod-warning"}).addEventListener("click",async()=>{this.settings.navigation.social.splice(p,1),await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration(),this.render(e)})}),new ue.Setting(o).setName("Add Social Link").setDesc("Add a new social media link").addButton(l=>l.setButtonText("+ Add Social Link").setCta().onClick(async()=>{this.settings.navigation.social.push({title:"New Social",url:"https://example.com",icon:""}),await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration(),this.render(e)}))}};var h=require("obsidian");var Oe=require("obsidian"),G=class extends Oe.Modal{constructor(t,n,a,s){super(t);this.changes=n,this.onConfirm=a,this.onCancel=s}onOpen(){let{contentEl:t}=this;t.empty();let n=t.createEl("h2",{text:"Template Change Warning"});n.style.marginTop="0";let a=t.createEl("p",{text:"This template will overwrite your current custom settings. The following settings will be changed:"});a.style.marginBottom="16px";let s=t.createEl("ul");s.style.marginBottom="24px",s.style.paddingLeft="20px",this.changes.forEach(p=>{let g=s.createEl("li",{text:p});g.style.marginBottom="4px"});let i=t.createEl("p",{text:"Do you want to continue? This action cannot be undone."});i.style.fontWeight="bold",i.style.marginBottom="24px";let o=t.createDiv("modal-button-container");o.style.display="flex",o.style.gap="12px",o.style.justifyContent="flex-end";let r=o.createEl("button",{text:"Cancel"});r.className="mod-cta",r.addEventListener("click",()=>{this.onCancel(),this.close()});let l=o.createEl("button",{text:"Continue"});l.className="mod-warning",l.addEventListener("click",()=>{this.onConfirm(),this.close()}),l.focus()}onClose(){let{contentEl:t}=this;t.empty()}};var ne=class extends O{render(e){var s;e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Configuration"}),a=t.createEl("p",{text:"Configure your template and content organization. Changes are applied to your config.ts file immediately."});new h.Setting(e).setName("Template").setDesc("Choose your content template").addDropdown(i=>{y.forEach(o=>{i.addOption(o.id,o.name)}),i.setValue(this.settings.currentTemplate),i.onChange(async o=>{let r=this.getTemplateChanges(o);if(r.length>0)new G(this.app,r,async()=>{this.settings.currentTemplate=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new h.Notice(`Template changed to ${o} and applied to config.ts`)}catch(p){new h.Notice(`Failed to apply template change: ${p instanceof Error?p.message:String(p)}`)}},()=>{i.setValue(this.settings.currentTemplate)}).open();else{this.settings.currentTemplate=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new h.Notice(`Template changed to ${o} and applied to config.ts`)}catch(l){new h.Notice(`Failed to apply template change: ${l instanceof Error?l.message:String(l)}`)}}})}),new h.Setting(e).setName("Content organization").setDesc("Choose how to organize your content and assets").addDropdown(i=>{i.addOption("file-based","File-based"),i.addOption("folder-based","Folder-based"),i.setValue(this.settings.contentOrganization),i.onChange(async o=>{this.settings.contentOrganization=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new h.Notice(`Content organization changed to ${o} and applied to config.ts`)}catch(r){new h.Notice(`Failed to apply content organization change: ${r instanceof Error?r.message:String(r)}`)}})}),new h.Setting(e).setName("Deployment").setDesc("Choose your deployment platform").addDropdown(i=>{i.addOption("netlify","Netlify"),i.addOption("vercel","Vercel"),i.addOption("github-pages","GitHub Pages"),i.setValue(this.settings.deployment.platform),i.onChange(async o=>{this.settings.deployment.platform=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new h.Notice(`Deployment platform changed to ${o} and applied to config.ts`)}catch(r){new h.Notice(`Failed to apply deployment platform change: ${r instanceof Error?r.message:String(r)}`)}})}),new h.Setting(e).setName("Reset to Template").setDesc(`Reset all settings to the current template (${(s=y.find(i=>i.id===this.settings.currentTemplate))==null?void 0:s.name})`).addButton(i=>i.setButtonText("Reset to Template").setWarning().onClick(async()=>{let o=this.getTemplateChanges(this.settings.currentTemplate);o.length>0?new G(this.app,o,async()=>{try{await this.applyCurrentConfiguration(),new h.Notice(`Reset to ${this.settings.currentTemplate} template and applied to config.ts`)}catch(l){new h.Notice(`Failed to reset to template: ${l instanceof Error?l.message:String(l)}`)}},()=>{}).open():new h.Notice("Settings are already at template defaults")})),new h.Setting(e).setName("Edit config.ts directly").setDesc("Open your Astro configuration file in the editor").addButton(i=>i.setButtonText("Open config.ts").onClick(async()=>{await this.openConfigFile()}))}async openConfigFile(){try{let e=require("fs"),t=require("path"),{shell:n}=require("electron"),a=this.app.vault.adapter.basePath||this.app.vault.adapter.path,s=typeof a=="string"?a:a.toString(),i=t.join(s,"..","config.ts");e.existsSync(i)?n.openPath(i):new h.Notice(`Config file not found at: ${i}`)}catch(e){new h.Notice(`Error opening config file: ${e instanceof Error?e.message:String(e)}`)}}getTemplateChanges(e){let t=[];return y.find(a=>a.id===e)&&(t.push("Theme and color scheme"),t.push("Feature toggles and settings"),t.push("Typography and font settings"),t.push("Content organization settings")),t}};var m=require("obsidian");var se=class extends O{render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Style"}),a=t.createEl("p",{text:"Configure your theme and typography settings. Changes are applied to your config.ts file immediately."});new m.Setting(e).setName("Theme").setDesc("Choose your color theme").addDropdown(i=>{_.forEach(o=>{i.addOption(o.id,o.name)}),i.setValue(this.settings.currentTheme),i.onChange(async o=>{this.settings.currentTheme=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new m.Notice(`Theme changed to ${o} and applied to config.ts`)}catch(r){new m.Notice(`Failed to apply theme change: ${r instanceof Error?r.message:String(r)}`)}})});let s=e.createDiv("settings-section");s.createEl("h3",{text:"Typography"}),s.createEl("p",{text:"Configure your font settings."}),new m.Setting(s).setName("Heading Font").setDesc("Font for headings and titles").addDropdown(i=>{P.forEach(o=>{i.addOption(o,o)}),i.setValue(this.settings.typography.headingFont),i.onChange(async o=>{this.settings.typography.headingFont=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new m.Notice("Heading font updated and applied to config.ts")}catch(r){new m.Notice(`Failed to apply heading font change: ${r instanceof Error?r.message:String(r)}`)}})}),new m.Setting(s).setName("Prose Font").setDesc("Font for body text and content").addDropdown(i=>{P.forEach(o=>{i.addOption(o,o)}),i.setValue(this.settings.typography.proseFont),i.onChange(async o=>{this.settings.typography.proseFont=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new m.Notice("Prose font updated and applied to config.ts")}catch(r){new m.Notice(`Failed to apply prose font change: ${r instanceof Error?r.message:String(r)}`)}})}),new m.Setting(s).setName("Monospace Font").setDesc("Font for code blocks and technical content").addDropdown(i=>{P.forEach(o=>{i.addOption(o,o)}),i.setValue(this.settings.typography.monoFont),i.onChange(async o=>{this.settings.typography.monoFont=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new m.Notice("Monospace font updated and applied to config.ts")}catch(r){new m.Notice(`Failed to apply monospace font change: ${r instanceof Error?r.message:String(r)}`)}})}),new m.Setting(s).setName("Font Source").setDesc("How fonts are loaded").addDropdown(i=>{i.addOption("local","Local (Google Fonts)"),i.addOption("cdn","CDN (Custom)"),i.setValue(this.settings.typography.fontSource),i.onChange(async o=>{this.settings.typography.fontSource=o,await this.plugin.saveData(this.settings),this.render(e);try{await this.applyCurrentConfiguration(),new m.Notice(`Font source changed to ${o} and applied to config.ts`)}catch(r){new m.Notice(`Failed to apply font source change: ${r instanceof Error?r.message:String(r)}`)}})}),this.settings.typography.fontSource==="cdn"&&(new m.Setting(s).setName("Custom Font URLs").setDesc("Comma-separated font URLs").addTextArea(i=>{var o;i.setPlaceholder("https://fonts.googleapis.com/css2?family=Custom+Font:wght@400;600&display=swap").setValue(((o=this.settings.typography.customFonts)==null?void 0:o.heading)||""),i.onChange(async r=>{this.settings.typography.customFonts||(this.settings.typography.customFonts={heading:"",prose:"",mono:""}),this.settings.typography.customFonts.heading=r,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()})}),new m.Setting(s).setName("Custom Heading Font Name").setDesc("Name of the custom heading font").addText(i=>{var o;return i.setPlaceholder("Custom Heading Font").setValue(((o=this.settings.typography.customFonts)==null?void 0:o.heading)||"").onChange(async r=>{this.settings.typography.customFonts||(this.settings.typography.customFonts={heading:"",prose:"",mono:""}),this.settings.typography.customFonts.heading=r,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()})}),new m.Setting(s).setName("Custom Prose Font Name").setDesc("Name of the custom prose font").addText(i=>{var o;return i.setPlaceholder("Custom Prose Font").setValue(((o=this.settings.typography.customFonts)==null?void 0:o.prose)||"").onChange(async r=>{this.settings.typography.customFonts||(this.settings.typography.customFonts={heading:"",prose:"",mono:""}),this.settings.typography.customFonts.prose=r,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()})}),new m.Setting(s).setName("Custom Monospace Font Name").setDesc("Name of the custom monospace font").addText(i=>{var o;return i.setPlaceholder("Custom Monospace Font").setValue(((o=this.settings.typography.customFonts)==null?void 0:o.mono)||"").onChange(async r=>{this.settings.typography.customFonts||(this.settings.typography.customFonts={heading:"",prose:"",mono:""}),this.settings.typography.customFonts.mono=r,await this.plugin.saveData(this.settings),await this.applyCurrentConfiguration()})}))}};var k=require("obsidian");var ie=class extends O{render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Feature Configuration"}),a=t.createEl("p",{text:"Enable or disable specific features for your site. Changes are applied to your config.ts file immediately when you toggle them."});[{key:"commandPalette",name:"Command palette",desc:"Add a command palette to your site"},{key:"tableOfContents",name:"Table of contents",desc:"Show table of contents on pages"},{key:"readingTime",name:"Reading time",desc:"Display estimated reading time"},{key:"linkedMentions",name:"Linked mentions",desc:"Show linked mentions and backlinks"},{key:"graphView",name:"Graph view",desc:"Show graph view of post connections"},{key:"postNavigation",name:"Post navigation",desc:"Show next/previous post navigation"},{key:"scrollToTop",name:"Scroll to top",desc:"Show scroll to top button"},{key:"showSocialIconsInFooter",name:"Social icons in footer",desc:"Show social icons in footer"},{key:"profilePicture",name:"Profile picture",desc:"Show profile picture in header"},{key:"comments",name:"Comments",desc:"Enable comment system"}].forEach(o=>{let r=o.key,l=this.settings.features[r],p=typeof l=="boolean"?l:!1;new k.Setting(e).setName(o.name).setDesc(o.desc).addToggle(g=>g.setValue(p).onChange(async f=>{this.settings.features[r]=f,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new k.Notice(`${o.name} ${f?"enabled":"disabled"} and applied to config.ts`)}catch(d){new k.Notice(`Failed to apply ${o.name} to config.ts: ${d instanceof Error?d.message:String(d)}`)}}))}),e.createDiv("settings-section").createEl("p",{text:"All changes are applied to your config.ts file immediately when you toggle features.",cls:"setting-item-description"})}};var M=require("obsidian");var oe=class extends O{async render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Plugin Configuration"}),a=t.createEl("p",{text:"Manage your Obsidian plugins and their settings."}),s=await this.pluginManager.getPluginStatus(),o=e.createDiv("plugin-status-container").createDiv("plugin-status");for(let r of s){let l=o.createDiv(`plugin-item ${r.installed?"installed":"missing"}`),p=l.createDiv("plugin-icon");p.innerHTML=r.installed?'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M20 6L9 17l-5-5"/></svg>':'<svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6L6 18M6 6l12 12"/></svg>';let g=l.createDiv("plugin-info");g.createEl("h3",{text:r.name});let f=r.installed?r.enabled?"Enabled":"Disabled":"Not installed";g.createEl("p",{text:f})}new M.Setting(e).setName("Configure automatically").setDesc("Automatically configure all installed plugins").addButton(r=>r.setButtonText("Configure Automatically").setCta().onClick(async()=>{await this.pluginManager.configurePlugins(this.settings.pluginConfig)?new M.Notice("Plugins configured successfully!"):new M.Notice("Some plugins could not be configured automatically.")})),new M.Setting(e).setName("Show manual instructions").setDesc("Get step-by-step instructions for manual configuration").addButton(r=>r.setButtonText("Show Manual Instructions").onClick(async()=>{let l=await this.pluginManager.getManualConfigurationInstructions(this.settings.pluginConfig),p=new M.Modal(this.app);p.titleEl.setText("Manual Configuration Instructions");let g=p.contentEl.createEl("pre");g.textContent=l,p.open()}))}};var N=require("obsidian");var re=class extends O{render(e){e.empty();let t=e.createDiv("settings-section"),n=t.createEl("h2",{text:"Advanced Settings"}),a=t.createEl("p",{text:"Advanced configuration options and utilities."});new N.Setting(e).setName("Reset to defaults").setDesc("Reset all settings to their default values").addButton(s=>s.setButtonText("Reset to Defaults").setWarning().onClick(async()=>{if(confirm("Are you sure you want to reset all configuration settings to defaults? This will preserve your site info and navigation settings.")){let i=this.settings.siteInfo,o=this.settings.navigation;this.settings={...L},this.settings.siteInfo=i,this.settings.navigation=o,await this.plugin.saveData(this.settings);try{await this.applyCurrentConfiguration(),new N.Notice("Configuration reset to defaults and applied to config.ts (site info and navigation preserved)")}catch(r){new N.Notice(`Configuration reset but failed to apply to config.ts: ${r instanceof Error?r.message:String(r)}`)}}})),new N.Setting(e).setName("Export configuration").setDesc("Export your current configuration as JSON").addButton(s=>s.setButtonText("Export JSON").onClick(()=>{this.exportConfiguration()})),new N.Setting(e).setName("Import configuration").setDesc("Import configuration from JSON file").addButton(s=>s.setButtonText("Import JSON").onClick(()=>{this.importConfiguration()}))}exportConfiguration(){let e=JSON.stringify(this.settings,null,2),t=new Blob([e],{type:"application/json"}),n=URL.createObjectURL(t),a=document.createElement("a");a.href=n,a.download="astro-modular-config.json",document.body.appendChild(a),a.click(),document.body.removeChild(a),URL.revokeObjectURL(n),new N.Notice("Configuration exported successfully!")}importConfiguration(){let e=document.createElement("input");e.type="file",e.accept=".json",e.onchange=async t=>{var a;let n=(a=t.target.files)==null?void 0:a[0];if(n)try{let s=await n.text(),i=JSON.parse(s);this.settings={...this.settings,...i},await this.plugin.saveData(this.settings),new N.Notice("Configuration imported successfully!")}catch(s){new N.Notice("Failed to import configuration. Please check the file format.")}},e.click()}};var le=class extends Se.PluginSettingTab{constructor(t,n,a){super(t,n);this.plugin=n,this.settings=a,this.configManager=new b(t),this.pluginManager=new A(t)}display(){let{containerEl:t}=this;t.empty(),t.addClass("astro-modular-settings");let n=t.createDiv("tab-container"),a=n.createDiv("tab-nav"),s=n.createDiv("tab-content"),i=[{id:"general",name:"General",description:"Basic settings and configuration overview",renderer:new ee(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"site-info",name:"Site Info",description:"Site information and metadata",renderer:new te(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"navigation",name:"Navigation",description:"Navigation pages and social links",renderer:new ae(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"config",name:"Config",description:"Template and content organization",renderer:new ne(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"style",name:"Style",description:"Theme and typography settings",renderer:new se(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"features",name:"Features",description:"Enable or disable theme features",renderer:new ie(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"plugins",name:"Plugins",description:"Configure Obsidian plugins",renderer:new oe(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)},{id:"advanced",name:"Advanced",description:"Advanced settings and utilities",renderer:new re(this.app,this.settings,this.configManager,this.pluginManager,this.plugin)}];i.forEach((o,r)=>{let l=a.createEl("button",{text:o.name,cls:`tab-button ${r===0?"active":""}`});l.title=o.description,l.addEventListener("click",()=>{a.querySelectorAll(".tab-button").forEach(p=>p.classList.remove("active")),l.classList.add("active"),s.style.opacity="0",setTimeout(async()=>{s.empty(),await o.renderer.render(s),s.style.opacity="1"},150)})}),(async()=>await i[0].renderer.render(s))()}};var ce=class extends Ce.Plugin{async onload(){await this.loadSettings(),fe(this,this.settings),this.addSettingTab(new le(this.app,this,this.settings)),this.addRibbonIcon("rocket","Astro Modular Settings",()=>{new E(this.app,this.settings,async n=>{this.settings=n,await this.saveSettings()}).open()}),this.settings.runWizardOnStartup&&(this.startupTimeoutId=window.setTimeout(()=>{this.runStartupWizard()},2e3))}onunload(){this.startupTimeoutId&&(window.clearTimeout(this.startupTimeoutId),this.startupTimeoutId=void 0)}async loadSettings(){this.settings=Object.assign({},L,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async runStartupWizard(){new E(this.app,this.settings,async n=>{this.settings=n,await this.saveSettings()}).open()}openSettings(){this.app.setting.open(),this.app.setting.openTabById(this.manifest.id)}};
